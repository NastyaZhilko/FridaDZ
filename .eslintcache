[{"E:\\plan\\friday_ignatdz\\src\\store\\cards-reducer.ts":"1","E:\\plan\\friday_ignatdz\\src\\App.tsx":"2","E:\\plan\\friday_ignatdz\\src\\components\\routes\\Routes.tsx":"3","E:\\plan\\friday_ignatdz\\src\\store\\login-reducer.ts":"4"},{"size":5396,"mtime":1613673877636,"results":"5","hashOfConfig":"6"},{"size":2538,"mtime":1613673877446,"results":"7","hashOfConfig":"6"},{"size":2037,"mtime":1613673877676,"results":"8","hashOfConfig":"6"},{"size":3194,"mtime":1613673877601,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"1fdvesh",{"filePath":"14","messages":"15","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\plan\\friday_ignatdz\\src\\store\\cards-reducer.ts",["20"],"<<<<<<< HEAD\r\nimport {cardsApi, CardType} from \"../api/api\";\r\n\r\n\r\n\r\ntype ActionsType = ReturnType<typeof setCardsAC>\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    cards: [] as CardType[]\r\n}\r\n\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-CARDS':\r\n            return {...state, cards: action.cards}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCardsAC = (cards: Array<CardType>, packId:string) => ({type: 'SET-CARDS', cards, packId} as const)\r\n\r\n\r\nexport const getCardsTC = (packId:string) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            const response = await cardsApi.getCards(packId)\r\n            const cards = response.data.cards\r\n            dispatch(setCardsAC(cards, packId))\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n=======\r\nimport { packsAPI} from \"../api/api\";\r\n\r\nconst initState = {\r\n    newCards:[{}],\r\n    packsTotalCount:1,\r\n    pageCount: 10,\r\n    page:1,\r\n    // rangeMin: 3,\r\n    // rangeMax:13,\r\n    sortPacks: '0created',\r\n    minCardsCount:0,\r\n    maxCardsCount:10,\r\n}\r\n\r\nfunction cardsReducer(state=initState, action:any){\r\n\r\n    switch (action.type){\r\n\r\n        case 'GET-PACKS':{\r\n\r\n            return  {...state, newCards: action.newCards, packsTotalCount: action.packsTotalCount, pageCount: action.pageCount, page: action.page, rangeMin: action.rangeMin, rangeMax: action.rangeMax}\r\n            //return  {...state, newCards: action.newCards, packsTotalCount: action.packsTotalCount}\r\n        }\r\n        case 'SEARCHED-PACKS':{\r\n\r\n            return {...state, newCards: action.arr, page: action.page, pageCount: action.pageCount}\r\n\r\n        }\r\n        case 'SORT-PACKS-UP':{\r\n            return {...state, newCards: action.newCards, sortPacks: action.sortPacksByDateUp}\r\n        }\r\n        case 'SORT-PACKS-DOWN':{\r\n            return {...state, newCards: action.newCards, sortPacks: action.sortPacksByDateDown}\r\n        }\r\n        case 'CARDS-COUNT':{\r\n\r\n            return {...state,newCards: action.newCards, minCardsCount: action.min, maxCardsCount: action.max}\r\n        }\r\n        default:\r\n            return initState\r\n    }\r\n}\r\nexport default cardsReducer\r\n\r\n// export const cardsTC = () => (dispatch:any) => {\r\n//     cardPacksAPI.getCardPacks(1, 10).then((cards)=>{\r\n//         const packsTotalCount= cards.data.cardPacksTotalCount\r\n//          const newCards = cards.data.cardPacks\r\n//         dispatch({type:'GET-PACKS', newCards, packsTotalCount})\r\n//     })\r\n//\r\n// }\r\n\r\nexport const getPacksTC = () => (dispatch:any) => {\r\n  // const initPage = 1\r\n  // const initPageCount = 10\r\n\r\n    packsAPI.getPacks().then((data)=>{\r\n        const packsTotalCount= data.data.cardPacksTotalCount\r\n         const newCards = data.data.cardPacks\r\n         const page = data.data.page\r\n         const pageCount = data.data.pageCount\r\n         // const rangeMin = data.data.minCardsCount\r\n         // const rangeMax = data.data.maxCardsCount\r\n        dispatch({type:'GET-PACKS', newCards, packsTotalCount, page, pageCount })//rangeMin, rangeMax\r\n        //dispatch({type:'GET-PACKS', newCards, packsTotalCount})\r\n    })\r\n}\r\n\r\nexport const packsTC = (page: number, pageCount:number, sortPacks:any, min:any, max:any) => (dispatch:any) => {\r\n\r\n    packsAPI.getCardPacks(page, pageCount, sortPacks, min,  max).then((cards)=>{\r\n        const packsTotalCount= cards.data.cardPacksTotalCount\r\n        const newCards = cards.data.cardPacks\r\n\r\n        dispatch({type:'GET-PACKS', newCards, packsTotalCount, pageCount:pageCount, page:page})\r\n    })\r\n}\r\nexport const changeInputTC = (e:any, page:any, pageCount:any, sortPacks:any, min:any, max:any) => (dispatch:any) => {\r\n\r\n    packsAPI.getCardPacks(page, pageCount, sortPacks, min, max).then((data) => {\r\n\r\n        const cards = data.data.cardPacks\r\n        const page = data.data.page\r\n        const pageCount = data.data.pageCount\r\n\r\n        const arr = cards.filter((card: any) => {\r\n            return card.name.toLowerCase().indexOf(e.target.value.toLowerCase().trim()) !== -1\r\n\r\n        })\r\n\r\n        dispatch({type: 'SEARCHED-PACKS', arr, page, pageCount })\r\n\r\n    })\r\n}\r\nexport const sortByDateUpTC = (page:any, pageCount:any, sortPacksByDateUp:string, min:any, max:any) => (dispatch:any) => {\r\n    packsAPI.getCardPacks(page, pageCount, sortPacksByDateUp, min, max).then((data)=>{\r\n        const newCards = data.data.cardPacks\r\n        dispatch({type: 'SORT-PACKS-UP', newCards, sortPacksByDateUp})\r\n    })\r\n}\r\n\r\nexport const sortByDateUpDown = (page:any, pageCount:any, sortPacksByDateDown:string, min:any, max:any) => (dispatch:any) => {\r\n    packsAPI.getCardPacks(page, pageCount, sortPacksByDateDown, min, max).then((data)=>{\r\n        const newCards = data.data.cardPacks\r\n        dispatch({type: 'SORT-PACKS-DOWN', newCards, sortPacksByDateDown})\r\n    })\r\n}\r\n\r\nexport const changeSliderTC = (page:any, pageCount:any, sortPacks:any, min:any,max:any) => (dispatch:any) => {\r\n\r\n    packsAPI.getCardPacks(page, pageCount, sortPacks, min,max ).then(data=>{\r\n\r\n        const minCardsCount = data.data.minCardsCount\r\n        const maxCardsCount = data.data.maxCardsCount\r\n        const newCards = data.data.cardPacks\r\n        dispatch({type:'CARDS-COUNT',newCards,  min, max})\r\n\r\n\r\n    })\r\n}\r\n>>>>>>> origin/maxim2\r\n",["21","22"],"E:\\plan\\friday_ignatdz\\src\\App.tsx",["23","24","25","26","27","28","29","30","31","32","33","34","35","36","37"],"E:\\plan\\friday_ignatdz\\src\\components\\routes\\Routes.tsx",["38"],"E:\\plan\\friday_ignatdz\\src\\store\\login-reducer.ts",[],{"ruleId":null,"fatal":true,"severity":2,"message":"39","line":1,"column":0},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":27,"nodeType":"46","messageId":"47","endLine":1,"endColumn":35},{"ruleId":"44","severity":1,"message":"48","line":6,"column":9,"nodeType":"46","messageId":"47","endLine":6,"endColumn":17},{"ruleId":"44","severity":1,"message":"49","line":6,"column":32,"nodeType":"46","messageId":"47","endLine":6,"endColumn":43},{"ruleId":"44","severity":1,"message":"50","line":7,"column":8,"nodeType":"46","messageId":"47","endLine":7,"endColumn":13},{"ruleId":"44","severity":1,"message":"51","line":8,"column":8,"nodeType":"46","messageId":"47","endLine":8,"endColumn":13},{"ruleId":"44","severity":1,"message":"52","line":9,"column":9,"nodeType":"46","messageId":"47","endLine":9,"endColumn":23},{"ruleId":"44","severity":1,"message":"53","line":10,"column":9,"nodeType":"46","messageId":"47","endLine":10,"endColumn":23},{"ruleId":"44","severity":1,"message":"54","line":11,"column":9,"nodeType":"46","messageId":"47","endLine":11,"endColumn":24},{"ruleId":"44","severity":1,"message":"55","line":12,"column":9,"nodeType":"46","messageId":"47","endLine":12,"endColumn":28},{"ruleId":"44","severity":1,"message":"56","line":14,"column":10,"nodeType":"46","messageId":"47","endLine":14,"endColumn":15},{"ruleId":"44","severity":1,"message":"57","line":16,"column":8,"nodeType":"46","messageId":"47","endLine":16,"endColumn":19},{"ruleId":"44","severity":1,"message":"58","line":17,"column":9,"nodeType":"46","messageId":"47","endLine":17,"endColumn":18},{"ruleId":"44","severity":1,"message":"59","line":18,"column":8,"nodeType":"46","messageId":"47","endLine":18,"endColumn":13},{"ruleId":"44","severity":1,"message":"60","line":20,"column":9,"nodeType":"46","messageId":"47","endLine":20,"endColumn":19},{"ruleId":"61","severity":1,"message":"62","line":61,"column":7,"nodeType":"63","endLine":61,"endColumn":9,"suggestions":"64"},{"ruleId":null,"fatal":true,"severity":2,"message":"39","line":10,"column":0},"Parsing error: Merge conflict marker encountered.","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'useSelector' is defined but never used.","'store' is defined but never used.","'axios' is defined but never used.","'registrationAC' is defined but never used.","'RangeComponent' is defined but never used.","'SearchComponent' is defined but never used.","'PaginationComponent' is defined but never used.","'Range' is defined but never used.","'RangeSlider' is defined but never used.","'SliderAnt' is defined but never used.","'Packs' is defined but never used.","'SortByDate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [dispatch]",{"range":"70","text":"71"},[2317,2319],"[dispatch]"]