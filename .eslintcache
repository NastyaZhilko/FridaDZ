[{"E:\\plan\\friday_ignatdz\\src\\store\\new-password-reducer.ts":"1","E:\\plan\\friday_ignatdz\\src\\api\\api.tsx":"2","E:\\plan\\friday_ignatdz\\src\\components\\pages\\new-password.tsx":"3","E:\\plan\\friday_ignatdz\\src\\components\\routes\\Routes.tsx":"4","E:\\plan\\friday_ignatdz\\src\\store\\registration-reducer.ts":"5"},{"size":1652,"mtime":1613127348650,"results":"6","hashOfConfig":"7"},{"size":1545,"mtime":1613127348428,"results":"8","hashOfConfig":"7"},{"size":3953,"mtime":1613132622066,"results":"9","hashOfConfig":"7"},{"size":1792,"mtime":1613138105217,"results":"10","hashOfConfig":"7"},{"size":2389,"mtime":1613140481897,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fdvesh",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\plan\\friday_ignatdz\\src\\store\\new-password-reducer.ts",[],"E:\\plan\\friday_ignatdz\\src\\api\\api.tsx",[],"E:\\plan\\friday_ignatdz\\src\\components\\pages\\new-password.tsx",["23","24"],"import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./new-password.module.css\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {errorAC, newPasswordTC} from \"../../store/new-password-reducer\";\r\nimport {useParams} from 'react-router-dom';\r\n\r\nfunction NewPassword() {\r\n    const dispatch = useDispatch()\r\n    const isNewPasswordSet = useSelector<AppStoreType, boolean>(state => state.newPassword.isNewPasswordSet)\r\n    const error = useSelector<AppStoreType, boolean>(state => state.newPassword.isError)\r\n    const titleError = useSelector<AppStoreType, string | null>(state => state.newPassword.titleError)\r\n    const {resetPasswordToken} = useParams<{ resetPasswordToken: string }>();\r\n    const [passwordLength, setPasswordLength] = useState(true)\r\n    const [passwordLengthDub, setPasswordLengthDub] = useState(true)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [passwordErrorDub, setPasswordErrorDub] = useState(false)\r\n    const [buttonColor, setButtonColor] = useState('')\r\n\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        const password = e.target.password.value\r\n        const repeatPassword = e.target.repeatPassword.value\r\n        password === repeatPassword\r\n            ? dispatch(newPasswordTC(password, resetPasswordToken))\r\n            : dispatch(errorAC('Not equal'))\r\n\r\n    }\r\n    console.log(resetPasswordToken)\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.currentTarget.value.length)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLength(false)\r\n            setPasswordError(false)\r\n            setButtonColor('blue')\r\n        } else {\r\n            setPasswordLength(true)\r\n            setButtonColor('')\r\n        }\r\n    }\r\n    const changePasswordDub = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.currentTarget.value.length)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLengthDub(false)\r\n            setPasswordErrorDub(false)\r\n            setButtonColor('blue')\r\n        } else {\r\n            setPasswordLengthDub(true)\r\n            setButtonColor('')\r\n        }\r\n    }\r\n\r\n    const onblur = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.target.value)\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordError(true)\r\n        }\r\n    }\r\n    const onblurDub = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.target.value)\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordErrorDub(true)\r\n        }\r\n    }\r\n\r\n    if (isNewPasswordSet) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div className={style.container}>\r\n                <h3>Set password</h3>\r\n                <SuperInputText type='password' name='password' placeholder=\"New password\" onChange={changePassword}\r\n                                onBlur={onblur}/>\r\n                {passwordError && <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}\r\n\r\n                <SuperInputText type='password' name='repeatPassword' placeholder=\"Confirm new password\"\r\n                                onChange={changePasswordDub} onBlur={onblurDub}/>\r\n                {passwordErrorDub && <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}\r\n\r\n                <SuperButton type=\"submit\" disabled={passwordLength || passwordLengthDub}\r\n                             style={{background: buttonColor}}>\r\n                    Change password\r\n                </SuperButton>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewPassword;","E:\\plan\\friday_ignatdz\\src\\components\\routes\\Routes.tsx",["25","26"],"E:\\plan\\friday_ignatdz\\src\\store\\registration-reducer.ts",[],{"ruleId":"27","severity":1,"message":"28","line":14,"column":11,"nodeType":"29","messageId":"30","endLine":14,"endColumn":16},{"ruleId":"27","severity":1,"message":"31","line":15,"column":11,"nodeType":"29","messageId":"30","endLine":15,"endColumn":21},{"ruleId":"27","severity":1,"message":"32","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":9},{"ruleId":"33","severity":1,"message":"34","line":32,"column":52,"nodeType":"35","endLine":35,"endColumn":13},"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'titleError' is assigned a value but never used.","'s' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText"]