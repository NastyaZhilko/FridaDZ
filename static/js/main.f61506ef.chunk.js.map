{"version":3,"sources":["components/pages/404.tsx","components/common/SuperInput/SuperInput.tsx","components/common/SuperCheckbox/SuperCheckbox.tsx","components/common/SuperButton/SuperButton.tsx","api/api.tsx","store/login-reducer.ts","components/pages/modal/modal.tsx","components/pages/login.tsx","store/password-recovery-reducer.ts","components/common/preloader.svg","components/pages/Loading.tsx","components/pages/password-recovery.tsx","components/pages/profile.tsx","store/registration-reducer.ts","components/common/SuperPassword/SuperPassword.tsx","components/pages/registration.tsx","store/new-password-reducer.ts","components/pages/new-password.tsx","store/packCards-reducer.ts","components/pages/PackCards.tsx","components/pages/Cards.tsx","store/packs-reducer.ts","components/common/PaginationComponent/PaginationComponent.tsx","components/common/SearchComponent/SearchComponent.tsx","components/common/SortByDate/SortByDate.tsx","components/common/PaginationComponent/RangeAnt/RangeAnt.tsx","components/pages/learn.tsx","components/pages/packs.tsx","components/pages/learnsPage.tsx","components/routes/Routes.tsx","components/header/Header.tsx","App.tsx","reportWebVitals.ts","store/error-reducer.ts","store/profile-reducer.ts","store/store.ts","index.tsx","components/header/Header.module.css","components/pages/packs.module.css","components/pages/learnsPage.module.css","components/pages/new-password.module.css","components/common/SuperInput/SuperInput.module.css","components/pages/modal/modal.module.css","components/common/SuperPassword/SuperPassword.module.css","components/common/PaginationComponent/PaginationComponent.module.css","components/common/SuperCheckbox/SuperCheckbox.module.css","components/common/SuperButton/SuperButton.module.css","components/pages/password-recovery.module.css"],"names":["Error404","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","api","axios","create","baseURL","withCredentials","passwordAPI","email","post","from","message","password","resetPasswordToken","data","authAPI","delete","packsAPI","page","pageCount","sortPacks","min","max","get","params","cardsPack","name","id","cardsAPI","cardsPackId","cardsPack_id","card","question","answer","put","_id","comments","gradeCardAPI","grade","initState","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","isAuth","isFetching","showSuccessModal","setAuthUserDataAC","payload","toggleIsFetching","setShowSuccessModalAC","show","Modal","props","modalStyles","top","height","left","width","CSSStyles","backgroundDiv","onClick","bgOnClick","style","modalWindow","title","buttonsStyle","Login","dispatch","useDispatch","useSelector","state","login","to","onSubmit","preventDefault","then","response","setTimeout","catch","console","log","titleError","SuperInput","placeholder","backgroundColor","initialState","isMessageSend","isError","isLoading","errorAC","loadingAC","Loading","src","preloader","PasswordRecovery","registration","target","a","passwordRecoveryTC","container","Profile","userData","profile","REGISTRATION","ERROR","LOADING","isRegistration","SuperPassword","Registration","useState","passwordLength","setPasswordLength","emailLength","setEmailLength","passwordError","setPasswordError","emailError","setEmailError","emailValue","setEmailValue","passwordValue","setPasswordValue","registrationData","obj","finally","marginTop","length","indexOf","onBlur","color","disabled","undefined","background","isNewPasswordSet","NewPassword","newPassword","useParams","passwordLengthDub","setPasswordLengthDub","passwordErrorDub","setPasswordErrorDub","buttonColor","setButtonColor","repeatPassword","newPasswordTC","status","cards","setErrorAC","setIsLoadingAC","getCardsTC","getCardsAC","err","PackCards","packId","packCards","useEffect","createCard","deleteCard","card_id","res","deleteCardTC","updateCard","updateCardTC","table","tableItem","tableHeader","map","Cards","packs","packsTotalCount","minCardsCount","maxCardsCount","inputValueSearch","packsReducer","action","filteredPacks","sortPacksByDateUp","sortPacksByDateDown","getPacksAC","getPacksTC","cardPacksTotalCount","cardPacks","packsTC","filter","pack","toLowerCase","PaginationComponent","options","initValueOption","setValue","Math","ceil","display","justifyContent","margin","Number","option","index","marginPagesDisplayed","pageRangeDisplayed","breakClassName","breakMe","containerClassName","pagination","activeClassName","active","onPageChange","selected","SearchComponent","debounceChangeInput","fn","ms","timeout","fnCall","apply","arguments","clearTimeout","debounce","trim","searchedPacksAC","changeInputTC","SortByDate","buttonStyle1","buttonStyle2","sortPacksUPAC","sortByDateUpTC","sortPacksDownAC","sortByDateDown","SliderAnt","ref","useRef","range","setRange","step","current","cardsCountAC","changeSliderTC","Learn","Packs","deletePack","deletePackTC","cardsCount","LearnCard","checkMode","setCheckMode","numberCurrentCard","setNumberCurrentCard","addGrade","gradeTC","sortCards","gradeArr","chance","random","currentInd","maxVal","forEach","el","text","button","PATH","Routes","path","exact","render","Header","activeMenu","setActiveMenu","sidebar","menu","containerMenuLinks","inactive","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","userId","userName","reducers","combineReducers","passwordRecovery","store","createStore","applyMiddleware","thunk","window","getState","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f61506ef.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e); // ?\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error?s.errorInput:s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;","\r\nimport React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className} `;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import axios from \"axios\";\r\nimport {LoginFormData} from \"../store/login-reducer\";\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    //baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport type SetNewPasswordParamsType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\nexport type ResponseRestoreType = {\r\n    info: string\r\n    error: string\r\n}\r\nexport type RegistrationDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type ResponseRegistrationDataType = {\r\n    addedUser: {\r\n        _id: string\r\n        email: string\r\n        rememberMe: boolean\r\n        isAdmin: boolean\r\n        name: string\r\n        verified: boolean\r\n        publicCardPacksCount: number\r\n        created: string\r\n        updated: string\r\n    }\r\n}\r\nexport const passwordAPI = {\r\n    forgot(email: string | null) {\r\n        return api.post<ResponseRestoreType>('auth/forgot', {\r\n            email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n              password recovery link: \t\r\n              <a href='http://localhost:3000/FridaDZ#/newPassword/$token$'>\t\r\n              Link </a></div>`\r\n        })\r\n    },\r\n\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return api.post<ResponseRestoreType>('auth/set-new-password', {password, resetPasswordToken})\r\n    },\r\n\r\n    registration(data: RegistrationDataType) {\r\n        return api.post<ResponseRegistrationDataType>('auth/register', data)\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    login(data: LoginFormData) {\r\n        return api.post('auth/login', data)\r\n    },\r\n    authMe() {\r\n        return api.post('auth/me', {})\r\n    },\r\n    logout() {\r\n        return api.delete('auth/me')\r\n    }\r\n};\r\n\r\n//типизация и апи для колод\r\nexport type CardsPackDataType = {\r\n    name: string\r\n}\r\nexport type CardPacksType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v: number\r\n}\r\nexport type CardPacksResponseType = {\r\n    cardPacks: Array<CardPacksType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\nexport type UpdatePacksDataType = {\r\n    _id: string\r\n    name?: string\r\n}\r\n\r\nexport const packsAPI = {\r\n\r\n    getCardPacks(\r\n        page: number = 1,\r\n        pageCount: number = 10,\r\n        sortPacks: string = '0created',\r\n        min: number = 0,\r\n        max: number = 24\r\n    ) {\r\n        return api.get<CardPacksResponseType>('/cards/pack', {\r\n\r\n            params: {\r\n                page,\r\n                pageCount,\r\n                sortPacks,\r\n                min,\r\n                max\r\n            }\r\n        })\r\n    },\r\n    createPack() {\r\n        return api.post(`cards/pack`, {cardsPack: {name: 'title'}})\r\n    },\r\n    deletePack(id: string) {\r\n        return api.delete(`cards/pack`, {params: {id}})\r\n    },\r\n    updatePack(id: string, name: string) {\r\n        return api.put(`cards/pack/`, {cardsPack: {_id: id, name}})\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//типизация и апи для карточек\r\n\r\nexport type CardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n    questionImg:string\r\n    comments:string\r\n    type: string\r\n    rating: number\r\n    more_id:string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n\r\n}\r\n\r\n\r\n\r\nexport type CardsResponseType={\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n\r\n}\r\nexport type CreateCardRequestType = {\r\n    cardsPack_id: string\r\n    question?: string\r\n    answer?: string\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards(cardsPackId: string, pageCount: number = 24, page: number = 1) {\r\n        return api.get<CardsResponseType>(`cards/card?cardsPack_id=${cardsPackId}&pageCount=${pageCount}&page=${page}`)\r\n    },\r\n    createCard(cardsPack_id:string){\r\n        return api.post(`cards/card`,{card:{cardsPack_id,question:'new question',answer:'new answer'}})\r\n    },\r\n    deleteCard(id:string){\r\n        return api.delete(`cards/card?id=${id}`)\r\n    },\r\n    updateCard(id:string){\r\n        return api.put(`cards/card`,{card:{_id:id, question:'update question',comments:'new'}})\r\n    }\r\n   /* updateCardGrade(card_id:string, grade: number){\r\n        return api.put(`cards/grade`, {updatedGrade: { grade,_id: card_id}})\r\n    }*/\r\n}\r\nexport const gradeCardAPI = {\r\n    gradeCard(id: string, grade: number){\r\n        return api.put(\"cards/card\",  {card: {_id: id, grade}})\r\n    }\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {authAPI} from \"../api/api\";\r\n\r\nexport type LoginFormData = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\ntype UserAuthData = {\r\n    data: UserDataType\r\n    isAuth: boolean\r\n    isFetching: boolean\r\n    error: string | null\r\n    showSuccessModal: boolean\r\n}\r\n\r\n/*email: \"nya-admin@nya.nya\",\r\n    password: \"1qazxcvBG\",*/\r\n\r\n\r\nconst initState: UserAuthData = {\r\n    data: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: \"\",\r\n        publicCardPacksCount: 0,\r\n        created: '',\r\n        updated: '',\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n\r\n    },\r\n    isAuth: false,\r\n    isFetching: false,\r\n    error: '',\r\n    showSuccessModal: false\r\n};\r\n\r\nexport const loginReducer = (state = initState, action: ActionsType): UserAuthData => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\": {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case \"ERROR\": {\r\n\r\n            return {...state, error: action.titleError}\r\n        }\r\n        case \"TOGGLE-IS-FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case \"SET-SHOW-SUCCESS-MODAL\":\r\n            return {...state, showSuccessModal: action.show}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setAuthUserDataAC = (data: UserDataType, isAuth: boolean) => {\r\n    return {\r\n        type: 'SET-USER-DATA',\r\n        payload: {data, isAuth}\r\n    } as const\r\n}\r\nconst errorAC = (titleError: string | null) => ({type: 'ERROR', titleError} as const)\r\n\r\nconst toggleIsFetching = (isFetching: boolean) => ({\r\n    type: 'TOGGLE-IS-FETCHING',\r\n    isFetching\r\n} as const)\r\nexport const setShowSuccessModalAC = (show: boolean) => ({type: \"SET-SHOW-SUCCESS-MODAL\", show} as const)\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof setAuthUserDataAC>\r\n    | ReturnType<typeof errorAC>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof setShowSuccessModalAC>\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\n\r\n\r\nexport const loginAC = (data: LoginFormData) => ({type: 'LOGIN', data} as const);\r\n\r\nexport const login = (data: LoginFormData): ThunkType => {\r\n\r\n    return (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        authAPI.login(data)\r\n            .then(response => {\r\n                let data: UserDataType = response.data\r\n                let isAuth = true\r\n                dispatch(setAuthUserDataAC(data, isAuth))\r\n                dispatch(setShowSuccessModalAC(true))\r\n                setTimeout(() => {\r\n                    dispatch(setShowSuccessModalAC(false))\r\n                }, 2000)\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console')\r\n                console.log('Error: ', {...e})\r\n                console.log(error)\r\n                dispatch(errorAC(error))\r\n            })\r\n        dispatch(toggleIsFetching(false))\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n        authAPI.logout()\r\n            .then(() => dispatch(setAuthUserDataAC(initState.data, false)))\r\n        dispatch(setShowSuccessModalAC(true))\r\n        setTimeout(() => {\r\n            dispatch(setShowSuccessModalAC(false))\r\n        }, 2000)\r\n    }\r\n}\r\n","import React from 'react';\r\nimport style from './modal.module.css'\r\n\r\ntype PropsType = {\r\n    title: string\r\n    width: number\r\n    height: number\r\n    backgroundDiv: boolean\r\n    bgOnClick: () => void\r\n    CSSStyles?:  React.CSSProperties\r\n}\r\n\r\nexport const Modal: React.FC<PropsType> = (props) => {\r\n    const modalStyles = {\r\n        top: `calc(50vh - ${props.height / 2}px)`,\r\n        left: `calc(50vw - ${props.width / 2}px)`,\r\n        width: props.width,\r\n        height: props.height,\r\n        ...props.CSSStyles\r\n    } as const\r\n    return (\r\n        <>\r\n            {props.backgroundDiv && <div onClick={props.bgOnClick} className={style.backgroundDiv}></div>}\r\n            <div className={style.modalWindow} style={modalStyles}>\r\n                <h3>{props.title}</h3>\r\n                <div className={style.buttonsStyle}>{props.children}</div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { FormEvent } from \"react\";\r\nimport SuperInput from \"../common/SuperInput/SuperInput\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login, LoginFormData} from \"../../store/login-reducer\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Modal} from \"./modal/modal\";\r\n\r\nexport function Login() {\r\n\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n    const show = useSelector<AppStoreType, boolean>(state => state.login.showSuccessModal)\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    const submitLoginData = (e: FormEvent<HTMLFormElement>) => {\r\n\r\n        e.preventDefault();\r\n        const email = e.currentTarget.email.value\r\n        const password = e.currentTarget.password.value\r\n        const rememberMe: boolean = e.currentTarget.rememberMe.value\r\n        const data: LoginFormData = {email, password, rememberMe}\r\n        dispatch(login(data))\r\n    }\r\n\r\n    const loginStyle = {\r\n        'display': 'flex',\r\n        'flex-direction': 'column',\r\n        'align-items': 'center'\r\n    }\r\n    let top: number;\r\n    if(show) {\r\n        top = 100\r\n    }else{\r\n        top = -100\r\n    }\r\n\r\n    return (\r\n       <> <form onSubmit={submitLoginData}>\r\n            <div style={loginStyle}>\r\n                <h2>Login</h2>\r\n                <SuperInput name={'email'} placeholder={'Enter your email'}/>\r\n                <SuperInput name={'password'} type={'password'} placeholder={'Enter your password'}/>\r\n                <div><SuperCheckbox name={'rememberMe'} type={'checkbox'}/>\r\n                    <span>Remember Me</span></div>\r\n                <SuperButton type={'submit'}>Send</SuperButton>\r\n            </div>\r\n        </form>\r\n           <Modal title={\"Success\"} width={100} height={50} backgroundDiv={false} bgOnClick={() => {}}\r\n                  CSSStyles={{\r\n                      top: top+\"px\",\r\n                      backgroundColor: \"lightgreen\"\r\n                  }}\r\n           />\r\n       </>\r\n    );\r\n}\r\n\r\nexport default Login;","import {AppStoreType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {passwordAPI} from \"../api/api\";\r\n\r\n\r\nconst initialState = {\r\n    isMessageSend: false,\r\n    isError: false,\r\n    titleError: null as string|null,\r\n    isLoading: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = ReturnType<typeof passwordRecoveryAC>|ReturnType<typeof errorAC>|ReturnType<typeof loadingAC>\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\n\r\n\r\nexport const passwordRecoveryReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PASSWORD-RECOVERY': {\r\n            return {...state, isMessageSend: true};\r\n        }\r\n        case \"ERROR\": {\r\n            return {...state, isError: true, titleError: action.titleError}\r\n        }\r\n        case \"LOADING\": {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst passwordRecoveryAC = () => ({type: 'PASSWORD-RECOVERY'} as const);\r\nconst errorAC = (titleError:string|null) => ({type: 'ERROR', titleError} as const)\r\nconst loadingAC = (isLoading:boolean) => ({type: 'LOADING', isLoading} as const)\r\n\r\nexport const passwordRecoveryTC = (email: string | null): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(loadingAC(true))\r\n        await passwordAPI.forgot(email)\r\n        dispatch(passwordRecoveryAC())\r\n        dispatch(errorAC(null))\r\n    } catch  (e) {\r\n        dispatch(errorAC(e.response.data.error));\r\n\r\n    } finally {\r\n        dispatch(loadingAC(false))\r\n    }\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/preloader.0116944b.svg\";","import React from \"react\";\r\nimport preloader from '../common/preloader.svg'\r\nfunction Loading(){\r\n    return(\r\n        <div>\r\n            <img src={preloader} />\r\n        </div>\r\n    )\r\n}\r\nexport default Loading","import React, {ChangeEvent} from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./password-recovery.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {passwordRecoveryTC} from \"../../store/password-recovery-reducer\";\r\nimport Loading from \"./Loading\";\r\n\r\nfunction PasswordRecovery() {\r\n    const dispatch = useDispatch()\r\n    //const isMailSend = useSelector<AppStoreType, boolean>(state => state.passwordRecovery.isMessageSend)\r\n    const isLoading = useSelector<AppStoreType, boolean>((state) => state.registration.isLoading)\r\n    const sendMail =(e:any)=>{\r\n        e.preventDefault();\r\n        const email = e.target.email.value\r\n       // alert(email)\r\n        dispatch(passwordRecoveryTC(email))\r\n\r\n    }\r\n    if (isLoading) {\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n  /*  if (isMailSend) {\r\n        return <Redirect to={'/login'}/>\r\n    }*/\r\n    return (\r\n        <form onSubmit={sendMail}>\r\n        <div>\r\n            <h3>Password recovery</h3>\r\n            <div className={style.container}>\r\n                <SuperInputText name={'email'}  placeholder={'Email'}/>\r\n                <span>Enter your email</span>\r\n                <SuperButton>\r\n                    Send\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PasswordRecovery;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {UserDataType} from \"../../store/login-reducer\";\r\n\r\nfunction Profile() {\r\n\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n    const userData = useSelector<AppStoreType, UserDataType>(state => state.login.data)\r\n    const cardsCount = useSelector<AppStoreType, number | null>(state => state.profile.publicCardPacksCount)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Profile</h3>\r\n\r\n            {isAuth\r\n                ? <div>\r\n                   <div> Name: {userData.name}</div>\r\n                  {/* <div> Count of cards: {cardsCount}</div>*/}\r\n\r\n\r\n\r\n            </div>\r\n                : <Redirect to={'login'}/>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {Dispatch} from \"react\";\r\nimport {RegistrationDataType, passwordAPI} from \"../api/api\";\r\n\r\nconst REGISTRATION = \"REGISTRATION\"\r\nconst ERROR = \"ERROR\"\r\nconst LOADING = \"LOADING\"\r\n\r\nconst initState = {\r\n    isRegistration: false,\r\n    isError: false,\r\n    titleError: '',\r\n    isLoading: false\r\n};\r\ntype initStateType = {\r\n    isRegistration: boolean\r\n    isError: boolean\r\n    titleError: string\r\n    isLoading: boolean\r\n}\r\n\r\ntype ActionType = RegistrationType | ErrorType | LoadingType\r\n\r\nexport const registrationReducer = (state = initState, action: ActionType): initStateType => {\r\n    switch (action.type) {\r\n        case REGISTRATION: {\r\n            return {...state, isRegistration: true};\r\n        }\r\n        case ERROR: {\r\n            return {...state, isError: true, titleError: action.titleError};\r\n        }\r\n        case LOADING: {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\ntype RegistrationType = {\r\n    type: typeof REGISTRATION\r\n}\r\ntype ErrorType = {\r\n    type: typeof ERROR\r\n    titleError: string\r\n}\r\ntype LoadingType = {\r\n    type: typeof LOADING\r\n    isLoading: boolean\r\n}\r\nexport const registrationAC = (): RegistrationType => {\r\n    return {type: 'REGISTRATION'}\r\n};\r\nexport const errorAC = (titleError:string,): ErrorType => {\r\n    return {type: 'ERROR', titleError: titleError}\r\n};\r\nexport const loadingAC = (isLoading:boolean): LoadingType => {\r\n    return {type: 'LOADING', isLoading: isLoading}\r\n};\r\n\r\ntype ResponseErrorType = {\r\n    response:DataType\r\n}\r\ntype DataType = {\r\n        data : {\r\n            error: string\r\n            in: string\r\n            isEmailValid?: boolean\r\n            isPassValid?: boolean\r\n            passwordRegExp?: string\r\n        }\r\n}\r\n\r\nexport const registrationThunkCreator = (registrationData:RegistrationDataType) => (dispatch:Dispatch<any>) => {\r\n                dispatch(loadingAC(true))\r\n            passwordAPI.registration(registrationData)\r\n                .then((data) => {\r\n                    dispatch(registrationAC())\r\n                })\r\n                .catch((error: ResponseErrorType)=>{\r\n                    dispatch(errorAC(error.response.data.error))\r\n                })\r\n                .finally(()=>{\r\n                    dispatch(loadingAC(false))\r\n            })\r\n\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperPassword.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperPassword: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e); // ?\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error?s.errorInput:s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"password\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperPassword;","import React, {useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registrationThunkCreator} from \"../../store/registration-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport style from \"./new-password.module.css\";\r\nimport SuperPassword from \"../common/SuperPassword/SuperPassword\";\r\n\r\nfunction Registration() {\r\n    const dispatch = useDispatch()\r\n    const isRegistration = useSelector<AppStoreType, boolean>((state) => state.registration.isRegistration)\r\n    const isError = useSelector<AppStoreType, boolean>((state) => state.registration.isError)\r\n    const titleError = useSelector<AppStoreType, string>((state) => state.registration.titleError)\r\n    const isLoading = useSelector<AppStoreType, boolean>((state) => state.registration.isLoading)\r\n    const [passwordLength, setPasswordLength] = useState(true)\r\n    const [emailLength, setEmailLength] = useState(true)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [emailError, setEmailError] = useState(false)\r\n    const [emailValue, setEmailValue] = useState('')\r\n    const [passwordValue, setPasswordValue] = useState('')\r\n\r\n    function submit(e: any) { // e:React.FormEvent<HTMLFormElement>\r\n        e.preventDefault();\r\n        const obj = {\r\n            email: e.target.email.value,\r\n            password: e.target.password.value\r\n        }\r\n        dispatch(registrationThunkCreator(obj))\r\n    }\r\n\r\n    function changePassword(e: any) {\r\n        setPasswordValue(e.currentTarget.value)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLength(false)\r\n            setPasswordError(false)\r\n\r\n        } else {\r\n            setPasswordLength(true)\r\n        }\r\n    }\r\n\r\n    function changEmail(e: any) {\r\n        setEmailValue(e.currentTarget.value)\r\n        if (e.currentTarget.value.length >= 7 && (e.currentTarget.value.indexOf(\"@\") !== -1)) {\r\n            setEmailLength(false)\r\n            setEmailError(false)\r\n        } else {\r\n            setEmailLength(true)\r\n        }\r\n    }\r\n\r\n    function blurPassword(e: any) {\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordError(true)\r\n        }\r\n    }\r\n\r\n    function blurEmail(e: any) {\r\n        if (e.currentTarget.value.length < 7 || (e.currentTarget.value.indexOf(\"@\") == -1)) {\r\n            setEmailError(true)\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n    if (isRegistration) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <form onSubmit={submit} style={{marginTop: '50px'}}>\r\n                <div><label>Email<SuperInputText name={'email'} onChange={changEmail} value={emailValue}\r\n                                                 onBlur={blurEmail}/></label></div>\r\n                <div style={{height: '50px'}}>{emailError &&\r\n                <div style={{color: \"red\"}}>{'not valid email'}</div>}</div>\r\n                <div><label>Password<SuperPassword type={'password'} name={'password'} onChange={changePassword}\r\n                                                   value={passwordValue} onBlur={blurPassword}/></label></div>\r\n                <div style={{height: '50px'}}>{passwordError &&\r\n                <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}</div>\r\n                <div><SuperButton disabled={passwordLength || emailLength}\r\n                                  style={(passwordLength || emailLength) ? undefined : {background: \"green\"}}>registration</SuperButton>\r\n                </div>\r\n                {isError && <div style={{color: \"red\"}}>{titleError}</div>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {passwordAPI} from \"../api/api\";\r\n\r\n\r\nconst initialState = {\r\n    isNewPasswordSet: false,\r\n    isError: false,\r\n    titleError: null as string|null,\r\n    isLoading: false\r\n};\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = ReturnType<typeof newPasswordAC> | ReturnType<typeof errorAC> | ReturnType<typeof loadingAC>\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\n\r\nexport const newPasswordReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"NEW-PASSWORD\": {\r\n            return {...state, isNewPasswordSet: true};\r\n        }\r\n        case \"ERROR\": {\r\n            return {...state, isError: true, titleError: action.titleError}\r\n        }\r\n        case \"LOADING\": {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const newPasswordAC = () => ({type: \"NEW-PASSWORD\"} as const)\r\n\r\nexport const errorAC = (titleError: string,) => ({type: 'ERROR', titleError} as const)\r\n\r\nexport const loadingAC = (isLoading: boolean) => ({type: 'LOADING', isLoading} as const)\r\n\r\n\r\nexport const newPasswordTC = (password: string, resetPasswordToken: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(loadingAC(true))\r\n        await passwordAPI.setNewPassword(password, resetPasswordToken)\r\n        dispatch(newPasswordAC())\r\n    } catch (e) {\r\n        dispatch(errorAC(e.response.data.error));\r\n    } finally {\r\n        dispatch(loadingAC(false))\r\n    }\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./new-password.module.css\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {errorAC, newPasswordTC} from \"../../store/new-password-reducer\";\r\nimport {useParams} from 'react-router-dom';\r\n\r\nfunction NewPassword() {\r\n    const dispatch = useDispatch()\r\n    const isNewPasswordSet = useSelector<AppStoreType, boolean>(state => state.newPassword.isNewPasswordSet)\r\n    const error = useSelector<AppStoreType, boolean>(state => state.newPassword.isError)\r\n    const titleError = useSelector<AppStoreType, string | null>(state => state.newPassword.titleError)\r\n    const {resetPasswordToken} = useParams<{ resetPasswordToken: string }>();\r\n    const [passwordLength, setPasswordLength] = useState(true)\r\n    const [passwordLengthDub, setPasswordLengthDub] = useState(true)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [passwordErrorDub, setPasswordErrorDub] = useState(false)\r\n    const [buttonColor, setButtonColor] = useState('')\r\n\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        const password = e.target.password.value\r\n        const repeatPassword = e.target.repeatPassword.value\r\n        password === repeatPassword\r\n            ? dispatch(newPasswordTC(password, resetPasswordToken))\r\n            : dispatch(errorAC('Not equal'))\r\n\r\n    }\r\n    console.log(resetPasswordToken)\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.currentTarget.value.length)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLength(false)\r\n            setPasswordError(false)\r\n            setButtonColor('blue')\r\n        } else {\r\n            setPasswordLength(true)\r\n            setButtonColor('')\r\n        }\r\n    }\r\n    const changePasswordDub = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.currentTarget.value.length)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLengthDub(false)\r\n            setPasswordErrorDub(false)\r\n            setButtonColor('blue')\r\n        } else {\r\n            setPasswordLengthDub(true)\r\n            setButtonColor('')\r\n        }\r\n    }\r\n\r\n    const onblur = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.target.value)\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordError(true)\r\n        }\r\n    }\r\n    const onblurDub = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.target.value)\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordErrorDub(true)\r\n        }\r\n    }\r\n\r\n    if (isNewPasswordSet) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div className={style.container}>\r\n                <h3>Set password</h3>\r\n                <SuperInputText type='password' name='password' placeholder=\"New password\" onChange={changePassword}\r\n                                onBlur={onblur}/>\r\n                {passwordError && <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}\r\n\r\n                <SuperInputText type='password' name='repeatPassword' placeholder=\"Confirm new password\"\r\n                                onChange={changePasswordDub} onBlur={onblurDub}/>\r\n                {passwordErrorDub && <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}\r\n\r\n                <SuperButton type=\"submit\" disabled={passwordLength || passwordLengthDub}\r\n                             style={{background: buttonColor}}>\r\n                    Change password\r\n                </SuperButton>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewPassword;","import {cardsAPI, CardType, gradeCardAPI, packsAPI} from \"../api/api\";\r\nimport {getPacksTC, IsLoadingValuesType} from \"./packs-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\n\r\ntype InitialStateType= typeof initialState\r\n\r\nconst initialState = {\r\n    status: \"idle\" as IsLoadingValuesType,\r\n    error: null as string|null,\r\n    cards: [] as Array<CardType>,\r\n    showSuccessModal: false\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\ntype ActionsType = ReturnType<typeof setErrorAC>\r\n    |ReturnType<typeof setIsLoadingAC>\r\n    |ReturnType<typeof getCardsAC>\r\n    |ReturnType<typeof setShowSuccessModalAC>\r\n\r\n\r\n\r\nexport function packCardsReducer(state=initialState, action:ActionsType):InitialStateType{\r\n    switch(action.type){\r\n        case \"SET-IS-LOADING\":\r\n            return {...state, status: action.status}\r\n\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n\r\n        case 'GET-CARDS':{\r\n            return {...state, cards: action.cards}\r\n        }\r\n        case \"SET-SHOW-SUCCESS-MODAL\":\r\n            return {...state, showSuccessModal: action.show}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//actions\r\nconst setErrorAC = (error: string | null) => ({type: \"SET-ERROR\", error} as const)\r\n\r\nconst setIsLoadingAC = (status: IsLoadingValuesType) => ({type: \"SET-IS-LOADING\", status} as const)\r\n\r\nconst getCardsAC = (cards: Array<CardType>) => ({type: 'GET-CARDS', cards} as const)\r\n\r\nconst setShowSuccessModalAC = (show: boolean) => (\r\n    {type: \"SET-SHOW-SUCCESS-MODAL\", show} as const)\r\n\r\nexport const getCardsTC = (cardsPackId:string):ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    cardsAPI.getCards(cardsPackId)\r\n        .then(data=>{\r\n        const cards = data.data.cards\r\n        dispatch(getCardsAC(cards))\r\n        dispatch(setIsLoadingAC(\"idle\"))\r\n    })\r\n        .catch(err => {\r\n        if (err.response) {\r\n            dispatch(setErrorAC(err.response.data.error))\r\n        } else {\r\n            dispatch(setErrorAC(\"Some error\"))\r\n        }\r\n        dispatch(setIsLoadingAC(\"idle\"))\r\n    })\r\n}\r\n\r\nexport const createCardTC = (cardsPack_id: string): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    cardsAPI.createCard(cardsPack_id)\r\n        .then(data => {\r\n            const cards = data.data.cards\r\n            dispatch(getCardsTC(cardsPack_id))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n            dispatch(setShowSuccessModalAC(true))\r\n            setTimeout(() => {\r\n                dispatch(setShowSuccessModalAC(false))\r\n            }, 2000)\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\n\r\nexport const deleteCardTC = (id: string, packId: string): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    cardsAPI.deleteCard(id)\r\n        .then(res => {\r\n            dispatch(getCardsTC(packId))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const updateCardTC = (id: string, packId: string): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    cardsAPI.updateCard(id)\r\n        .then(res => {\r\n            dispatch(getCardsTC(packId))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const gradeTC = (id: string, grade: number) => (dispatch:any) => {\r\n\r\n    gradeCardAPI.gradeCard(id, grade)\r\n\r\n        .then(res => {\r\n\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n            dispatch(setShowSuccessModalAC(true))\r\n            setTimeout(() => {\r\n                dispatch(setShowSuccessModalAC(false))\r\n            }, 2000)\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createCardTC, deleteCardTC, getCardsTC, updateCardTC} from \"../../store/packCards-reducer\";\r\nimport {IsLoadingValuesType} from \"../../store/packs-reducer\";\r\nimport style from \"./packs.module.css\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {CardType} from \"../../api/api\";\r\nimport {Modal} from \"./modal/modal\";\r\n\r\n\r\nexport function PackCards() {\r\n    const {packId} = useParams<{ packId: string }>();\r\n    const dispatch = useDispatch()\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.packCards.cards)\r\n    const status = useSelector<AppStoreType, IsLoadingValuesType>(state => state.cards.status)\r\n    const show = useSelector<AppStoreType, boolean>(state => state.packCards.showSuccessModal)\r\n    useEffect(() => {\r\n        dispatch(getCardsTC(packId))\r\n    }, [dispatch])\r\n    const createCard = (id: string) => dispatch(createCardTC(id))\r\n    const deleteCard = (card_id: string) => dispatch(deleteCardTC(card_id, packId))\r\n    const updateCard = (card_id: string) => dispatch(updateCardTC(card_id, packId))\r\n    let top: number;\r\n    if(show) {\r\n        top = 100\r\n    }else{\r\n        top = -100\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Cards</h1>\r\n            <div className={style.table}>\r\n                <table>\r\n                    <div className={`${style.tableItem} ${style.tableHeader}`}>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Question</th>\r\n                            <th>Answer</th>\r\n                            <th>Grade</th>\r\n                            <th>Updated</th>\r\n                            <th><label>Add item: <button disabled={status === 'loading'}\r\n                                                         onClick={() => createCard(packId)}>Add</button>\r\n                            </label></th>\r\n                        </tr>\r\n                        </thead>\r\n                    </div>\r\n                    <div className={style.tableItem}>\r\n                        <tbody>\r\n                        {cards.map((card: CardType) => {\r\n                            return <tr key={card._id}>\r\n                                <td>{`${card.question}`} </td>\r\n                                <td>{`${card.answer}`}</td>\r\n                                <td>{`${card.grade}`}</td>\r\n                                <td>{`${card.updated}`}</td>\r\n                                <td>\r\n                                    <div className={style.tableItem}>\r\n                                        <button name={\"del\"} disabled={status === 'loading'}\r\n                                                onClick={() => deleteCard(card._id)}>\r\n                                            Delete\r\n                                        </button>\r\n                                        <button name={\"update\"} disabled={status === 'loading'}\r\n                                                onClick={() => updateCard(card._id)}>Update</button>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        })}\r\n                        </tbody>\r\n                    </div>\r\n                </table>\r\n                <Modal title={\"Success\"} width={100} height={50} backgroundDiv={false} bgOnClick={() => {}}\r\n                       CSSStyles={{\r\n                           top: top+\"px\",\r\n                           backgroundColor: \"lightgreen\"\r\n                       }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport function Cards({packId}:any){\r\n    return(\r\n        <NavLink to={`/packs/${packId}`}>cards</NavLink>\r\n    )\r\n}","import {CardPacksType, packsAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\n\r\n\r\nexport type IsLoadingValuesType = 'loading' | 'idle'\r\n\r\ntype InitStateType = typeof initState\r\nconst initState = {\r\n    status: \"idle\" as IsLoadingValuesType,\r\n    error: null as string|null,\r\n    packs:[] as Array<CardPacksType>,\r\n    packsTotalCount:1,\r\n    pageCount: 10,\r\n    page:1,\r\n    sortPacks: '0created',\r\n    minCardsCount:0,\r\n    maxCardsCount:10,\r\n    inputValueSearch:'',\r\n    showSuccessModal: false\r\n}\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\ntype ActionsType=\r\n    ReturnType<typeof setErrorAC>\r\n    |ReturnType<typeof setIsLoadingAC>\r\n    |ReturnType<typeof getPacksAC>\r\n    |ReturnType<typeof searchedPacksAC>\r\n    |ReturnType<typeof sortPacksUPAC>\r\n    |ReturnType<typeof sortPacksDownAC>\r\n    |ReturnType<typeof sortPacksDownAC>\r\n    |ReturnType<typeof cardsCountAC>\r\n    |ReturnType<typeof setShowSuccessModalAC>\r\n\r\nfunction packsReducer(state=initState, action:ActionsType):InitStateType {\r\n\r\n    switch (action.type){\r\n\r\n        case \"SET-IS-LOADING\":\r\n            return {...state, status: action.status}\r\n\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n\r\n        case 'GET-PACKS':{\r\n\r\n            return  {...state, packs: action.filteredPacks, packsTotalCount: action.packsTotalCount,\r\n                pageCount: action.pageCount, page: action.page}\r\n            //return  {...state, newCards: action.newCards, packsTotalCount: action.packsTotalCount}\r\n        }\r\n        case 'SEARCHED-PACKS':{\r\n\r\n            return {...state, packs: action.filteredPacks, page: action.page, pageCount: action.pageCount, inputValueSearch: action.inputValueSearch}\r\n\r\n        }\r\n        case 'SORT-PACKS-UP':{\r\n            return {...state, packs: action.filteredPacks, sortPacks: action.sortPacksByDateUp}\r\n        }\r\n        case 'SORT-PACKS-DOWN':{\r\n            return {...state, packs: action.filteredPacks, sortPacks: action.sortPacksByDateDown}\r\n        }\r\n        case 'CARDS-COUNT':{\r\n\r\n            return {...state,packs: action.packs, minCardsCount: action.min, maxCardsCount: action.max, packsTotalCount: action.packsTotalCount}\r\n        }\r\n        case \"SET-SHOW-SUCCESS-MODAL\":\r\n            return {...state, showSuccessModal: action.show}\r\n\r\n        default:\r\n            return initState\r\n    }\r\n}\r\nexport default packsReducer\r\n\r\n//actions\r\n\r\nconst setErrorAC = (error: string | null) => ({type: \"SET-ERROR\", error} as const)\r\nconst setIsLoadingAC = (status: IsLoadingValuesType) => ({type: \"SET-IS-LOADING\", status} as const)\r\nconst getPacksAC = (filteredPacks: Array<CardPacksType>, packsTotalCount: number, page: number, pageCount: number) =>\r\n    ({type:'GET-PACKS', filteredPacks, packsTotalCount, page, pageCount } as const)\r\nconst searchedPacksAC = (filteredPacks: Array<CardPacksType>, page: number, pageCount: number, inputValueSearch: string) =>\r\n    ({type: 'SEARCHED-PACKS', filteredPacks, page, pageCount, inputValueSearch } as const)\r\nconst sortPacksUPAC = (filteredPacks: Array<CardPacksType>, sortPacksByDateUp:string) =>\r\n    ({type: 'SORT-PACKS-UP', filteredPacks, sortPacksByDateUp} as const)\r\nconst sortPacksDownAC = (filteredPacks: Array<CardPacksType>, sortPacksByDateDown:string) =>\r\n    ({type: 'SORT-PACKS-DOWN', filteredPacks, sortPacksByDateDown} as const)\r\nconst cardsCountAC = (packs:Array<CardPacksType>,  min:number, max:number, packsTotalCount:number) =>\r\n    ({type:'CARDS-COUNT',packs,  min, max, packsTotalCount} as const)\r\nexport const setShowSuccessModalAC = (show: boolean) => ({type: \"SET-SHOW-SUCCESS-MODAL\", show} as const)\r\n\r\n\r\n//thunks\r\nexport const getPacksTC = () : ThunkType=> (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.getCardPacks().then((data)=>{\r\n\r\n        const packsTotalCount= data.data.cardPacksTotalCount\r\n        const filteredPacks = data.data.cardPacks\r\n        const page = data.data.page\r\n        const pageCount = data.data.pageCount\r\n        dispatch(getPacksAC(filteredPacks, packsTotalCount, page, pageCount))//rangeMin, rangeMax\r\n        dispatch(setIsLoadingAC(\"idle\"))\r\n\r\n    })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const packsTC = (page: number, pageCount:number, sortPacks:string, min:number, max:number, inputValueSearch:string ) :\r\n    ThunkType=> (dispatch) => {\r\n    packsAPI.getCardPacks(page, pageCount, sortPacks, min,  max).then((cards)=>{\r\n        const packsTotalCount= cards.data.cardPacksTotalCount\r\n        const packs = cards.data.cardPacks\r\n        const filteredPacks = packs.filter((pack: CardPacksType) => {\r\n            return pack.name.toLowerCase().indexOf(inputValueSearch) !== -1\r\n\r\n        })\r\n\r\n        dispatch(dispatch(getPacksAC(filteredPacks, packsTotalCount, page, pageCount)))\r\n    })\r\n}\r\nexport const changeInputTC = (e:any, page:number, pageCount:number, sortPacks:string, min:number, max:number):\r\n    ThunkType  =>(dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.getCardPacks(page, pageCount, sortPacks, min, max).then((data) => {\r\n\r\n        const packs = data.data.cardPacks\r\n        const page = data.data.page\r\n        const pageCount = data.data.pageCount\r\n        const inputValueSearch = e.target.value.toLowerCase().trim()\r\n        const filteredPacks = packs.filter((pack: CardPacksType) => {\r\n            return pack.name.toLowerCase().indexOf(e.target.value.toLowerCase().trim()) !== -1\r\n\r\n        })\r\n\r\n        dispatch(searchedPacksAC(filteredPacks, page, pageCount, inputValueSearch))\r\n\r\n    })\r\n}\r\nexport const sortByDateUpTC =\r\n    (page:number, pageCount:number, sortPacksByDateUp:string, min:number, max:number, inputValueSearch:string):\r\n        ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.getCardPacks(page, pageCount, sortPacksByDateUp, min, max).then((data)=>{\r\n        const packs = data.data.cardPacks\r\n        const filteredPacks = packs.filter((pack: CardPacksType) => {\r\n            return pack.name.toLowerCase().indexOf(inputValueSearch) !== -1\r\n\r\n        })\r\n        dispatch(sortPacksUPAC(filteredPacks, sortPacksByDateUp))\r\n    })\r\n}\r\n\r\nexport const sortByDateDown = (page:number, pageCount:number, sortPacksByDateDown:string, min:number, max:number, inputValueSearch:any): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.getCardPacks(page, pageCount, sortPacksByDateDown, min, max).then((data)=>{\r\n        const packs = data.data.cardPacks\r\n        const filteredPacks = packs.filter((pack: CardPacksType) => {\r\n            return pack.name.toLowerCase().indexOf(inputValueSearch) !== -1\r\n\r\n        })\r\n        dispatch(sortPacksDownAC(filteredPacks, sortPacksByDateDown))\r\n    })\r\n}\r\n\r\nexport const changeSliderTC = (page:number, pageCount:number, sortPacks:string, min:number,max:number): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.getCardPacks(page, pageCount, sortPacks, min,max ).then(data=>{\r\n        const packs = data.data.cardPacks\r\n        const packsTotalCount= data.data.cardPacksTotalCount\r\n        dispatch(cardsCountAC(packs,  min, max, packsTotalCount))\r\n\r\n\r\n    })\r\n}\r\n\r\nexport const createPackTC = (): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.createPack()\r\n        .then(res => {\r\n            dispatch(getPacksTC())\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n            dispatch(setShowSuccessModalAC(true))\r\n            setTimeout(() => {\r\n                dispatch(setShowSuccessModalAC(false))\r\n            }, 2000)\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\n\r\nexport const deletePackTC = (id: string): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.deletePack(id)\r\n        .then(res => {\r\n            dispatch(getPacksTC())\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const updatePackTC = (id: string, name: string): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.updatePack(id, name)\r\n        .then(res => {\r\n            dispatch(getPacksTC())\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}","import ReactPaginate from 'react-paginate';\r\nimport React, {ChangeEvent, useState} from 'react'\r\nimport s from './PaginationComponent.module.css'\r\n//import {cardPacksAPI} from \"../../../api/api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {packsTC} from \"../../../store/packs-reducer\";\r\nimport {AppStoreType} from \"../../../store/store\";\r\n\r\ntype PaginationComponentType={\r\n\r\n    options: number[]\r\n\r\n}\r\n\r\nexport function PaginationComponent({options}:PaginationComponentType) {\r\n    const initValueOption = useSelector<AppStoreType,number>(state=>state.cards.pageCount)\r\n    const packs = useSelector<AppStoreType, number>((state)=>state.cards.packsTotalCount)\r\n    const sortPacks = useSelector<AppStoreType, string>(state => state.cards.sortPacks)\r\n    const min = useSelector<AppStoreType, number>(state => state.cards.minCardsCount)\r\n    const max = useSelector<AppStoreType, number>(state => state.cards.maxCardsCount)\r\n    const inputValueSearch = useSelector<AppStoreType, string>(state => state.cards.inputValueSearch)\r\n    const dispatch = useDispatch()\r\n    const page = useSelector<AppStoreType,number>((state=>state.cards.page))\r\n\r\n    const [value, setValue] = useState(initValueOption)\r\n\r\n\r\n    const pageCount = Math.ceil(packs/value)\r\n\r\n    function pageChange(e:any){\r\n        dispatch(packsTC(e.selected+1, value, sortPacks, min, max,inputValueSearch))\r\n\r\n    }\r\n    const paginationStyle={\r\n        display:'flex',\r\n        justifyContent:'flex-start',\r\n        margin: '50px'\r\n    }\r\n    function changeSelect(e:ChangeEvent<HTMLSelectElement>){\r\n        console.log(e.currentTarget.value)\r\n        setValue(Number(e.currentTarget.value))\r\n\r\n        dispatch(packsTC(page, Number(e.currentTarget.value),sortPacks, min, max, inputValueSearch))\r\n    }\r\n\r\n    return (\r\n        <div style={paginationStyle}>\r\n            <select onChange={changeSelect} value={value}>\r\n                {options.map((option, index)=>{\r\n                   return <option key={index} value={option}>{option}</option>\r\n            })}\r\n            </select>\r\n            <div>\r\n            <ReactPaginate\r\n                pageCount={pageCount}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={3}\r\n                breakClassName={s.breakMe}\r\n                containerClassName={s.pagination}\r\n                activeClassName={s.active}\r\n                onPageChange={pageChange}\r\n            />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {packsAPI} from \"../../../api/api\";\r\nimport {changeInputTC} from \"../../../store/packs-reducer\";\r\n\r\n\r\n\r\nexport function SearchComponent({cards}: any) {\r\n    const dispatch = useDispatch()\r\n    const pageCount = useSelector<any, any>(state => state.cards.pageCount)\r\n    const page = useSelector<any, any>(state => state.cards.page)\r\n    const sortPacks = useSelector<any, any>(state => state.cards.sortPacks)\r\n    const min = useSelector<any, any>(state => state.cards.minCardsCount)\r\n    const max = useSelector<any, any>(state => state.cards.maxCardsCount)\r\n    //const [value, setValue] = useState('')\r\n    //const [timerId, setTimerId] = useState<any>()\r\n    // useEffect(()=>{\r\n    //     dispatch(packsTC(page, pageCount))\r\n    // },[])\r\n     function debounce(fn:Function, ms:number){\r\n        let timeout:any;\r\n        return function(){\r\n            console.log(1)\r\n            //@ts-ignore\r\n            const fnCall = () => {fn.apply(this,arguments)}\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(fnCall, ms)\r\n        }\r\n    }\r\n\r\n    // function changeInput(e: ChangeEvent<HTMLInputElement>) {\r\n    //     //setValue(e.currentTarget.value)\r\n    //     console.log(e.target.value)\r\n    //     const arr = cards.filter((card:any)=>{\r\n    //        return  card.name.toLowerCase().indexOf(e.target.value.toLowerCase().trim()) !== -1\r\n    //\r\n    //     })\r\n    //     dispatch({type:'SEARCHED-PACKS', arr})\r\n    //     console.log(arr)\r\n        //setValue(e.target.value)\r\n\r\n\r\n\r\n    const changeInput = (e:any) => {\r\n\r\n        // packsAPI.getCardPacks(page, pageCount).then((data) => {\r\n        //\r\n        //     const cards = data.data.cardPacks\r\n        //\r\n        //     const arr = cards.filter((card: any) => {\r\n        //         return card.name.toLowerCase().indexOf(e.target.value.toLowerCase().trim()) !== -1\r\n        //\r\n        //     })\r\n        //\r\n        //     dispatch({type: 'SEARCHED-PACKS', arr})\r\n        //\r\n        // })\r\n        dispatch(changeInputTC(e, page, pageCount, sortPacks, min, max))\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     const timeout = setTimeout(handleSearch, 1000)\r\n    //     setTimerId(timeout)\r\n    //     return () => {\r\n    //         clearTimeout(timerId)\r\n    //     }\r\n    //\r\n    // }, [value])\r\n\r\n    let debounceChangeInput = debounce(changeInput, 500)\r\n\r\n    return (\r\n        <div>\r\n           {/* <span>Search</span>*/}\r\n            <input type=\"text\" placeholder='Search' onChange={debounceChangeInput} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeInputTC, sortByDateDown, sortByDateUpTC} from \"../../../store/packs-reducer\";\r\n\r\nexport function SortByDate(){\r\n    const dispatch = useDispatch()\r\n    const pageCount = useSelector<any,any>(state=>state.cards.pageCount)\r\n    const page = useSelector<any, any>(state => state.cards.page)\r\n    const min = useSelector<any, any>(state => state.cards.minCardsCount)\r\n    const max = useSelector<any, any>(state => state.cards.maxCardsCount)\r\n    const sortPacks = useSelector<any, any>(state => state.cards.sortPacks)\r\n    const inputValueSearch = useSelector<any, any>(state => state.cards.inputValueSearch)\r\n    function upDate(){\r\n        dispatch(sortByDateUpTC(page, pageCount, '0created', min, max, inputValueSearch))\r\n    }\r\n    function downDate(){\r\n        dispatch(sortByDateDown(page, pageCount, '1created', min, max, inputValueSearch))\r\n    }\r\n\r\n    const buttonStyle1 = {\r\n        width:'30px',\r\n        backgroundColor:'blue'\r\n    }\r\n    const buttonStyle2 = {\r\n        width:'30px',\r\n        backgroundColor:'white'\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n            <button style={(sortPacks === '0created')? buttonStyle1: buttonStyle2} onClick={upDate}>+</button>\r\n            </div>\r\n            <div>\r\n            <button style={(sortPacks === '1created')? buttonStyle1: buttonStyle2} onClick={downDate}>-</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useRef} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Slider } from 'antd';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeSliderTC} from \"../../../../store/packs-reducer\";\r\n\r\ntype PropsType = {\r\n    range: Array<number>\r\n}\r\n\r\n\r\nexport function SliderAnt( ){\r\n    const ref = useRef(null)\r\n    const [range, setRange] = useState([0,24])\r\n\r\n    const sortPacks = useSelector<any, any>(state => state.cards.sortPacks)\r\n    const page = useSelector<any,any>((state=>state.cards.page))\r\n    const pageCount = useSelector<any,any>(state=>state.cards.pageCount)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    function onChange(e:any){\r\n        setRange(e)\r\n    }\r\n    function click(){\r\n     //@ts-ignore\r\n        const value = ref.current.props.value\r\n        dispatch(changeSliderTC(page, pageCount,sortPacks, value[0],value[1]))\r\n\r\n\r\n    }\r\n    return(\r\n        <div style={{display:'flex'}}>\r\n            <span>{0}</span>\r\n            <div style={{width:'200px'}}>\r\n                <Slider\r\n                    range\r\n                    step={1}\r\n                    value={[range[0], range[1]]}\r\n                    onChange={onChange}\r\n                    min={0}\r\n                    max={24}\r\n                    ref={ref}\r\n                />\r\n            </div>\r\n            <span>{24}</span>\r\n            <button onClick={click}>Cards</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport function Learn({packId}:any){\r\n    return(\r\n        <NavLink to={`/learn/${packId}`}>learn</NavLink>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {PaginationComponent} from \"../common/PaginationComponent/PaginationComponent\";\r\nimport {SearchComponent} from \"../common/SearchComponent/SearchComponent\";\r\nimport {SortByDate} from \"../common/SortByDate/SortByDate\";\r\nimport {SliderAnt} from \"../common/PaginationComponent/RangeAnt/RangeAnt\";\r\nimport {createPackTC, deletePackTC, getPacksTC, IsLoadingValuesType, updatePackTC} from \"../../store/packs-reducer\";\r\nimport Pack from \"./pack\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {CardPacksType} from \"../../api/api\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './packs.module.css'\r\nimport {Cards} from \"./Cards\";\r\nimport {Learn} from \"./learn\";\r\nimport {Modal} from \"./modal/modal\";\r\n\r\n\r\nfunction Packs() {\r\n    const options = [10, 20, 30, 40, 50]\r\n    const status = useSelector<AppStoreType, IsLoadingValuesType>(state => state.cards.status)\r\n    const packs = useSelector<AppStoreType, Array<CardPacksType>>((state) => state.cards.packs)\r\n    const show = useSelector<AppStoreType, boolean>(state => state.cards.showSuccessModal)\r\n    const dispatch = useDispatch()\r\n\r\n    const createPack = () => dispatch(createPackTC())\r\n    const deletePack = (id: string) => dispatch(deletePackTC(id))\r\n    //const updatePack = (id: string) => dispatch(updatePackTC(id))\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n\r\n    }, [dispatch])\r\n\r\n    let top: number;\r\n    if(show) {\r\n        top = 100\r\n    }else{\r\n        top = -100\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Packs</h1>\r\n            <SliderAnt/>\r\n            <div className={style.table}>\r\n                <table>\r\n                    <div className={`${style.tableItem} ${style.tableHeader}`}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th><div className={style.ceil}>Name <SearchComponent/></div></th>\r\n                        <th>CardsCount</th>\r\n                        <th><div className={style.ceil}>Update <SortByDate/></div></th>\r\n                        <th><label>Add pack: <button onClick={createPack} disabled={status === 'loading'}>Add</button>\r\n                        </label></th>\r\n                        <th>Cards</th>\r\n                        <th>Learn</th>\r\n                    </tr>\r\n                    </thead>\r\n                    </div>\r\n                    <div className={style.tableItem}>\r\n                    <tbody>\r\n                    {packs.map((pack: any, index: number) =>\r\n                        <tr key={index}>\r\n                            <td>{`${pack.name}`} </td>\r\n                            <td>{`${pack.cardsCount}`}</td>\r\n                            <td>{`${pack.updated}`}</td>\r\n                            <td><div className={style.tableItem}>\r\n                                <button name={\"del\"} disabled={status === 'loading'}\r\n                                        onClick={() => deletePack(pack._id)}>Delete\r\n                                </button>\r\n                                <button name={\"update\"} disabled={status === 'loading'}>Update</button>\r\n                            </div>\r\n                            </td>\r\n                            <td><Cards packId={pack._id}/></td>\r\n                            <td><Learn packId={pack._id}/></td>\r\n                        </tr>\r\n                    )}\r\n                    </tbody>\r\n                    </div>\r\n                </table>\r\n\r\n            </div>\r\n                <PaginationComponent options={options}/>\r\n            <Modal title={\"Success\"} width={100} height={50} backgroundDiv={false} bgOnClick={() => {}}\r\n                   CSSStyles={{\r\n                       top: top+\"px\",\r\n                       backgroundColor: \"lightgreen\"\r\n                   }}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Packs\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport style from './learnsPage.module.css'\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {CardType} from \"../../api/api\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {getCardsTC, gradeTC} from \"../../store/packCards-reducer\";\r\nimport {Modal} from \"./modal/modal\";\r\n\r\n\r\n/*export const LearnCard = () => {\r\n    const {packId} = useParams<{ packId: string }>();\r\n    const dispatch = useDispatch()\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state=>state.packCards.cards)\r\n    const [isAnswer, setIsAnswer] = useState(false)\r\n    const [numberCurrentCard, setNumberCurrentCard] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        dispatch(getCardsTC(packId))\r\n\r\n    },[])\r\n\r\n    const showAnswer = () => {\r\n        setIsAnswer(true)\r\n    }\r\n\r\n    const checkNextCard = () => {\r\n        setNumberCurrentCard(sortCards(cards)) ;\r\n        setIsAnswer(false)\r\n    }\r\n\r\n    const addGrade = (grade: number) => {\r\n        dispatch(updateCardGradeTC(cards[numberCurrentCard]._id, grade))\r\n    }\r\n\r\n    const sortCards = (cardsPack: CardType[]) => {\r\n        const gradeArr = cardsPack.map((card, index) => {\r\n            return {index, grade: card.grade, chance: card.grade !==0 ? (6 - card.grade * Math.random()): 5}\r\n        });\r\n        let currentInd = 0;\r\n        let maxVal = 0;\r\n        gradeArr.forEach((el, index) => {\r\n            if( maxVal < el.chance) {\r\n                currentInd = el.chance;\r\n                maxVal = el.chance\r\n            };\r\n        })\r\n        return currentInd\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div>{cards[numberCurrentCard] ? cards[numberCurrentCard].question: 'Have no cards'}</div>\r\n            <button onClick={showAnswer}>Show answer</button>\r\n\r\n            <div style={{height:'40px'}}>\r\n                <div style={isAnswer?undefined:{display:'none'}}>{cards[numberCurrentCard] ? cards[numberCurrentCard].answer: 'Have no cards'}</div>\r\n            </div>\r\n\r\n            <div>\r\n                <button onClick={() => {addGrade(1)}} name={\"oneButton\"}>не знал</button>\r\n                <button onClick={() => {addGrade(2)}} name={\"twoButton\"}>забыл</button>\r\n                <button onClick={() => {addGrade(3)}} name={\"threeButton\"}>долго думал</button>\r\n                <button onClick={() => {addGrade(4)}} name={\"fourButton\"}>перепутал</button>\r\n                <button onClick={() => {addGrade(5)}} name={\"fiveButton\"}>знал</button>\r\n            </div>\r\n            <div>\r\n                <SuperButton onClick={checkNextCard}>След карточка</SuperButton>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}*/\r\n\r\n\r\n\r\nexport const LearnCard = () => {\r\n    const {packId} = useParams<{ packId: string }>();\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.packCards.cards);\r\n    const [checkMode, setCheckMode] = useState(false);\r\n    const [numberCurrentCard, setNumberCurrentCard] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getCardsTC(packId))\r\n\r\n    },[])\r\n    const checkAnswer = () => {\r\n        setCheckMode(true);\r\n    }\r\n\r\n\r\n\r\n    const checkNextCard = () => {\r\n        setNumberCurrentCard(sortCards(cards)) ;\r\n        //numberCurrentCard < cards.length -1 ? setNumberCurrentCard(numberCurrentCard + 1) : setNumberCurrentCard(0);\r\n        setCheckMode(false);\r\n    }\r\n    const addGrade = (grade: number) => {\r\n        dispatch(gradeTC(cards[numberCurrentCard]._id, grade))\r\n    }\r\n    const sortCards = (cardsPack: CardType[]) => {\r\n        let gradeArr = cardsPack.map((card, index) => {\r\n            return {index, grade: card.grade ,chance: card.grade !==0 ? (5 - card.grade * Math.random()): 4}\r\n        });\r\n        let currentInd = 0;\r\n        let maxVal = 0;\r\n        gradeArr.forEach((el, index) => {\r\n            if( maxVal < el.chance) {\r\n                currentInd = el.index;\r\n                maxVal = el.chance\r\n            };\r\n        })\r\n        return currentInd\r\n    }\r\n    const show = useSelector<AppStoreType, boolean>(state => state.packCards.showSuccessModal)\r\n\r\n    let top: number;\r\n    if(show) {\r\n        top = 100\r\n    }else{\r\n        top = -100\r\n    }\r\n    return (\r\n        <div className={style.container}>\r\n            <div>\r\n                <div>\r\n                    <p className={style.text}>{cards[numberCurrentCard] ? cards[numberCurrentCard].question: 'Have no cards'}</p>\r\n                </div>\r\n                <div>\r\n                    <SuperButton onClick={checkAnswer} >check answer</SuperButton>\r\n                </div>\r\n            </div>\r\n            {checkMode &&\r\n            <div>\r\n                <p className={style.text}>{cards[numberCurrentCard] ? cards[numberCurrentCard].answer: 'Have no cards'}</p>\r\n                <div>\r\n                    <SuperButton onClick={() => {addGrade(1)}} className={style.button}>не знал</SuperButton>\r\n                    <SuperButton onClick={() => {addGrade(2)}} className={style.button}>забыл</SuperButton>\r\n                    <SuperButton onClick={() => {addGrade(3)}} className={style.button}>перепутал</SuperButton>\r\n                    <SuperButton onClick={() => {addGrade(4)}} className={style.button}>долго думал</SuperButton>\r\n                    <SuperButton onClick={() => {addGrade(5)}} className={style.button}>знал</SuperButton>\r\n                </div>\r\n                <div>\r\n                    <SuperButton className={style.button} onClick={checkNextCard}>След карточка</SuperButton>\r\n                </div>\r\n            </div>}\r\n            <Modal title={\"Success\"} width={100} height={50} backgroundDiv={false} bgOnClick={() => {}}\r\n                   CSSStyles={{\r\n                       top: top+\"px\",\r\n                       backgroundColor: \"lightgreen\"\r\n                   }}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Error404 from \"../pages/404\";\r\nimport Login from \"../pages/login\";\r\nimport PasswordRecovery from \"../pages/password-recovery\";\r\nimport Profile from \"../pages/profile\";\r\nimport Registration from \"../pages/registration\";\r\nimport NewPassword from \"../pages/new-password\";\r\nimport {PackCards} from \"../pages/PackCards\";\r\nimport {Cards} from \"../pages/Cards\";\r\nimport Packs from \"../pages/packs\";\r\nimport {LearnCard} from \"../pages/learnsPage\";\r\n\r\n\r\n\r\nexport const PATH = {\r\n    login: '/login',\r\n    passwordRecovery: '/passwordRecovery',\r\n    profile:'/profile',\r\n    registration:'/registration',\r\n    newPassword:'/newPassword',\r\n    cards: '/cards',\r\n    packs: '/packs'\r\n\r\n}\r\n\r\nfunction Routes() {\r\n\r\n    return (\r\n        <div >\r\n            <Switch>\r\n\r\n                <Route path={'/'} exact render={() => <Redirect to={'/login'}/>}/>\r\n                <Route path={'/login'} render={() => <Login/>}/>\r\n                <Route path={'/passwordRecovery'} exact render={() => <PasswordRecovery/>}/>\r\n                <Route path={'/profile'} exact render={() => <Profile/>}/>\r\n                <Route path={'/registration'} exact render={() => <Registration/>}/>\r\n                <Route path={'/newPassword/:resetPasswordToken'}  render={() => <NewPassword/>}/>\r\n                <Route path={'/newPassword/'} exact render={ () => <PasswordRecovery/>}/>\r\n                <Route path={'/cards'} exact render={() => <Cards/>}/>\r\n                <Route path={'/packs'} exact render={() => <Packs/>}/>\r\n                <Route path={'/packs/:packId'} exact render={() => <PackCards/>}/>\r\n                <Route path={'/learn/:packId'} exact render={() => <LearnCard/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React, {useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport s from './Header.module.css';\r\nimport {PATH} from \"../routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {logout} from \"../../store/login-reducer\";\r\n\r\nfunction Header() {\r\n    const [activeMenu, setActiveMenu] = useState<boolean>(false);\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const toggle = () => {\r\n        setActiveMenu(!activeMenu)\r\n    }\r\n    return (\r\n        <div className={s.sidebar}>\r\n            <div className={s.menu} onClick={toggle}>&#9776;</div>\r\n            <div className={`${s.containerMenuLinks} ${activeMenu && s.activeMenu}`}>\r\n                <NavLink to={PATH.passwordRecovery} className={s.inactive} activeClassName={s.active}>  Password\r\n                    recovery  </NavLink>\r\n                <NavLink to={PATH.profile} className={s.inactive} activeClassName={s.active}>  Profile  </NavLink>\r\n                <NavLink to={PATH.registration} className={s.inactive}\r\n                         activeClassName={s.active}>  Registration  </NavLink>\r\n                <NavLink to={PATH.newPassword} className={s.inactive}\r\n                         activeClassName={s.active}>  Entering a new password  </NavLink>\r\n                {isAuth ? <button onClick={() => dispatch(logout())}>Log out</button> :\r\n                    <NavLink to={'/login'}>Login</NavLink>}\r\n                <NavLink to={PATH.packs} className={s.inactive} activeClassName={s.active}>  Packs  </NavLink>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Routes from \"./components/routes/Routes\";\r\nimport Header from \"./components/header/Header\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport 'rc-slider/assets/index.css';\r\nimport {getPacksTC} from \"./store/packs-reducer\";\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                    <Header/>\r\n                    <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nconst initState = {\r\n\r\n};\r\n\r\nexport const errorReducer = (state = initState, action: any): any => {\r\n    switch (action.type) {\r\n        case \"\": {\r\n            return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const errorAC = (): any => {};","type InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    userId: null as string | null,\r\n    userName: null as string | null,\r\n    avatar: '',\r\n    publicCardPacksCount: null as number | null // количество колод\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                userName: action.userName,\r\n                publicCardPacksCount: action.publicCardPacksCount,\r\n                userId: action.userId\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const profileAC = (userName: string | null, publicCardPacksCount: number | null, userId: string | null) => (\r\n    {type: 'SET-USER-DATA', userName, publicCardPacksCount, userId} as const)\r\n\r\ntype ActionType = ReturnType<typeof profileAC>","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {errorReducer} from \"./error-reducer\";\r\nimport {passwordRecoveryReducer} from \"./password-recovery-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {newPasswordReducer} from \"./new-password-reducer\";\r\nimport thunk from \"redux-thunk\"\r\nimport packsReducer from \"./packs-reducer\";\r\nimport {packCardsReducer} from \"./packCards-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login:loginReducer,\r\n    error:errorReducer,\r\n    passwordRecovery:passwordRecoveryReducer,\r\n    profile:profileReducer,\r\n    registration:registrationReducer,\r\n    newPassword:newPasswordReducer,\r\n    cards: packsReducer,\r\n    packCards: packCardsReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\nconsole.log(store.getState())","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnLogout\":\"Header_btnLogout__1T18L\",\"sidebar\":\"Header_sidebar__1WlgA\",\"menu\":\"Header_menu__3GX8V\",\"containerMenuLinks\":\"Header_containerMenuLinks__1BEt2\",\"activeMenu\":\"Header_activeMenu__3Ivds\",\"inactive\":\"Header_inactive__2an89\",\"active\":\"Header_active__1ekGk\",\"text\":\"Header_text__XOPPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"packs_table__VpiCL\",\"ceil\":\"packs_ceil__9uezQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"learnsPage_container__S83tX\",\"text\":\"learnsPage_text__2P9Fo\",\"button\":\"learnsPage_button__2rep9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"new-password_container__1vSL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInput_superInput__w5LvN\",\"errorInput\":\"SuperInput_errorInput__AFSy-\",\"error\":\"SuperInput_error__27PeI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWindow\":\"modal_modalWindow__1Om_N\",\"buttonsStyle\":\"modal_buttonsStyle__Al9wh\",\"backgroundDiv\":\"modal_backgroundDiv__UxTlb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperPassword_superInput__qYmCo\",\"errorInput\":\"SuperPassword_errorInput__1wcV-\",\"error\":\"SuperPassword_error__2aMXW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"PaginationComponent_pagination__1l0u_\",\"active\":\"PaginationComponent_active__2NdFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3rUuo\",\"spanClassName\":\"SuperCheckbox_spanClassName__MefLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1slZT\",\"red\":\"SuperButton_red__1l6f1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"password-recovery_container__2mPeV\"};"],"sourceRoot":""}