{"version":3,"sources":["components/pages/404.tsx","components/common/SuperInput/SuperInput.tsx","components/common/SuperCheckbox/SuperCheckbox.tsx","components/common/SuperButton/SuperButton.tsx","api/api.tsx","store/login-reducer.ts","components/pages/login.tsx","store/password-recovery-reducer.ts","components/common/preloader.svg","components/pages/Loading.tsx","components/pages/password-recovery.tsx","components/pages/profile.tsx","store/registration-reducer.ts","components/common/SuperPassword/SuperPassword.tsx","components/pages/registration.tsx","store/new-password-reducer.ts","components/pages/new-password.tsx","store/packCards-reducer.ts","components/pages/PackCards.tsx","components/pages/Cards.tsx","store/packs-reducer.ts","components/common/PaginationComponent/PaginationComponent.tsx","components/common/SearchComponent/SearchComponent.tsx","components/common/SortByDate/SortByDate.tsx","components/common/PaginationComponent/RangeAnt/RangeAnt.tsx","components/pages/packs.tsx","components/routes/Routes.tsx","components/header/Header.tsx","App.tsx","reportWebVitals.ts","store/error-reducer.ts","store/profile-reducer.ts","store/store.ts","index.tsx","components/header/Header.module.css","components/pages/new-password.module.css","components/common/SuperInput/SuperInput.module.css","components/common/SuperPassword/SuperPassword.module.css","components/common/PaginationComponent/PaginationComponent.module.css","components/common/SuperCheckbox/SuperCheckbox.module.css","components/common/SuperButton/SuperButton.module.css","components/pages/password-recovery.module.css"],"names":["Error404","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","api","axios","create","baseURL","withCredentials","passwordAPI","email","post","from","message","password","resetPasswordToken","data","authAPI","delete","packsAPI","page","pageCount","sortPacks","min","max","get","params","cardsAPI","packId","cardsPack_id","initState","_id","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","isAuth","isFetching","setAuthUserDataAC","payload","toggleIsFetching","Login","dispatch","useDispatch","useSelector","state","login","to","onSubmit","preventDefault","then","response","catch","console","log","titleError","style","SuperInput","placeholder","initialState","isMessageSend","isError","isLoading","errorAC","loadingAC","Loading","src","preloader","PasswordRecovery","registration","target","a","passwordRecoveryTC","container","Profile","userData","cardsCount","profile","REGISTRATION","ERROR","LOADING","isRegistration","SuperPassword","Registration","useState","passwordLength","setPasswordLength","emailLength","setEmailLength","passwordError","setPasswordError","emailError","setEmailError","emailValue","setEmailValue","passwordValue","setPasswordValue","registrationData","obj","finally","marginTop","length","indexOf","onBlur","height","color","disabled","undefined","background","isNewPasswordSet","NewPassword","newPassword","useParams","passwordLengthDub","setPasswordLengthDub","passwordErrorDub","setPasswordErrorDub","buttonColor","setButtonColor","repeatPassword","newPasswordTC","cards","question","answer","PackCards","packCards","useEffect","packCardsTC","map","card","Cards","packs","packsTotalCount","minCardsCount","maxCardsCount","inputValueSearch","packsReducer","action","filteredPacks","rangeMin","rangeMax","sortPacksByDateUp","sortPacksByDateDown","getPacksTC","cardPacksTotalCount","cardPacks","packsTC","filter","pack","toLowerCase","PaginationComponent","options","initValueOption","setValue","Math","ceil","display","justifyContent","margin","Number","option","index","marginPagesDisplayed","pageRangeDisplayed","breakClassName","breakMe","containerClassName","pagination","activeClassName","active","onPageChange","selected","SearchComponent","debounceChangeInput","fn","ms","timeout","fnCall","apply","arguments","clearTimeout","setTimeout","debounce","trim","changeInputTC","SortByDate","buttonStyle1","width","backgroundColor","buttonStyle2","onClick","sortByDateUpTC","sortByDateDown","SliderAnt","ref","useRef","range","setRange","step","current","props","changeSliderTC","Packs","PATH","Routes","path","exact","render","Header","activeMenu","setActiveMenu","sidebar","menu","containerMenuLinks","inactive","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","userId","userName","reducers","combineReducers","passwordRecovery","store","createStore","applyMiddleware","thunk","window","getState","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4ca79dd8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e); // ?\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error?s.errorInput:s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;","\r\nimport React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className} `;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import axios from \"axios\";\r\nimport {LoginFormData} from \"../store/login-reducer\";\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    //baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport type SetNewPasswordParamsType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\nexport type ResponseRestoreType = {\r\n    info: string\r\n    error: string\r\n}\r\nexport type RegistrationDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type ResponseRegistrationDataType = {\r\n    addedUser: {\r\n        _id: string\r\n        email: string\r\n        rememberMe: boolean\r\n        isAdmin: boolean\r\n        name: string\r\n        verified: boolean\r\n        publicCardPacksCount: number\r\n        created: string\r\n        updated: string\r\n    }\r\n}\r\nexport const passwordAPI = {\r\n    forgot(email: string | null) {\r\n        return api.post<ResponseRestoreType>('auth/forgot', {\r\n            email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n              password recovery link: \t\r\n              <a href='http://localhost:3000/FridaDZ#/newPassword/$token$'>\t\r\n              Link </a></div>`\r\n        })\r\n    },\r\n\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return api.post<ResponseRestoreType>('auth/set-new-password', {password, resetPasswordToken})\r\n    },\r\n\r\n    registration(data: RegistrationDataType) {\r\n        return api.post<ResponseRegistrationDataType>('auth/register', data)\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    login(data: LoginFormData) {\r\n        return api.post('auth/login', data)\r\n    },\r\n    authMe() {\r\n        return api.post('auth/me', {})\r\n    },\r\n    logout() {\r\n        return api.delete('auth/me')\r\n    }\r\n};\r\n\r\n//типизация и апи для колод\r\n/*export type CardsPackDataType = {\r\n    name: string\r\n}\r\nexport type CardPacksType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v: number\r\n}\r\nexport type CardPacksResponseType = {\r\n    cardPacks: Array<CardPacksType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\nexport type UpdatePacksDataType = {\r\n    _id: string\r\n    name?: string\r\n}\r\n\r\nexport type CreateCardRequestType = {\r\n    cardsPack_id: string\r\n    question?: string\r\n    answer?: string\r\n}*/\r\n\r\n\r\n\r\nexport const packsAPI = {\r\n\r\n    getCardPacks(\r\n        page: number = 1,\r\n        pageCount: number = 10,\r\n        sortPacks: string = '0created',\r\n        min: number = 0,\r\n        max: number = 24\r\n    ) {\r\n        return api.get<any>('/cards/pack', {\r\n\r\n            params: {\r\n                page,\r\n                pageCount,\r\n                sortPacks,\r\n                min,\r\n                max\r\n            }\r\n        })\r\n    },\r\n    createPack(name: string) {\r\n        return api.post(`cards/pack`, {cardsPack: {name}})\r\n    },\r\n    deletePack(id: string) {\r\n        return api.delete(`cards/pack/?id=${id}`)\r\n    },\r\n    updatePack(id: string, name: string) {\r\n        return api.put(`cards/pack/`, {cardsPack: {_id: id, name}})\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//типизация и апи для карточек\r\n\r\n/*export type CardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n    questionImg:string\r\n    comments:string\r\n    type: string\r\n    rating: number\r\n    more_id:string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n\r\n}*/\r\n\r\n\r\n\r\n/*export type CardsResponseType={\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n\r\n}*/\r\nexport const cardsAPI = {\r\n    getCards(packId: string) {\r\n        return api.get('/cards/card/', {\r\n            params: {\r\n                cardsPack_id: packId,\r\n                pageCount: 24\r\n            }\r\n        })\r\n    },\r\n    createCard(cardId:string){\r\n        return api.post(`cards/card`,{card:{cardId,question:'',answer:''}})\r\n    },\r\n    deleteCard(cardId:string){\r\n        return api.delete(`cards/card/?id=${cardId}`)\r\n    },\r\n    updateCard(cardId:string){\r\n        return api.put(`cards/card`,{card:{cardId,question:'',comments:''}})\r\n    }\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {authAPI} from \"../api/api\";\r\n\r\nexport type LoginFormData = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\ntype UserAuthData = {\r\n    data: UserDataType\r\n    isAuth: boolean\r\n    isFetching: boolean\r\n    error: string | null\r\n}\r\n\r\n/*email: \"nya-admin@nya.nya\",\r\n    password: \"1qazxcvBG\",*/\r\n\r\n\r\nconst initState: UserAuthData = {\r\n    data: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: \"\",\r\n        publicCardPacksCount: 0,\r\n        created: '',\r\n        updated: '',\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n\r\n    },\r\n    isAuth: false,\r\n    isFetching: false,\r\n  error:''\r\n};\r\n\r\nexport const loginReducer = (state = initState, action: ActionsType): UserAuthData => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\": {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case \"ERROR\": {\r\n\r\n            return {...state, error: action.titleError}\r\n        }\r\n        case \"TOGGLE-IS-FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setAuthUserDataAC = (data: UserDataType, isAuth: boolean) => {\r\n    return {\r\n        type: 'SET-USER-DATA',\r\n        payload: {data, isAuth}\r\n    } as const\r\n}\r\nconst errorAC = (titleError: string | null) => ({type: 'ERROR', titleError} as const)\r\n\r\nconst toggleIsFetching = (isFetching: boolean) => ({\r\n    type: 'TOGGLE-IS-FETCHING',\r\n    isFetching\r\n} as const)\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof setAuthUserDataAC>\r\n    | ReturnType<typeof errorAC>\r\n    | ReturnType<typeof toggleIsFetching>\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\n\r\n\r\nexport const loginAC = (data: LoginFormData) => ({type: 'LOGIN', data} as const);\r\n\r\nexport const login = (data: LoginFormData): ThunkType => {\r\n\r\n    return (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        authAPI.login(data)\r\n            .then(response => {\r\n                let data: UserDataType = response.data\r\n                let isAuth = true\r\n                dispatch(setAuthUserDataAC(data, isAuth))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console')\r\n                console.log('Error: ', {...e})\r\n                console.log(error)\r\n                dispatch(errorAC(error))\r\n            })\r\n        dispatch(toggleIsFetching(false))\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n        authAPI.logout()\r\n            .then(() => dispatch(setAuthUserDataAC(initState.data, false)))\r\n    }\r\n}\r\n","import React, { FormEvent } from \"react\";\r\nimport SuperInput from \"../common/SuperInput/SuperInput\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login, LoginFormData} from \"../../store/login-reducer\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport function Login() {\r\n\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    const submitLoginData = (e: FormEvent<HTMLFormElement>) => {\r\n\r\n        e.preventDefault();\r\n        const email = e.currentTarget.email.value\r\n        const password = e.currentTarget.password.value\r\n        const rememberMe: boolean = e.currentTarget.rememberMe.value\r\n        const data: LoginFormData = {email, password, rememberMe}\r\n        dispatch(login(data))\r\n    }\r\n\r\n    const loginStyle = {\r\n        'display': 'flex',\r\n        'flex-direction': 'column',\r\n        'align-items': 'center'\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitLoginData}>\r\n            <div style={loginStyle}>\r\n                <h2>Login</h2>\r\n                <SuperInput name={'email'} placeholder={'Enter your email'}/>\r\n                <SuperInput name={'password'} type={'password'} placeholder={'Enter your password'}/>\r\n                <div><SuperCheckbox name={'rememberMe'} type={'checkbox'}/>\r\n                    <span>Remember Me</span></div>\r\n                <SuperButton type={'submit'}>Send</SuperButton>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Login;","import {AppStoreType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {passwordAPI} from \"../api/api\";\r\n\r\n\r\nconst initialState = {\r\n    isMessageSend: false,\r\n    isError: false,\r\n    titleError: null as string|null,\r\n    isLoading: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = ReturnType<typeof passwordRecoveryAC>|ReturnType<typeof errorAC>|ReturnType<typeof loadingAC>\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\n\r\n\r\nexport const passwordRecoveryReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PASSWORD-RECOVERY': {\r\n            return {...state, isMessageSend: true};\r\n        }\r\n        case \"ERROR\": {\r\n            return {...state, isError: true, titleError: action.titleError}\r\n        }\r\n        case \"LOADING\": {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst passwordRecoveryAC = () => ({type: 'PASSWORD-RECOVERY'} as const);\r\nconst errorAC = (titleError:string|null) => ({type: 'ERROR', titleError} as const)\r\nconst loadingAC = (isLoading:boolean) => ({type: 'LOADING', isLoading} as const)\r\n\r\nexport const passwordRecoveryTC = (email: string | null): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(loadingAC(true))\r\n        await passwordAPI.forgot(email)\r\n        dispatch(passwordRecoveryAC())\r\n        dispatch(errorAC(null))\r\n    } catch  (e) {\r\n        dispatch(errorAC(e.response.data.error));\r\n\r\n    } finally {\r\n        dispatch(loadingAC(false))\r\n    }\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/preloader.0116944b.svg\";","import React from \"react\";\r\nimport preloader from '../common/preloader.svg'\r\nfunction Loading(){\r\n    return(\r\n        <div>\r\n            <img src={preloader} />\r\n        </div>\r\n    )\r\n}\r\nexport default Loading","import React, {ChangeEvent} from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./password-recovery.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {passwordRecoveryTC} from \"../../store/password-recovery-reducer\";\r\nimport Loading from \"./Loading\";\r\n\r\nfunction PasswordRecovery() {\r\n    const dispatch = useDispatch()\r\n    //const isMailSend = useSelector<AppStoreType, boolean>(state => state.passwordRecovery.isMessageSend)\r\n    const isLoading = useSelector<AppStoreType, boolean>((state) => state.registration.isLoading)\r\n    const sendMail =(e:any)=>{\r\n        e.preventDefault();\r\n        const email = e.target.email.value\r\n       // alert(email)\r\n        dispatch(passwordRecoveryTC(email))\r\n\r\n    }\r\n    if (isLoading) {\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n  /*  if (isMailSend) {\r\n        return <Redirect to={'/login'}/>\r\n    }*/\r\n    return (\r\n        <form onSubmit={sendMail}>\r\n        <div>\r\n            <h3>Password recovery</h3>\r\n            <div className={style.container}>\r\n                <SuperInputText name={'email'}  placeholder=\"Email\"/>\r\n                <span>Enter your email</span>\r\n                <SuperButton>\r\n                    Send\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PasswordRecovery;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {UserDataType} from \"../../store/login-reducer\";\r\n\r\nfunction Profile() {\r\n\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n    const userData = useSelector<AppStoreType, UserDataType>(state => state.login.data)\r\n    const cardsCount = useSelector<AppStoreType, number | null>(state => state.profile.publicCardPacksCount)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Profile</h3>\r\n\r\n            {isAuth\r\n                ? <div>\r\n                   <div> Name: {userData.name}</div>\r\n                   <div> Count of cards: {cardsCount}</div>\r\n\r\n\r\n\r\n            </div>\r\n                : <Redirect to={'login'}/>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {Dispatch} from \"react\";\r\nimport {RegistrationDataType, passwordAPI} from \"../api/api\";\r\n\r\nconst REGISTRATION = \"REGISTRATION\"\r\nconst ERROR = \"ERROR\"\r\nconst LOADING = \"LOADING\"\r\n\r\nconst initState = {\r\n    isRegistration: false,\r\n    isError: false,\r\n    titleError: '',\r\n    isLoading: false\r\n};\r\ntype initStateType = {\r\n    isRegistration: boolean\r\n    isError: boolean\r\n    titleError: string\r\n    isLoading: boolean\r\n}\r\n\r\ntype ActionType = RegistrationType | ErrorType | LoadingType\r\n\r\nexport const registrationReducer = (state = initState, action: ActionType): initStateType => {\r\n    switch (action.type) {\r\n        case REGISTRATION: {\r\n            return {...state, isRegistration: true};\r\n        }\r\n        case ERROR: {\r\n            return {...state, isError: true, titleError: action.titleError};\r\n        }\r\n        case LOADING: {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\ntype RegistrationType = {\r\n    type: typeof REGISTRATION\r\n}\r\ntype ErrorType = {\r\n    type: typeof ERROR\r\n    titleError: string\r\n}\r\ntype LoadingType = {\r\n    type: typeof LOADING\r\n    isLoading: boolean\r\n}\r\nexport const registrationAC = (): RegistrationType => {\r\n    return {type: 'REGISTRATION'}\r\n};\r\nexport const errorAC = (titleError:string,): ErrorType => {\r\n    return {type: 'ERROR', titleError: titleError}\r\n};\r\nexport const loadingAC = (isLoading:boolean): LoadingType => {\r\n    return {type: 'LOADING', isLoading: isLoading}\r\n};\r\n\r\ntype ResponseErrorType = {\r\n    response:DataType\r\n}\r\ntype DataType = {\r\n        data : {\r\n            error: string\r\n            in: string\r\n            isEmailValid?: boolean\r\n            isPassValid?: boolean\r\n            passwordRegExp?: string\r\n        }\r\n}\r\n\r\nexport const registrationThunkCreator = (registrationData:RegistrationDataType) => (dispatch:Dispatch<any>) => {\r\n                dispatch(loadingAC(true))\r\n            passwordAPI.registration(registrationData)\r\n                .then((data) => {\r\n                    dispatch(registrationAC())\r\n                })\r\n                .catch((error: ResponseErrorType)=>{\r\n                    dispatch(errorAC(error.response.data.error))\r\n                })\r\n                .finally(()=>{\r\n                    dispatch(loadingAC(false))\r\n            })\r\n\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperPassword.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperPassword: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e); // ?\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error?s.errorInput:s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"password\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperPassword;","import React, {useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registrationThunkCreator} from \"../../store/registration-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport style from \"./new-password.module.css\";\r\nimport SuperPassword from \"../common/SuperPassword/SuperPassword\";\r\n\r\nfunction Registration() {\r\n    const dispatch = useDispatch()\r\n    const isRegistration = useSelector<AppStoreType, boolean>((state) => state.registration.isRegistration)\r\n    const isError = useSelector<AppStoreType, boolean>((state) => state.registration.isError)\r\n    const titleError = useSelector<AppStoreType, string>((state) => state.registration.titleError)\r\n    const isLoading = useSelector<AppStoreType, boolean>((state) => state.registration.isLoading)\r\n    const [passwordLength, setPasswordLength] = useState(true)\r\n    const [emailLength, setEmailLength] = useState(true)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [emailError, setEmailError] = useState(false)\r\n    const [emailValue, setEmailValue] = useState('')\r\n    const [passwordValue, setPasswordValue] = useState('')\r\n\r\n    function submit(e: any) { // e:React.FormEvent<HTMLFormElement>\r\n        e.preventDefault();\r\n        const obj = {\r\n            email: e.target.email.value,\r\n            password: e.target.password.value\r\n        }\r\n        dispatch(registrationThunkCreator(obj))\r\n    }\r\n\r\n    function changePassword(e: any) {\r\n        setPasswordValue(e.currentTarget.value)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLength(false)\r\n            setPasswordError(false)\r\n\r\n        } else {\r\n            setPasswordLength(true)\r\n        }\r\n    }\r\n\r\n    function changEmail(e: any) {\r\n        setEmailValue(e.currentTarget.value)\r\n        if (e.currentTarget.value.length >= 7 && (e.currentTarget.value.indexOf(\"@\") !== -1)) {\r\n            setEmailLength(false)\r\n            setEmailError(false)\r\n        } else {\r\n            setEmailLength(true)\r\n        }\r\n    }\r\n\r\n    function blurPassword(e: any) {\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordError(true)\r\n        }\r\n    }\r\n\r\n    function blurEmail(e: any) {\r\n        if (e.currentTarget.value.length < 7 || (e.currentTarget.value.indexOf(\"@\") == -1)) {\r\n            setEmailError(true)\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n    if (isRegistration) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <form onSubmit={submit} style={{marginTop: '50px'}}>\r\n                <div><label>Email<SuperInputText name={'email'} onChange={changEmail} value={emailValue}\r\n                                                 onBlur={blurEmail}/></label></div>\r\n                <div style={{height: '50px'}}>{emailError &&\r\n                <div style={{color: \"red\"}}>{'not valid email'}</div>}</div>\r\n                <div><label>Password<SuperPassword type={'password'} name={'password'} onChange={changePassword}\r\n                                                   value={passwordValue} onBlur={blurPassword}/></label></div>\r\n                <div style={{height: '50px'}}>{passwordError &&\r\n                <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}</div>\r\n                <div><SuperButton disabled={passwordLength || emailLength}\r\n                                  style={(passwordLength || emailLength) ? undefined : {background: \"green\"}}>registration</SuperButton>\r\n                </div>\r\n                {isError && <div style={{color: \"red\"}}>{titleError}</div>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {passwordAPI} from \"../api/api\";\r\n\r\n\r\nconst initialState = {\r\n    isNewPasswordSet: false,\r\n    isError: false,\r\n    titleError: null as string|null,\r\n    isLoading: false\r\n};\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = ReturnType<typeof newPasswordAC> | ReturnType<typeof errorAC> | ReturnType<typeof loadingAC>\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\n\r\nexport const newPasswordReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"NEW-PASSWORD\": {\r\n            return {...state, isNewPasswordSet: true};\r\n        }\r\n        case \"ERROR\": {\r\n            return {...state, isError: true, titleError: action.titleError}\r\n        }\r\n        case \"LOADING\": {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const newPasswordAC = () => ({type: \"NEW-PASSWORD\"} as const)\r\n\r\nexport const errorAC = (titleError: string,) => ({type: 'ERROR', titleError} as const)\r\n\r\nexport const loadingAC = (isLoading: boolean) => ({type: 'LOADING', isLoading} as const)\r\n\r\n\r\nexport const newPasswordTC = (password: string, resetPasswordToken: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(loadingAC(true))\r\n        await passwordAPI.setNewPassword(password, resetPasswordToken)\r\n        dispatch(newPasswordAC())\r\n    } catch (e) {\r\n        dispatch(errorAC(e.response.data.error));\r\n    } finally {\r\n        dispatch(loadingAC(false))\r\n    }\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./new-password.module.css\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {errorAC, newPasswordTC} from \"../../store/new-password-reducer\";\r\nimport {useParams} from 'react-router-dom';\r\n\r\nfunction NewPassword() {\r\n    const dispatch = useDispatch()\r\n    const isNewPasswordSet = useSelector<AppStoreType, boolean>(state => state.newPassword.isNewPasswordSet)\r\n    const error = useSelector<AppStoreType, boolean>(state => state.newPassword.isError)\r\n    const titleError = useSelector<AppStoreType, string | null>(state => state.newPassword.titleError)\r\n    const {resetPasswordToken} = useParams<{ resetPasswordToken: string }>();\r\n    const [passwordLength, setPasswordLength] = useState(true)\r\n    const [passwordLengthDub, setPasswordLengthDub] = useState(true)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [passwordErrorDub, setPasswordErrorDub] = useState(false)\r\n    const [buttonColor, setButtonColor] = useState('')\r\n\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        const password = e.target.password.value\r\n        const repeatPassword = e.target.repeatPassword.value\r\n        password === repeatPassword\r\n            ? dispatch(newPasswordTC(password, resetPasswordToken))\r\n            : dispatch(errorAC('Not equal'))\r\n\r\n    }\r\n    console.log(resetPasswordToken)\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.currentTarget.value.length)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLength(false)\r\n            setPasswordError(false)\r\n            setButtonColor('blue')\r\n        } else {\r\n            setPasswordLength(true)\r\n            setButtonColor('')\r\n        }\r\n    }\r\n    const changePasswordDub = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.currentTarget.value.length)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLengthDub(false)\r\n            setPasswordErrorDub(false)\r\n            setButtonColor('blue')\r\n        } else {\r\n            setPasswordLengthDub(true)\r\n            setButtonColor('')\r\n        }\r\n    }\r\n\r\n    const onblur = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.target.value)\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordError(true)\r\n        }\r\n    }\r\n    const onblurDub = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.target.value)\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordErrorDub(true)\r\n        }\r\n    }\r\n\r\n    if (isNewPasswordSet) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div className={style.container}>\r\n                <h3>Set password</h3>\r\n                <SuperInputText type='password' name='password' placeholder=\"New password\" onChange={changePassword}\r\n                                onBlur={onblur}/>\r\n                {passwordError && <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}\r\n\r\n                <SuperInputText type='password' name='repeatPassword' placeholder=\"Confirm new password\"\r\n                                onChange={changePasswordDub} onBlur={onblurDub}/>\r\n                {passwordErrorDub && <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}\r\n\r\n                <SuperButton type=\"submit\" disabled={passwordLength || passwordLengthDub}\r\n                             style={{background: buttonColor}}>\r\n                    Change password\r\n                </SuperButton>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewPassword;","import {cardsAPI} from \"../api/api\";\r\n\r\nconst initState = {\r\n    cards: [{\r\n        question:'',\r\n        answer:'',\r\n        updated:''\r\n    }],\r\n}\r\n\r\nexport function packCardsReducer(state=initState, action:any){\r\n    switch(action.type){\r\n        case 'GET-CARDS':{\r\n            return {...state, cards: action.cards}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const packCardsTC = (packId:string) => (dispatch:any) => {\r\n    cardsAPI.getCards(packId).then(data=>{\r\n        const cards = data.data.cards\r\n        dispatch({type: 'GET-CARDS', cards})\r\n    })\r\n\r\n}","import React, {useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {packCardsTC} from \"../../store/packCards-reducer\";\r\nimport {getPacksTC} from \"../../store/packs-reducer\";\r\n\r\nexport function PackCards(){\r\n    const {packId} = useParams<{ packId: string }>();\r\n    const dispatch = useDispatch()\r\n    const cards = useSelector<any, any>(state=>state.packCards.cards)\r\n    useEffect(()=>{\r\n        dispatch(packCardsTC(packId))\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            {cards.map((card:any)=>{\r\n                return (<div>\r\n                    {`${card.question}----${card.answer}---${card.updated}`}\r\n                </div>)\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport function Cards({packId}:any){\r\n    return(\r\n        <NavLink to={`/packs/${packId}`}>cards</NavLink>\r\n    )\r\n}","import { packsAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\ntype InitStateType = typeof initState\r\nconst initState = {\r\n    packs:[{}],\r\n    packsTotalCount:1,\r\n    pageCount: 10,\r\n    page:1,\r\n    sortPacks: '0created',\r\n    minCardsCount:0,\r\n    maxCardsCount:10,\r\n    inputValueSearch:''\r\n}\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, any>\r\n\r\nfunction packsReducer(state=initState, action:any):InitStateType {\r\n\r\n    switch (action.type){\r\n\r\n        case 'GET-PACKS':{\r\n\r\n            return  {...state, packs: action.filteredPacks, packsTotalCount: action.packsTotalCount, pageCount: action.pageCount, page: action.page, minCardsCount: action.rangeMin, maxCardsCount: action.rangeMax}\r\n            //return  {...state, newCards: action.newCards, packsTotalCount: action.packsTotalCount}\r\n        }\r\n        case 'SEARCHED-PACKS':{\r\n\r\n            return {...state, packs: action.filteredPacks, page: action.page, pageCount: action.pageCount, inputValueSearch: action.inputValueSearch}\r\n\r\n        }\r\n        case 'SORT-PACKS-UP':{\r\n            return {...state, packs: action.filteredPacks, sortPacks: action.sortPacksByDateUp}\r\n        }\r\n        case 'SORT-PACKS-DOWN':{\r\n            return {...state, packs: action.filteredPacks, sortPacks: action.sortPacksByDateDown}\r\n        }\r\n        case 'CARDS-COUNT':{\r\n\r\n            return {...state,packs: action.packs, minCardsCount: action.min, maxCardsCount: action.max, packsTotalCount: action.packsTotalCount}\r\n        }\r\n        default:\r\n            return initState\r\n    }\r\n}\r\nexport default packsReducer\r\n\r\n\r\nexport const getPacksTC = () : ThunkType=> (dispatch) => {\r\n\r\n\r\n    packsAPI.getCardPacks().then((data)=>{\r\n        const packsTotalCount= data.data.cardPacksTotalCount\r\n        const filteredPacks = data.data.cardPacks\r\n        const page = data.data.page\r\n        const pageCount = data.data.pageCount\r\n        dispatch({type:'GET-PACKS', filteredPacks, packsTotalCount, page, pageCount })//rangeMin, rangeMax\r\n    })\r\n}\r\n\r\nexport const packsTC = (page: number, pageCount:number, sortPacks:any, min:number, max:number, inputValueSearch:any ) : ThunkType=> (dispatch) => {\r\n\r\n    packsAPI.getCardPacks(page, pageCount, sortPacks, min,  max).then((cards)=>{\r\n        const packsTotalCount= cards.data.cardPacksTotalCount\r\n        const packs = cards.data.cardPacks\r\n        const filteredPacks = packs.filter((pack: any) => {\r\n            return pack.name.toLowerCase().indexOf(inputValueSearch) !== -1\r\n\r\n        })\r\n\r\n        dispatch({type:'GET-PACKS', filteredPacks, packsTotalCount, pageCount:pageCount, page:page})\r\n    })\r\n}\r\nexport const changeInputTC = (e:any, page:any, pageCount:any, sortPacks:any, min:number, max:number): ThunkType  =>(dispatch) => {\r\n\r\n    packsAPI.getCardPacks(page, pageCount, sortPacks, min, max).then((data) => {\r\n\r\n        const packs = data.data.cardPacks\r\n        const page = data.data.page\r\n        const pageCount = data.data.pageCount\r\n        const inputValueSearch = e.target.value.toLowerCase().trim()\r\n        const filteredPacks = packs.filter((pack: any) => {\r\n            return pack.name.toLowerCase().indexOf(e.target.value.toLowerCase().trim()) !== -1\r\n\r\n        })\r\n\r\n        dispatch({type: 'SEARCHED-PACKS', filteredPacks, page, pageCount, inputValueSearch })\r\n\r\n    })\r\n}\r\nexport const sortByDateUpTC = (page:any, pageCount:any, sortPacksByDateUp:string, min:number, max:number, inputValueSearch:any): ThunkType => (dispatch) => {\r\n    packsAPI.getCardPacks(page, pageCount, sortPacksByDateUp, min, max).then((data)=>{\r\n        const packs = data.data.cardPacks\r\n        const filteredPacks = packs.filter((pack: any) => {\r\n            return pack.name.toLowerCase().indexOf(inputValueSearch) !== -1\r\n\r\n        })\r\n        dispatch({type: 'SORT-PACKS-UP', filteredPacks, sortPacksByDateUp})\r\n    })\r\n}\r\n\r\nexport const sortByDateDown = (page:any, pageCount:any, sortPacksByDateDown:string, min:number, max:number, inputValueSearch:any): ThunkType => (dispatch) => {\r\n    packsAPI.getCardPacks(page, pageCount, sortPacksByDateDown, min, max).then((data)=>{\r\n        const packs = data.data.cardPacks\r\n        const filteredPacks = packs.filter((pack: any) => {\r\n            return pack.name.toLowerCase().indexOf(inputValueSearch) !== -1\r\n\r\n        })\r\n        dispatch({type: 'SORT-PACKS-DOWN', filteredPacks, sortPacksByDateDown})\r\n    })\r\n}\r\n\r\nexport const changeSliderTC = (page:any, pageCount:any, sortPacks:any, min:number,max:number): ThunkType => (dispatch) => {\r\n\r\n    packsAPI.getCardPacks(page, pageCount, sortPacks, min,max ).then(data=>{\r\n        const packs = data.data.cardPacks\r\n        const packsTotalCount= data.data.cardPacksTotalCount\r\n        dispatch({type:'CARDS-COUNT',packs,  min, max, packsTotalCount})\r\n\r\n\r\n    })\r\n}\r\n\r\nexport const deletePackTC = (id: string): ThunkType => (dispatch) => {\r\n\r\n    packsAPI.deletePack(id)\r\n        .then(res => {\r\n            dispatch(getPacksTC())\r\n        })\r\n}\r\n\r\nexport const updatePackTC = (id: string, name: string): ThunkType => (dispatch) => {\r\n\r\n    packsAPI.updatePack(id, name)\r\n        .then(res => {\r\n            dispatch(getPacksTC() as any)\r\n\r\n        })\r\n\r\n}","import ReactPaginate from 'react-paginate';\r\nimport React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport s from './PaginationComponent.module.css'\r\n//import {cardPacksAPI} from \"../../../api/api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {packsTC} from \"../../../store/packs-reducer\";\r\n\r\ntype PaginationComponentType={\r\n\r\n    options: number[]\r\n\r\n}\r\n\r\nexport function PaginationComponent({options}:PaginationComponentType) {\r\n    const initValueOption = useSelector<any,any>(state=>state.cards.pageCount)\r\n    const packs = useSelector<any, any>((state)=>state.cards.packsTotalCount)\r\n    const sortPacks = useSelector<any, any>(state => state.cards.sortPacks)\r\n    const min = useSelector<any, any>(state => state.cards.minCardsCount)\r\n    const max = useSelector<any, any>(state => state.cards.maxCardsCount)\r\n    const inputValueSearch = useSelector<any, any>(state => state.cards.inputValueSearch)\r\n    const dispatch = useDispatch()\r\n    const page = useSelector<any,any>((state=>state.cards.page))\r\n\r\n    const [value, setValue] = useState(initValueOption)\r\n\r\n\r\n\r\n\r\n\r\n    const pageCount = Math.ceil(packs/value)\r\n\r\n    function pageChange(e:any){\r\n        dispatch(packsTC(e.selected+1, value, sortPacks, min, max,inputValueSearch))\r\n\r\n    }\r\n    const paginationStyle={\r\n        display:'flex',\r\n        justifyContent:'flex-start',\r\n        margin: '50px'\r\n    }\r\n    function changeSelect(e:ChangeEvent<HTMLSelectElement>){\r\n        console.log(e.currentTarget.value)\r\n        setValue(Number(e.currentTarget.value))\r\n\r\n        dispatch(packsTC(page, Number(e.currentTarget.value),sortPacks, min, max, inputValueSearch))\r\n    }\r\n\r\n    return (\r\n        <div style={paginationStyle}>\r\n            <select onChange={changeSelect} value={value}>\r\n                {options.map((option, index)=>{\r\n                   return <option key={index} value={option}>{option}</option>\r\n            })}\r\n            </select>\r\n            <div>\r\n            <ReactPaginate\r\n                pageCount={pageCount}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={3}\r\n                breakClassName={s.breakMe}\r\n                containerClassName={s.pagination}\r\n                activeClassName={s.active}\r\n                onPageChange={pageChange}\r\n            />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {packsAPI} from \"../../../api/api\";\r\nimport {changeInputTC} from \"../../../store/packs-reducer\";\r\n\r\n\r\n\r\nexport function SearchComponent({cards}: any) {\r\n    const dispatch = useDispatch()\r\n    const pageCount = useSelector<any, any>(state => state.cards.pageCount)\r\n    const page = useSelector<any, any>(state => state.cards.page)\r\n    const sortPacks = useSelector<any, any>(state => state.cards.sortPacks)\r\n    const min = useSelector<any, any>(state => state.cards.minCardsCount)\r\n    const max = useSelector<any, any>(state => state.cards.maxCardsCount)\r\n    //const [value, setValue] = useState('')\r\n    //const [timerId, setTimerId] = useState<any>()\r\n    // useEffect(()=>{\r\n    //     dispatch(packsTC(page, pageCount))\r\n    // },[])\r\n     function debounce(fn:Function, ms:number){\r\n        let timeout:any;\r\n        return function(){\r\n            console.log(1)\r\n            //@ts-ignore\r\n            const fnCall = () => {fn.apply(this,arguments)}\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(fnCall, ms)\r\n        }\r\n    }\r\n\r\n    // function changeInput(e: ChangeEvent<HTMLInputElement>) {\r\n    //     //setValue(e.currentTarget.value)\r\n    //     console.log(e.target.value)\r\n    //     const arr = cards.filter((card:any)=>{\r\n    //        return  card.name.toLowerCase().indexOf(e.target.value.toLowerCase().trim()) !== -1\r\n    //\r\n    //     })\r\n    //     dispatch({type:'SEARCHED-PACKS', arr})\r\n    //     console.log(arr)\r\n        //setValue(e.target.value)\r\n\r\n\r\n\r\n    const changeInput = (e:any) => {\r\n\r\n        // packsAPI.getCardPacks(page, pageCount).then((data) => {\r\n        //\r\n        //     const cards = data.data.cardPacks\r\n        //\r\n        //     const arr = cards.filter((card: any) => {\r\n        //         return card.name.toLowerCase().indexOf(e.target.value.toLowerCase().trim()) !== -1\r\n        //\r\n        //     })\r\n        //\r\n        //     dispatch({type: 'SEARCHED-PACKS', arr})\r\n        //\r\n        // })\r\n        dispatch(changeInputTC(e, page, pageCount, sortPacks, min, max))\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     const timeout = setTimeout(handleSearch, 1000)\r\n    //     setTimerId(timeout)\r\n    //     return () => {\r\n    //         clearTimeout(timerId)\r\n    //     }\r\n    //\r\n    // }, [value])\r\n\r\n    let debounceChangeInput = debounce(changeInput, 500)\r\n\r\n    return (\r\n        <div>\r\n            <span>Search</span>\r\n            <input type=\"text\" onChange={debounceChangeInput} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeInputTC, sortByDateDown, sortByDateUpTC} from \"../../../store/packs-reducer\";\r\n\r\nexport function SortByDate(){\r\n    const dispatch = useDispatch()\r\n    const pageCount = useSelector<any,any>(state=>state.cards.pageCount)\r\n    const page = useSelector<any, any>(state => state.cards.page)\r\n    const min = useSelector<any, any>(state => state.cards.minCardsCount)\r\n    const max = useSelector<any, any>(state => state.cards.maxCardsCount)\r\n    const sortPacks = useSelector<any, any>(state => state.cards.sortPacks)\r\n    const inputValueSearch = useSelector<any, any>(state => state.cards.inputValueSearch)\r\n    function upDate(){\r\n        dispatch(sortByDateUpTC(page, pageCount, '0created', min, max, inputValueSearch))\r\n    }\r\n    function downDate(){\r\n        dispatch(sortByDateDown(page, pageCount, '1created', min, max, inputValueSearch))\r\n    }\r\n\r\n    const buttonStyle1 = {\r\n        width:'30px',\r\n        backgroundColor:'blue'\r\n    }\r\n    const buttonStyle2 = {\r\n        width:'30px',\r\n        backgroundColor:'white'\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n            <button style={(sortPacks === '0created')? buttonStyle1: buttonStyle2} onClick={upDate}>+</button>\r\n            </div>\r\n            <div>\r\n            <button style={(sortPacks === '1created')? buttonStyle1: buttonStyle2} onClick={downDate}>-</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useRef} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Slider } from 'antd';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeSliderTC} from \"../../../../store/packs-reducer\";\r\n\r\ntype PropsType = {\r\n    range: Array<number>\r\n}\r\n\r\n\r\nexport function SliderAnt( ){\r\n    const ref = useRef(null)\r\n    const [range, setRange] = useState([0,24])\r\n\r\n    const sortPacks = useSelector<any, any>(state => state.cards.sortPacks)\r\n    const page = useSelector<any,any>((state=>state.cards.page))\r\n    const pageCount = useSelector<any,any>(state=>state.cards.pageCount)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    function onChange(e:any){\r\n        setRange(e)\r\n    }\r\n    function click(){\r\n     //@ts-ignore\r\n        const value = ref.current.props.value\r\n        dispatch(changeSliderTC(page, pageCount,sortPacks, value[0],value[1]))\r\n\r\n\r\n    }\r\n    return(\r\n        <div style={{display:'flex'}}>\r\n            <span>{0}</span>\r\n            <div style={{width:'200px'}}>\r\n                <Slider\r\n                    range\r\n                    step={1}\r\n                    value={[range[0], range[1]]}\r\n                    onChange={onChange}\r\n                    min={0}\r\n                    max={24}\r\n                    ref={ref}\r\n                />\r\n            </div>\r\n            <span>{24}</span>\r\n            <button onClick={click}>Cards</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {PaginationComponent} from \"../common/PaginationComponent/PaginationComponent\";\r\nimport {SearchComponent} from \"../common/SearchComponent/SearchComponent\";\r\nimport {SortByDate} from \"../common/SortByDate/SortByDate\";\r\nimport {SliderAnt} from \"../common/PaginationComponent/RangeAnt/RangeAnt\";\r\nimport {Cards} from \"./Cards\";\r\nimport {deletePackTC, getPacksTC, updatePackTC} from \"../../store/packs-reducer\";\r\n\r\n\r\n\r\nfunction Packs(){\r\n    const options = [10, 20, 30, 40, 50]\r\n    const packs = useSelector<any, any>((state)=>state.cards.packs)\r\n    const dispatch = useDispatch()\r\n    const deletePack = (id: string) => dispatch(deletePackTC(id))\r\n    const updatePack = (id: string, newTitle: string) => dispatch(updatePackTC(id, newTitle))\r\n\r\n    useEffect(()=>{\r\n        dispatch(getPacksTC())\r\n\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            <h1>Packs</h1>\r\n            <SliderAnt/>\r\n            <SortByDate/>\r\n            <SearchComponent/>\r\n            <div style={{display:'flex', justifyContent:'center'}}>\r\n            <div>Name</div>\r\n            <div>CardsCount</div>\r\n            <div>Update</div>\r\n            <button>Add</button>\r\n\r\n            <div>Cards</div>\r\n            </div>\r\n            {packs.map((pack:any, index:number)=>{\r\n                return <div style={{display:'flex', justifyContent:'center'}}>\r\n                    <div key={index}>{`${pack.name} ---- ${pack.cardsCount}----${pack.updated}-----`}</div>\r\n                    <div>\r\n                        <button name={\"del\"} >Delete</button>\r\n                    </div>\r\n                    <div>\r\n                        <button name={\"update\"} >Update</button>\r\n                    </div>\r\n\r\n                    <Cards packId={pack._id}/>\r\n                </div>\r\n            })}\r\n            <PaginationComponent  options={options}/>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Packs\r\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Error404 from \"../pages/404\";\r\nimport Login from \"../pages/login\";\r\nimport PasswordRecovery from \"../pages/password-recovery\";\r\nimport Profile from \"../pages/profile\";\r\nimport Registration from \"../pages/registration\";\r\nimport NewPassword from \"../pages/new-password\";\r\nimport {PackCards} from \"../pages/PackCards\";\r\nimport {Cards} from \"../pages/Cards\";\r\nimport Packs from \"../pages/packs\";\r\n\r\n\r\n\r\nexport const PATH = {\r\n    login: '/login',\r\n    passwordRecovery: '/passwordRecovery',\r\n    profile:'/profile',\r\n    registration:'/registration',\r\n    newPassword:'/newPassword',\r\n    cards: '/cards',\r\n    packs: '/packs'\r\n\r\n}\r\n\r\nfunction Routes() {\r\n\r\n    return (\r\n        <div >\r\n            <Switch>\r\n\r\n                <Route path={'/'} exact render={() => <Redirect to={'/login'}/>}/>\r\n                <Route path={'/login'} render={() => <Login/>}/>\r\n                <Route path={'/passwordRecovery'} exact render={() => <PasswordRecovery/>}/>\r\n                <Route path={'/profile'} exact render={() => <Profile/>}/>\r\n                <Route path={'/registration'} exact render={() => <Registration/>}/>\r\n                <Route path={'/newPassword/:resetPasswordToken'}  render={() => <NewPassword/>}/>\r\n                <Route path={'/newPassword/'} exact render={ () => <PasswordRecovery/>}/>\r\n                <Route path={'/cards'} exact render={() => <Cards/>}/>\r\n                <Route path={'/packs'} exact render={() => <Packs/>}/>\r\n                <Route path={'/packs/:packId'} exact render={() => <PackCards/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React, {useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport s from './Header.module.css';\r\nimport {PATH} from \"../routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {logout} from \"../../store/login-reducer\";\r\n\r\nfunction Header() {\r\n    const [activeMenu, setActiveMenu] = useState<boolean>(false);\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const toggle = () => {\r\n        setActiveMenu(!activeMenu)\r\n    }\r\n    return (\r\n        <div className={s.sidebar}>\r\n            <div className={s.menu} onClick={toggle}>&#9776;</div>\r\n            <div className={`${s.containerMenuLinks} ${activeMenu && s.activeMenu}`}>\r\n                <NavLink to={PATH.login} className={s.inactive} activeClassName={s.active}>  Login  </NavLink>\r\n                <NavLink to={PATH.passwordRecovery} className={s.inactive} activeClassName={s.active}>  Password\r\n                    recovery  </NavLink>\r\n                <NavLink to={PATH.profile} className={s.inactive} activeClassName={s.active}>  Profile  </NavLink>\r\n                <NavLink to={PATH.registration} className={s.inactive}\r\n                         activeClassName={s.active}>  Registration  </NavLink>\r\n                <NavLink to={PATH.newPassword} className={s.inactive}\r\n                         activeClassName={s.active}>  Entering a new password  </NavLink>\r\n                {isAuth ? <button onClick={() => dispatch(logout())}>Log out</button> :\r\n                    <NavLink to={'/login'}>Login</NavLink>}\r\n                <NavLink to={PATH.packs} className={s.inactive} activeClassName={s.active}>  Packs  </NavLink>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Routes from \"./components/routes/Routes\";\r\nimport Header from \"./components/header/Header\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport 'rc-slider/assets/index.css';\r\nimport {getPacksTC} from \"./store/packs-reducer\";\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                    <Header/>\r\n                    <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nconst initState = {\r\n\r\n};\r\n\r\nexport const errorReducer = (state = initState, action: any): any => {\r\n    switch (action.type) {\r\n        case \"\": {\r\n            return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const errorAC = (): any => {};","type InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    userId: null as string | null,\r\n    userName: null as string | null,\r\n    avatar: '',\r\n    publicCardPacksCount: null as number | null // количество колод\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                userName: action.userName,\r\n                publicCardPacksCount: action.publicCardPacksCount,\r\n                userId: action.userId\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const profileAC = (userName: string | null, publicCardPacksCount: number | null, userId: string | null) => (\r\n    {type: 'SET-USER-DATA', userName, publicCardPacksCount, userId} as const)\r\n\r\ntype ActionType = ReturnType<typeof profileAC>","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {errorReducer} from \"./error-reducer\";\r\nimport {passwordRecoveryReducer} from \"./password-recovery-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {newPasswordReducer} from \"./new-password-reducer\";\r\nimport thunk from \"redux-thunk\"\r\nimport packsReducer from \"./packs-reducer\";\r\nimport {packCardsReducer} from \"./packCards-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login:loginReducer,\r\n    error:errorReducer,\r\n    passwordRecovery:passwordRecoveryReducer,\r\n    profile:profileReducer,\r\n    registration:registrationReducer,\r\n    newPassword:newPasswordReducer,\r\n    cards: packsReducer,\r\n    packCards: packCardsReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\nconsole.log(store.getState())","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Header_sidebar__1WlgA\",\"menu\":\"Header_menu__3GX8V\",\"containerMenuLinks\":\"Header_containerMenuLinks__1BEt2\",\"activeMenu\":\"Header_activeMenu__3Ivds\",\"inactive\":\"Header_inactive__2an89\",\"active\":\"Header_active__1ekGk\",\"text\":\"Header_text__XOPPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"new-password_container__1vSL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInput_superInput__w5LvN\",\"errorInput\":\"SuperInput_errorInput__AFSy-\",\"error\":\"SuperInput_error__27PeI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperPassword_superInput__qYmCo\",\"errorInput\":\"SuperPassword_errorInput__1wcV-\",\"error\":\"SuperPassword_error__2aMXW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"PaginationComponent_pagination__1l0u_\",\"active\":\"PaginationComponent_active__2NdFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3rUuo\",\"spanClassName\":\"SuperCheckbox_spanClassName__MefLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1slZT\",\"red\":\"SuperButton_red__1l6f1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"password-recovery_container__2mPeV\"};"],"sourceRoot":""}