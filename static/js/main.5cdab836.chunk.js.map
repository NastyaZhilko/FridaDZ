{"version":3,"sources":["components/pages/new-password.module.css","components/common/SuperInput/SuperInput.module.css","components/common/SuperButton/SuperPassword/SuperPassword.module.css","components/common/SuperCheckbox/SuperCheckbox.module.css","components/common/SuperButton/SuperButton.module.css","components/pages/password-recovery.module.css","components/pages/404.tsx","components/common/SuperInput/SuperInput.tsx","components/common/SuperCheckbox/SuperCheckbox.tsx","components/common/SuperButton/SuperButton.tsx","api/api.tsx","store/login-reducer.ts","components/pages/login.tsx","store/password-recovery-reducer.ts","components/pages/password-recovery.tsx","components/pages/profile.tsx","store/registration-reducer.ts","components/common/SuperButton/SuperPassword/SuperPassword.tsx","components/pages/Loading.tsx","components/pages/registration.tsx","store/new-password-reducer.ts","components/pages/new-password.tsx","components/routes/Routes.tsx","components/header/Header.tsx","store/error-reducer.ts","store/profile-reducer.ts","store/store.ts","App.tsx","reportWebVitals.ts","index.tsx","components/header/Header.module.css"],"names":["module","exports","Error404","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","api","axios","create","baseURL","withCredentials","passwordAPI","email","post","from","message","password","resetPasswordToken","data","authAPI","delete","initState","_id","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","isAuth","setAuthUserDataAC","payload","login","dispatch","then","response","catch","titleError","logout","resultCode","Login","useDispatch","useSelector","state","to","onSubmit","preventDefault","style","SuperInput","placeholder","initialState","isMessageSend","isError","isLoading","errorAC","loadingAC","PasswordRecovery","target","a","passwordRecoveryTC","container","Profile","userData","REGISTRATION","ERROR","LOADING","isRegistration","SuperPassword","Loading","Registration","registration","useState","passwordLength","setPasswordLength","emailLength","setEmailLength","passwordError","setPasswordError","emailError","setEmailError","emailValue","setEmailValue","passwordValue","setPasswordValue","registrationData","obj","finally","marginTop","length","indexOf","onBlur","height","color","disabled","undefined","background","isNewPasswordSet","NewPassword","newPassword","useParams","passwordLengthDub","setPasswordLengthDub","passwordErrorDub","setPasswordErrorDub","buttonColor","setButtonColor","console","log","repeatPassword","newPasswordTC","PATH","Routes","path","exact","render","Header","activeMenu","setActiveMenu","sidebar","menu","onClick","containerMenuLinks","inactive","activeClassName","active","reducers","combineReducers","action","passwordRecovery","profile","store","createStore","applyMiddleware","thunk","window","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cdab836.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"new-password_container__1vSL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInput_superInput__w5LvN\",\"errorInput\":\"SuperInput_errorInput__AFSy-\",\"error\":\"SuperInput_error__27PeI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperPassword_superInput__3mLXw\",\"errorInput\":\"SuperPassword_errorInput__yexRJ\",\"error\":\"SuperPassword_error__3Oz_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3rUuo\",\"spanClassName\":\"SuperCheckbox_spanClassName__MefLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1slZT\",\"red\":\"SuperButton_red__1l6f1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"password-recovery_container__2mPeV\"};","import React from \"react\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e); // ?\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error?s.errorInput:s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;","\r\nimport React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className} `;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import axios from \"axios\";\r\nimport {LoginFormData} from \"../store/login-reducer\";\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n\r\n\r\nexport type SetNewPasswordParamsType={\r\n    password:string\r\n    resetPasswordToken:string\r\n}\r\n\r\nexport type ResponseRestoreType={\r\n    info: string\r\n    error:string\r\n}\r\nexport type RegistrationDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type ResponseRegistrationDataType = {\r\n        addedUser:{\r\n            _id: string\r\n            email: string\r\n            rememberMe: boolean\r\n            isAdmin: boolean\r\n            name: string\r\n            verified: boolean\r\n            publicCardPacksCount: number\r\n            created: string\r\n            updated: string\r\n        }\r\n}\r\nexport const passwordAPI = {\r\n    forgot(email: string | null) {\r\n        return api.post<ResponseRestoreType>('auth/forgot', {\r\n            email,\r\n            from:'nasten4ik2010@gmail.com',\r\n            message:`<div style=\"background-color: lime; padding: 15px\">\r\n              password recovery link: \t\r\n              <a href='http://localhost:3000/FridaDZ#/newPassword/$token$'>\t\r\n              http://localhost:3000/FridaDZ#/newPassword/$token$ </a></div>`})\r\n    },\r\n\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return api.post<ResponseRestoreType>('auth/set-new-password', {password, resetPasswordToken})\r\n    },\r\n\r\n    registration(data:RegistrationDataType){\r\n        return api.post<ResponseRegistrationDataType>('auth/register', data)\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    login(data: LoginFormData) {\r\n        return api.post('auth/login', data)\r\n    },\r\n    authMe() {\r\n        return api.post('auth/me', {})\r\n    },\r\n    logout() {\r\n        return api.delete('auth/me')\r\n    }\r\n};","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {log} from \"util\";\r\n\r\nexport type LoginFormData = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n\r\n    error?: string\r\n\r\n    /*token: string\r\n    tokenDeathTime: number\r\n    __v: number*/\r\n\r\n}\r\n\r\ntype UserAuthData = {\r\n    data: UserDataType\r\n    isAuth: boolean\r\n}\r\n\r\n/*email: \"nya-admin@nya.nya\",\r\n    password: \"1qazxcvBG\",*/\r\n\r\n\r\nconst initState: UserAuthData = {\r\n    data: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: \"\",\r\n        publicCardPacksCount: 0,\r\n\r\n        created: '',\r\n        updated: '',\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false\r\n    },\r\n    isAuth: false\r\n};\r\n\r\nexport const loginReducer = (state = initState, action: ActionsType): any => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\": {\r\n            return {...state, ...action.payload}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setAuthUserDataAC = ({data, isAuth}: UserAuthData) => {\r\n    return {\r\n        type: 'SET-USER-DATA',\r\n        payload: {data, isAuth}\r\n    } as const\r\n}\r\n\r\n\r\ntype ActionsType = ReturnType<typeof setAuthUserDataAC>\r\n\r\ntype getAuthUserDataThunkType = ThunkAction<Promise<void>, AppStoreType, unknown, ActionsType>\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\n\r\ntype DataType = {\r\n    data: {\r\n        error: string\r\n        in: string\r\n        isEmailValid?: boolean\r\n        isPassValid?: boolean\r\n        passwordRegExp?: string\r\n    }\r\n}\r\n\r\ntype ResponseErrorType = {\r\n    response: DataType\r\n}\r\n\r\nconst errorAC = (titleError: string | null) => ({type: 'ERROR', titleError} as const)\r\n\r\nconst getAuthUserData = (): getAuthUserDataThunkType => {\r\n\r\n    return (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n        debugger\r\n        return authAPI.authMe().then(response => {\r\n                let data: UserDataType = response.data\r\n                let isAuth = true\r\n                debugger\r\n                dispatch(setAuthUserDataAC({data, isAuth}))\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const loginAC = (data: LoginFormData) => ({type: 'LOGIN', data} as const);\r\n\r\nexport const login = (data: LoginFormData): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStoreType, unknown, any>) => {\r\n        authAPI.login(data).then(response =>\r\n            dispatch(getAuthUserData())\r\n        )\r\n            .catch((error: ResponseErrorType) => {\r\n                dispatch(errorAC(error.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n        authAPI.logout().then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let dataLogout = initState\r\n                dispatch(setAuthUserDataAC(dataLogout))\r\n            }\r\n        })\r\n    }\r\n}\r\n","import React, { FormEvent } from \"react\";\r\nimport SuperInput from \"../common/SuperInput/SuperInput\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login, LoginFormData} from \"../../store/login-reducer\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport function Login() {\r\n\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    const submitLoginData = (e: FormEvent<HTMLFormElement>) => {\r\n        debugger\r\n        e.preventDefault();\r\n        const email = e.currentTarget.email.value\r\n        const password = e.currentTarget.password.value\r\n        const rememberMe: boolean = e.currentTarget.rememberMe.value\r\n        const data: LoginFormData = {email, password, rememberMe}\r\n        debugger\r\n        dispatch(login(data))\r\n    }\r\n\r\n    const loginStyle = {\r\n        'display': 'flex',\r\n        'flex-direction': 'column',\r\n        'align-items': 'center'\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitLoginData}>\r\n            <div style={loginStyle}>\r\n                <h2>Login</h2>\r\n                <SuperInput name={'email'} placeholder={'Enter your email'}/>\r\n                <SuperInput name={'password'} type={'password'} placeholder={'Enter your password'}/>\r\n                <div><SuperCheckbox name={'rememberMe'} type={'checkbox'}/>\r\n                    <span>Remember Me</span></div>\r\n                <SuperButton type={'submit'}>Send</SuperButton>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Login;","import {AppStoreType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {passwordAPI} from \"../api/api\";\r\n\r\n\r\nconst initialState = {\r\n    isMessageSend: false,\r\n    isError: false,\r\n    titleError: null as string|null,\r\n    isLoading: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = ReturnType<typeof passwordRecoveryAC>|ReturnType<typeof errorAC>|ReturnType<typeof loadingAC>\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\n\r\n\r\nexport const passwordRecoveryReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PASSWORD-RECOVERY': {\r\n            return {...state, isMessageSend: true};\r\n        }\r\n        case \"ERROR\": {\r\n            return {...state, isError: true, titleError: action.titleError}\r\n        }\r\n        case \"LOADING\": {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst passwordRecoveryAC = () => ({type: 'PASSWORD-RECOVERY'} as const);\r\nconst errorAC = (titleError:string|null) => ({type: 'ERROR', titleError} as const)\r\nconst loadingAC = (isLoading:boolean) => ({type: 'LOADING', isLoading} as const)\r\n\r\nexport const passwordRecoveryTC = (email: string | null): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(loadingAC(true))\r\n        await passwordAPI.forgot(email)\r\n        dispatch(passwordRecoveryAC())\r\n        dispatch(errorAC(null))\r\n    } catch  (e) {\r\n        dispatch(errorAC(e.response.data.error));\r\n\r\n    } finally {\r\n        dispatch(loadingAC(false))\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./password-recovery.module.css\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {passwordRecoveryTC} from \"../../store/password-recovery-reducer\";\r\n\r\nfunction PasswordRecovery() {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const sendMail = (e: any) => {\r\n        e.preventDefault();\r\n        const email = e.target.email.value\r\n        // alert(email)\r\n        dispatch(passwordRecoveryTC(email))\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={sendMail}>\r\n            <div>\r\n                <h3>Password recovery</h3>\r\n                <div className={style.container}>\r\n                    <SuperInputText name={'email'} placeholder=\"Email\"/>\r\n                    <span>Enter your email</span>\r\n                    <SuperButton>\r\n                        Send\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PasswordRecovery;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {UserDataType} from \"../../store/login-reducer\";\r\n\r\nfunction Profile() {\r\n\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n    const userData = useSelector<AppStoreType, UserDataType>(state => state.login.data)\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Profile</h2>\r\n\r\n            {isAuth\r\n                ? <div>\r\n                    {userData.name}\r\n            </div>\r\n                : <Redirect to={'login'}/>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {Dispatch} from \"react\";\r\nimport {RegistrationDataType, passwordAPI} from \"../api/api\";\r\n\r\nconst REGISTRATION = \"REGISTRATION\"\r\nconst ERROR = \"ERROR\"\r\nconst LOADING = \"LOADING\"\r\n\r\nconst initState = {\r\n    isRegistration: false,\r\n    isError: false,\r\n    titleError: '',\r\n    isLoading: false\r\n};\r\ntype initStateType = {\r\n    isRegistration: boolean\r\n    isError: boolean\r\n    titleError: string\r\n    isLoading: boolean\r\n}\r\n\r\ntype ActionType = RegistrationType | ErrorType | LoadingType\r\n\r\nexport const registrationReducer = (state = initState, action: ActionType): initStateType => {\r\n    switch (action.type) {\r\n        case REGISTRATION: {\r\n            return {...state, isRegistration: true};\r\n        }\r\n        case ERROR: {\r\n            return {...state, isError: true, titleError: action.titleError};\r\n        }\r\n        case LOADING: {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\ntype RegistrationType = {\r\n    type: typeof REGISTRATION\r\n}\r\ntype ErrorType = {\r\n    type: typeof ERROR\r\n    titleError: string\r\n}\r\ntype LoadingType = {\r\n    type: typeof LOADING\r\n    isLoading: boolean\r\n}\r\nexport const registrationAC = (): RegistrationType => {\r\n    return {type: 'REGISTRATION'}\r\n};\r\nexport const errorAC = (titleError:string,): ErrorType => {\r\n    return {type: 'ERROR', titleError: titleError}\r\n};\r\nexport const loadingAC = (isLoading:boolean): LoadingType => {\r\n    return {type: 'LOADING', isLoading: isLoading}\r\n};\r\n\r\ntype ResponseErrorType = {\r\n    response:DataType\r\n}\r\ntype DataType = {\r\n        data : {\r\n            error: string\r\n            in: string\r\n            isEmailValid?: boolean\r\n            isPassValid?: boolean\r\n            passwordRegExp?: string\r\n        }\r\n}\r\n\r\nexport const registrationThunkCreator = (registrationData:RegistrationDataType) => (dispatch:Dispatch<any>) => {\r\n                dispatch(loadingAC(true))\r\n            passwordAPI.registration(registrationData)\r\n                .then((data) => {\r\n                    debugger\r\n                    dispatch(registrationAC())\r\n                })\r\n                .catch((error: ResponseErrorType)=>{\r\n                    debugger\r\n                    dispatch(errorAC(error.response.data.error))\r\n                })\r\n                .finally(()=>{\r\n                    dispatch(loadingAC(false))\r\n            })\r\n\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperPassword.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperPassword: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e); // ?\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error?s.errorInput:s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"password\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperPassword;","import React from \"react\";\r\n\r\nfunction Loading(){\r\n    return(\r\n        <div>\r\n            Loading...\r\n        </div>\r\n    )\r\n}\r\nexport default Loading","import React, {useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registrationThunkCreator} from \"../../store/registration-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport SuperPassword from \"../common/SuperButton/SuperPassword/SuperPassword\";\r\nimport Loading from \"./Loading\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport style from \"./new-password.module.css\";\r\n\r\nfunction Registration() {\r\n    const dispatch = useDispatch()\r\n    const isRegistration = useSelector<AppStoreType, boolean>((state) => state.registration.isRegistration)\r\n    const isError = useSelector<AppStoreType, boolean>((state) => state.registration.isError)\r\n    const titleError = useSelector<AppStoreType, string>((state) => state.registration.titleError)\r\n    const isLoading = useSelector<AppStoreType, boolean>((state) => state.registration.isLoading)\r\n    const [passwordLength, setPasswordLength] = useState(true)\r\n    const [emailLength, setEmailLength] = useState(true)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [emailError, setEmailError] = useState(false)\r\n    const [emailValue, setEmailValue] = useState('')\r\n    const [passwordValue, setPasswordValue] = useState('')\r\n\r\n    function submit(e: any) { // e:React.FormEvent<HTMLFormElement>\r\n        e.preventDefault();\r\n        const obj = {\r\n            email: e.target.email.value,\r\n            password: e.target.password.value\r\n        }\r\n        dispatch(registrationThunkCreator(obj))\r\n    }\r\n\r\n    function changePassword(e: any) {\r\n        setPasswordValue(e.currentTarget.value)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLength(false)\r\n            setPasswordError(false)\r\n\r\n        } else {\r\n            setPasswordLength(true)\r\n        }\r\n    }\r\n\r\n    function changEmail(e: any) {\r\n        setEmailValue(e.currentTarget.value)\r\n        if (e.currentTarget.value.length >= 7 && (e.currentTarget.value.indexOf(\"@\") !== -1)) {\r\n            setEmailLength(false)\r\n            setEmailError(false)\r\n        } else {\r\n            setEmailLength(true)\r\n        }\r\n    }\r\n\r\n    function blurPassword(e: any) {\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordError(true)\r\n        }\r\n    }\r\n\r\n    function blurEmail(e: any) {\r\n        if (e.currentTarget.value.length < 7 || (e.currentTarget.value.indexOf(\"@\") == -1)) {\r\n            setEmailError(true)\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n    if (isRegistration) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <form onSubmit={submit} style={{marginTop: '50px'}}>\r\n                <div><label>Email<SuperInputText name={'email'} onChange={changEmail} value={emailValue}\r\n                                                 onBlur={blurEmail}/></label></div>\r\n                <div style={{height: '50px'}}>{emailError &&\r\n                <div style={{color: \"red\"}}>{'not valid email'}</div>}</div>\r\n                <div><label>Password<SuperPassword type={'password'} name={'password'} onChange={changePassword}\r\n                                                   value={passwordValue} onBlur={blurPassword}/></label></div>\r\n                <div style={{height: '50px'}}>{passwordError &&\r\n                <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}</div>\r\n                <div><SuperButton disabled={passwordLength || emailLength}\r\n                                  style={(passwordLength || emailLength) ? undefined : {background: \"green\"}}>registration</SuperButton>\r\n                </div>\r\n                {isError && <div style={{color: \"red\"}}>{titleError}</div>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {passwordAPI} from \"../api/api\";\r\n\r\n\r\nconst initialState = {\r\n    isNewPasswordSet: false,\r\n    isError: false,\r\n    titleError: null as string|null,\r\n    isLoading: false\r\n};\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = ReturnType<typeof newPasswordAC> | ReturnType<typeof errorAC> | ReturnType<typeof loadingAC>\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\n\r\nexport const newPasswordReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"NEW-PASSWORD\": {\r\n            return {...state, isNewPasswordSet: true};\r\n        }\r\n        case \"ERROR\": {\r\n            return {...state, isError: true, titleError: action.titleError}\r\n        }\r\n        case \"LOADING\": {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const newPasswordAC = () => ({type: \"NEW-PASSWORD\"} as const)\r\n\r\nexport const errorAC = (titleError: string,) => ({type: 'ERROR', titleError} as const)\r\n\r\nexport const loadingAC = (isLoading: boolean) => ({type: 'LOADING', isLoading} as const)\r\n\r\n\r\nexport const newPasswordTC = (password: string, resetPasswordToken: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(loadingAC(true))\r\n        await passwordAPI.setNewPassword(password, resetPasswordToken)\r\n        dispatch(newPasswordAC())\r\n    } catch (e) {\r\n        dispatch(errorAC(e.response.data.error));\r\n    } finally {\r\n        dispatch(loadingAC(false))\r\n    }\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./new-password.module.css\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {errorAC, newPasswordTC} from \"../../store/new-password-reducer\";\r\nimport {useParams} from 'react-router-dom';\r\n\r\nfunction NewPassword() {\r\n    const dispatch = useDispatch()\r\n    const isNewPasswordSet = useSelector<AppStoreType, boolean>(state => state.newPassword.isNewPasswordSet)\r\n    const error = useSelector<AppStoreType, boolean>(state => state.newPassword.isError)\r\n    const titleError = useSelector<AppStoreType, string | null>(state => state.newPassword.titleError)\r\n    const {resetPasswordToken} = useParams<{ resetPasswordToken: string }>();\r\n    const [passwordLength, setPasswordLength] = useState(true)\r\n    const [passwordLengthDub, setPasswordLengthDub] = useState(true)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [passwordErrorDub, setPasswordErrorDub] = useState(false)\r\n    const [buttonColor, setButtonColor] = useState('')\r\n\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        const password = e.target.password.value\r\n        const repeatPassword = e.target.repeatPassword.value\r\n        password === repeatPassword\r\n            ? dispatch(newPasswordTC(password, resetPasswordToken))\r\n            : dispatch(errorAC('Not equal'))\r\n\r\n    }\r\n    console.log(resetPasswordToken)\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.currentTarget.value.length)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLength(false)\r\n            setPasswordError(false)\r\n            setButtonColor('blue')\r\n        } else {\r\n            setPasswordLength(true)\r\n            setButtonColor('')\r\n        }\r\n    }\r\n    const changePasswordDub = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.currentTarget.value.length)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLengthDub(false)\r\n            setPasswordErrorDub(false)\r\n            setButtonColor('blue')\r\n        } else {\r\n            setPasswordLengthDub(true)\r\n            setButtonColor('')\r\n        }\r\n    }\r\n\r\n    const onblur = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.target.value)\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordError(true)\r\n        }\r\n    }\r\n    const onblurDub = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.target.value)\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordErrorDub(true)\r\n        }\r\n    }\r\n\r\n    if (isNewPasswordSet) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div className={style.container}>\r\n                <h3>Set password</h3>\r\n                <SuperInputText type='password' name='password' placeholder=\"New password\" onChange={changePassword}\r\n                                onBlur={onblur}/>\r\n                {passwordError && <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}\r\n\r\n                <SuperInputText type='password' name='repeatPassword' placeholder=\"Confirm new password\"\r\n                                onChange={changePasswordDub} onBlur={onblurDub}/>\r\n                {passwordErrorDub && <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}\r\n\r\n                <SuperButton type=\"submit\" disabled={passwordLength || passwordLengthDub}\r\n                             style={{background: buttonColor}}>\r\n                    Change password\r\n                </SuperButton>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewPassword;","import React from \"react\";\r\nimport s from './Routes.module.css'\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Error404 from \"../pages/404\";\r\nimport Login from \"../pages/login\";\r\nimport PasswordRecovery from \"../pages/password-recovery\";\r\nimport Profile from \"../pages/profile\";\r\nimport Registration from \"../pages/registration\";\r\nimport NewPassword from \"../pages/new-password\";\r\n\r\nexport const PATH = {\r\n    login: '/login',\r\n    passwordRecovery: '/passwordRecovery',\r\n    profile:'/profile',\r\n    registration:'/registration',\r\n    newPassword:'/newPassword'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div >\r\n            <Switch>\r\n                в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR\r\n                exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)\r\n                <Route path={'/'} exact render={() => <Redirect to={'/login'}/>}/>\r\n                <Route path={'/login'} render={() => <Login/>}/>\r\n                <Route path={'/passwordRecovery'} exact render={() => <PasswordRecovery/>}/>\r\n                <Route path={'/profile'} exact render={() => <Profile/>}/>\r\n                <Route path={'/registration'} exact render={() => <Registration/>}/>\r\n                <Route path={'/newPassword/:resetPasswordToken'}  render={() => <NewPassword/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n                //у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React, {useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport s from './Header.module.css';\r\nimport {PATH} from \"../routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {logout} from \"../../store/login-reducer\";\r\n\r\nfunction Header() {\r\n    const [activeMenu, setActiveMenu] = useState<boolean>(false);\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const toggle = () => {\r\n        setActiveMenu(!activeMenu)\r\n    }\r\n    return (\r\n        <div className={s.sidebar}>\r\n            <div className={s.menu} onClick={toggle}>&#9776;</div>\r\n            <div className={`${s.containerMenuLinks} ${activeMenu && s.activeMenu}`}>\r\n                <NavLink to={PATH.login} className={s.inactive} activeClassName={s.active}>  Login  </NavLink>\r\n                <NavLink to={PATH.passwordRecovery} className={s.inactive} activeClassName={s.active}>  Password\r\n                    recovery  </NavLink>\r\n                <NavLink to={PATH.profile} className={s.inactive} activeClassName={s.active}>  Profile  </NavLink>\r\n                <NavLink to={PATH.registration} className={s.inactive}\r\n                         activeClassName={s.active}>  Registration  </NavLink>\r\n                <NavLink to={PATH.newPassword} className={s.inactive}\r\n                         activeClassName={s.active}>  Entering a new password  </NavLink>\r\n                {isAuth ? <button onClick={() => dispatch(logout)}>Log out</button> :\r\n                    <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","\r\nconst initState = {\r\n\r\n};\r\n\r\nexport const errorReducer = (state = initState, action: any): any => {\r\n    switch (action.type) {\r\n        case \"\": {\r\n            return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const errorAC = (): any => {};","\r\nconst initState = {\r\n\r\n};\r\n\r\nexport const profileReducer = (state = initState, action: any): any => {\r\n    switch (action.type) {\r\n        case \"\": {\r\n            return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const profileAC = (): any => {};","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {errorReducer} from \"./error-reducer\";\r\nimport {passwordRecoveryReducer} from \"./password-recovery-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {newPasswordReducer} from \"./new-password-reducer\";\r\nimport thunk from \"redux-thunk\"\r\n\r\nconst reducers = combineReducers({\r\n    login:loginReducer,\r\n    error:errorReducer,\r\n    passwordRecovery:passwordRecoveryReducer,\r\n    profile:profileReducer,\r\n    registration:registrationReducer,\r\n    newPassword:newPasswordReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Routes from \"./components/routes/Routes\";\r\nimport Header from \"./components/header/Header\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport axios from \"axios\";\r\nimport {registrationAC} from \"./store/registration-reducer\";\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n    // const instance = axios.create({\r\n    //     baseURL:'http://localhost:7542/2.0/',\r\n    //     withCredentials:true,\r\n    // })\r\n    // const obj = {\r\n    //     email: \"nya-1171admin11@gmail.com\",\r\n    //     password: \"1qazxcvBG\"\r\n    // }\r\n    // useEffect(()=>{\r\n    //     axios.post(\"http://localhost:7542/2.0/auth/register\", obj)\r\n    //         .then((data) => {\r\n    //             console.log(data)\r\n    //         })\r\n    // },[])\r\n\r\n    // useEffect(()=> {\r\n    //         instance.post(\"auth/register\", obj)\r\n    //             .then((data) => console.log(data))\r\n    //             .catch((error)=>{\r\n    //                 console.log('Error')\r\n    //             })\r\n    //             .finally(()=>console.log('finally'))\r\n    //     }\r\n    //         // .finally(()=>{\r\n    //         // console.log(\"finally\")\r\n    //     //})\r\n    // ,[])\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <Header/>\r\n                    <Routes/>\r\n                </Provider>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n\r\n            <App/>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Header_sidebar__1WlgA\",\"menu\":\"Header_menu__3GX8V\",\"containerMenuLinks\":\"Header_containerMenuLinks__1BEt2\",\"activeMenu\":\"Header_activeMenu__3Ivds\",\"inactive\":\"Header_inactive__2an89\",\"active\":\"Header_active__1ekGk\",\"text\":\"Header_text__XOPPz\"};"],"sourceRoot":""}