{"version":3,"sources":["components/pages/404.tsx","components/common/SuperCheckbox/SuperCheckbox.tsx","components/common/SuperButton/SuperButton.tsx","api/api.tsx","store/login-reducer.ts","components/pages/modal/modal.tsx","components/common/SuperInput/SuperInput.tsx","components/pages/login.tsx","store/password-recovery-reducer.ts","components/common/preloader.svg","components/pages/Loading.tsx","components/pages/password-recovery.tsx","components/pages/profile.tsx","store/registration-reducer.ts","components/common/SuperPassword/SuperPassword.tsx","components/pages/registration.tsx","store/new-password-reducer.ts","components/pages/new-password.tsx","store/packs-reducer.ts","components/common/PaginationComponent/PaginationComponent.tsx","components/common/SearchComponent/SearchComponent.tsx","components/common/SortByDate/SortByDate.tsx","components/common/PaginationComponent/RangeAnt/RangeAnt.tsx","components/pages/modal/ModelsPacks/DeletePackModal.tsx","components/pages/modal/ModelsPacks/AddPackModal.tsx","components/pages/modal/ModelsPacks/UpdatePackModal.tsx","components/pages/packs.tsx","store/packCards-reducer.ts","components/pages/learnsPage.tsx","components/pages/modal/ModelsCards/AddCardModal.tsx","components/pages/modal/ModelsCards/DeleteCardModel.tsx","components/pages/modal/ModelsCards/UpdateCardModal.tsx","components/pages/cards.tsx","components/routes/Routes.tsx","components/header/Header.tsx","App.tsx","reportWebVitals.ts","store/error-reducer.ts","store/profile-reducer.ts","store/app-reducer.ts","store/store.ts","index.tsx","components/header/Header.module.css","components/pages/packs.module.css","components/pages/learnsPage.module.css","components/pages/new-password.module.css","components/pages/modal/modal.module.css","components/common/SuperInput/SuperInput.module.css","components/pages/password-recovery.module.css","components/common/SuperPassword/SuperPassword.module.css","components/common/PaginationComponent/PaginationComponent.module.css","components/common/SuperCheckbox/SuperCheckbox.module.css","components/common/SuperButton/SuperButton.module.css","components/common/Styles/common.module.css"],"names":["Error404","SuperCheckbox","type","onChange","onChangeChecked","className","children","spanClassName","restProps","finalInputClassName","s","checkbox","e","currentTarget","checked","SuperButton","red","finalClassName","default","api","axios","create","baseURL","withCredentials","passwordAPI","email","post","from","message","password","resetPasswordToken","data","authAPI","delete","packsAPI","page","pageCount","sortPacks","min","max","user_id","get","params","title","cardsPack","name","id","put","_id","cardsAPI","cardsPackId","cardModel","card","question","answer","gradeCardAPI","grade","card_id","initState","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","isAuth","isFetching","isInitialized","error","showSuccessModal","setAuthUserDataAC","payload","errorAC","titleError","toggleIsFetching","setShowSuccessModalAC","show","Modal","props","modalStyles","top","height","left","width","CSSStyles","backgroundDiv","onClick","bgOnClick","style","modalWindow","buttonsStyle","SuperInputText","onChangeText","onKeyPress","onEnter","finalSpanClassName","errorInput","superInput","value","key","Login","dispatch","useDispatch","useSelector","state","login","to","onSubmit","preventDefault","then","response","setTimeout","catch","console","log","SuperInput","placeholder","PATH","passwordRecovery","inactive","activeClassName","active","registration","backgroundColor","initialState","isMessageSend","isError","isLoading","loadingAC","Loading","src","preloader","PasswordRecovery","target","a","passwordRecoveryTC","block","container","text","Profile","userData","profile","REGISTRATION","ERROR","LOADING","isRegistration","SuperPassword","Registration","useState","passwordLength","setPasswordLength","emailLength","setEmailLength","passwordError","setPasswordError","emailError","setEmailError","emailValue","setEmailValue","passwordValue","setPasswordValue","registrationData","obj","finally","marginTop","length","indexOf","onBlur","color","disabled","undefined","background","isNewPasswordSet","NewPassword","newPassword","useParams","passwordLengthDub","setPasswordLengthDub","passwordErrorDub","setPasswordErrorDub","buttonColor","setButtonColor","repeatPassword","newPasswordTC","status","packs","packsTotalCount","isMyPacks","minCardsCount","maxCardsCount","inputValueSearch","packsReducer","action","filteredPacks","sortPacksByDateUp","sortPacksByDateDown","setErrorAC","setIsLoadingAC","getPacksAC","getPacksTC","cardPacksTotalCount","cardPacks","err","packsTC","cards","filter","pack","toLowerCase","PaginationComponent","options","initValueOption","setValue","Math","ceil","display","justifyContent","margin","Number","map","option","index","marginPagesDisplayed","pageRangeDisplayed","breakClassName","breakMe","containerClassName","pagination","onPageChange","selected","SearchComponent","debounceChangeInput","fn","ms","timeout","fnCall","apply","arguments","clearTimeout","debounce","trim","searchedPacksAC","changeInputTC","SortByDate","buttonStyle1","buttonStyle2","sortPacksUPAC","sortByDateUpTC","sortPacksDownAC","sortByDateDown","SliderAnt","ref","useRef","range","setRange","step","current","cardsCountAC","changeSliderTC","DeletePackModal","successClick","component","history","useHistory","closeModal","goBack","AddModal","createItem","displayModal","setDisplayModal","UpdatePackModal","updateTitle","Packs","packId","app","UserData","displayCreateModal","setDisplayCreateModal","setDisplayDeleteModal","setDisplayUpdateModal","useEffect","deletePack","res","deletePackTC","updatePack","updatePackTC","showMine","setIsMyPacksAC","htmlFor","table","tableItem","tableHeader","createPackTC","cardsCount","path","render","getCardsTC","getCardsAC","LearnPage","packCards","checkMode","setCheckMode","numberCurrentCard","setNumberCurrentCard","addGrade","gradeTC","sortCards","gradeArr","chance","random","currentInd","maxVal","forEach","el","button","AddCardModal","value2","setValue2","DeleteCardModal","onDeleteCard","setModal","UpdateCardModal","updateCard","flexDirection","alignItems","Cards","displayDeleteModal","displayUpdateModal","deleteCard","deleteCardTC","updateCardTC","model","cardsPack_id","Routes","exact","Header","activeMenu","setActiveMenu","sidebar","menu","containerMenuLinks","links","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","userId","userName","reducers","combineReducers","store","createStore","applyMiddleware","thunk","window","getState","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"kMAYeA,MAVf,WACI,OACI,gCACI,sCACA,kDACA,uF,gCCoCGC,EA/ByC,SAAC,GASpD,EAPGC,KAOF,IANEC,EAMH,EANGA,SAAUC,EAMb,EANaA,gBACVC,EAKH,EALGA,UACAC,GAIH,EALcC,cAKd,EAJGD,UAEGE,EAEN,4FAOKC,EAAmB,UAAMC,IAAEC,SAAR,YAAoBN,GAAwB,IAErE,OACI,kCACI,mCACIH,KAAM,WACNC,SAZa,SAACS,GACtBT,GACGA,EAASS,GACZR,GAAmBA,EAAgBQ,EAAEC,cAAcC,UAU3CT,UAAWI,GACPD,IAEPF,GAAY,sBAAMD,UAAWK,IAAEH,cAAnB,SAAmCD,Q,iBCZ7CS,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKX,EAGR,EAHQA,UACFG,EAEN,mCACKS,EAAc,UAAMD,EAAMN,IAAEM,IAAMN,IAAEQ,QAAtB,YAAiCb,EAAjC,KAEpB,OACI,oCACIA,UAAWY,GACPT,K,eClBVW,E,OAAMC,EAAMC,OAAO,CACrBC,QAAS,sCAETC,iBAAiB,IA8BRC,EAAc,SAChBC,GACH,OAAON,EAAIO,KAA0B,cAAe,CAChDD,QACAE,KAAM,qCACNC,QAAQ,mNALPJ,EAAc,SAYRK,EAAkBC,GAC7B,OAAOX,EAAIO,KAA0B,wBAAyB,CAACG,WAAUC,wBAbpEN,EAAc,SAgBVO,GACT,OAAOZ,EAAIO,KAAmC,gBAAiBK,IAI1DC,EAAU,SACbD,GACF,OAAOZ,EAAIO,KAAK,aAAcK,IAFzBC,EAAU,WAQf,OAAOb,EAAIc,OAAO,YAuCbC,EAAW,WASjB,IANCC,EAMF,uDANiB,EACfC,EAKF,uDALsB,GACpBC,EAIF,uDAJsB,WACpBC,EAGF,uDAHgB,EACdC,EAEF,uDAFgB,GACdC,EACF,uCACE,OAAOrB,EAAIsB,IAA2B,cAAe,CAEjDC,OAAQ,CACJP,OACAC,YACAC,YACAC,MACAC,MACAC,cAlBHN,EAAW,SAsBTS,GACP,OAAOxB,EAAIO,KAAJ,aAAwB,CAACkB,UAAW,CAACC,KAAMF,MAvB7CT,EAAW,SAyBTY,GACP,OAAO3B,EAAIc,OAAJ,wBAA4Ba,KA1B9BZ,EAAW,SA4BTY,EAAYD,GACnB,OAAO1B,EAAI4B,IAAJ,cAAuB,CAACH,UAAW,CAACI,IAAKF,EAAID,WA8C/CI,EAAW,SACXC,GAAgE,IAA3Cd,EAA0C,uDAAtB,GAAID,EAAkB,uDAAH,EACjE,OAAOhB,EAAIsB,IAAJ,kCAAmCS,EAAnC,sBAA4Dd,EAA5D,iBAA8ED,KAFhFc,EAAW,SAITE,GACP,OAAOhC,EAAIO,KAAJ,aAAsB,CAAC0B,KAAKD,KAL9BF,EAAW,SAOTH,GACP,OAAO3B,EAAIc,OAAJ,wBAA4Ba,KAR9BG,EAAW,SAUTH,EAAWO,EAAkBC,GACpC,OAAOnC,EAAI4B,IAAJ,aAAqB,CAACK,KAAK,CAACJ,IAAIF,EAAIO,WAAUC,aAIhDC,EAAe,SACdT,EAAYU,GAClB,OAAOrC,EAAI4B,IAAI,cAAgB,CAACS,QAAOC,QAAQX,KC/JjDY,EAA0B,CAC5B3B,KAAM,CACFiB,IAAK,GACLvB,MAAO,GACPoB,KAAM,GACNc,OAAQ,GACRC,qBAAsB,EACtBC,QAAS,GACTC,QAAS,GACTC,SAAS,EACTC,UAAU,EACVC,YAAY,GAGhBC,QAAQ,EACRC,YAAY,EACZC,eAAe,EACfC,MAAO,GACPC,kBAAkB,GAwBhBC,EAAoB,SAACxC,EAAoBmC,GAC3C,MAAO,CACHhE,KAAM,gBACNsE,QAAS,CAACzC,OAAMmC,YAGlBO,EAAU,SAACC,GAAD,MAAgC,CAACxE,KAAM,QAASwE,eAM1DC,EAAmB,SAACR,GAAD,MAA0B,CAC/CjE,KAAM,qBACNiE,eAESS,EAAwB,SAACC,GAAD,MAAoB,CAAC3E,KAAM,yBAA0B2E,S,iBCnF7EC,EAA6B,SAACC,GACvC,IAAMC,EAAW,aACbC,IAAI,eAAD,OAAiBF,EAAMG,OAAS,EAAhC,OACHC,KAAK,eAAD,OAAiBJ,EAAMK,MAAQ,EAA/B,OACJA,MAAOL,EAAMK,MACbF,OAAQH,EAAMG,QACXH,EAAMM,WAEb,OACI,qCACKN,EAAMO,eAAiB,qBAAKC,QAASR,EAAMS,UAAWnF,UAAWoF,IAAMH,gBACxE,sBAAKjF,UAAWoF,IAAMC,YAAaD,MAAOT,EAA1C,UACI,6BAAKD,EAAMpC,QACX,qBAAKtC,UAAWoF,IAAME,aAAtB,SAAqCZ,EAAMzE,kB,iBCkC5CsF,EA5C2C,SAAC,GAUtD,EARG1F,KAQF,IAPEC,EAOH,EAPGA,SAAU0F,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZ1B,EAKH,EALGA,MACAhE,EAIH,EAJGA,UAAWE,EAId,EAJcA,cAERC,EAEN,6GAgBKwF,EAAkB,UAAMtF,IAAE2D,MAAR,YAAiB9D,GAAgC,IACnEE,EAAmB,UAAM4D,EAAM3D,IAAEuF,WAAWvF,IAAEwF,WAA3B,YAAyC7F,GAElE,OACI,qCACI,mCACIH,KAAM,OACNC,SArBa,SAACS,GACtBT,GACGA,EAASS,GAEZiF,GAAgBA,EAAajF,EAAEC,cAAcsF,QAkBrCL,WAhBe,SAAClF,GACxBkF,GAAcA,EAAWlF,GAEf,UAAVA,EAAEwF,KACCL,GACAA,KAYK1F,UAAWI,GAEPD,IAEP6D,GAAS,sBAAMhE,UAAW2F,EAAjB,SAAsC3B,Q,iBC2B7CgC,MAnER,WAEH,IAyBIpB,EAzBEqB,EAAWC,cACXrC,EAASsC,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMxC,UACjEW,EAAO2B,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMpC,oBAErE,OAAIJ,EACO,cAAC,IAAD,CAAUyC,GAAI,cAsBrB1B,EADDJ,EACO,KAEC,IAIR,yCAAG,sBAAM+B,SAvBY,SAAChG,GAErBA,EAAEiG,iBACF,IAAMpF,EAAQb,EAAEC,cAAcY,MAAM0E,MAC9BtE,EAAWjB,EAAEC,cAAcgB,SAASsE,MACpClC,EAAsBrD,EAAEC,cAAcoD,WAAWkC,MAEvDG,EHsGa,SAACvE,GAElB,OAAO,SAACuE,GACJA,EAAS3B,GAAiB,IAC1B3C,EAAcD,GACT+E,MAAK,SAAAC,GACF,IAAIhF,EAAqBgF,EAAShF,KAElCuE,EAAS/B,EAAkBxC,GADd,IAEbuE,EAAS1B,GAAsB,IAC/BoC,YAAW,WACPV,EAAS1B,GAAsB,MAChC,QAENqC,OAAM,SAACrG,GACJ,IAAMyD,EAAQzD,EAAEmG,SACVnG,EAAEmG,SAAShF,KAAKsC,MACfzD,EAAEgB,QAAU,gCACnBsF,QAAQC,IAAI,UAAZ,eAA2BvG,IAC3BsG,QAAQC,IAAI9C,GACZiC,EAAS7B,EAAQJ,OAEzBiC,EAAS3B,GAAiB,KG5HjB+B,CADmB,CAACjF,QAAOI,WAAUoC,iBAiB5C,SACE,sBAAKwB,MAdM,CACf,QAAW,OACX,iBAAkB,SAClB,cAAe,UAWX,UACI,uCACA,cAAC2B,EAAD,CAAgBvE,KAAM,QAASwE,YAAa,qBAC5C,cAACD,EAAD,CAAgBvE,KAAM,WAAY3C,KAAM,WAAYmH,YAAa,wBACjE,gCAAK,cAAC,EAAD,CAAexE,KAAM,aAAc3C,KAAM,aAC1C,kDACJ,cAAC,EAAD,CAAaA,KAAM,SAAnB,mBACA,gCAEI,cAAC,IAAD,CAASyG,GAAIW,GAAKC,iBAAkBlH,UAAWK,IAAE8G,SAAUC,gBAAiB/G,IAAEgH,OAA9E,8BAIA,cAAC,IAAD,CAASf,GAAIW,GAAKK,aAActH,UAAWK,IAAE8G,SACpCC,gBAAiB/G,IAAEgH,OAD5B,sCAQT,cAAC,EAAD,CAAO/E,MAAO,UAAWyC,MAAO,IAAKF,OAAQ,GAAII,eAAe,EAAOE,UAAW,aAC3EH,UAAW,CACPJ,IAAKA,EAAI,KACT2C,gBAAiB,qB,2CCrEjCC,GAAe,CACjBC,eAAe,EACfC,SAAS,EACTrD,WAAY,KACZsD,WAAW,GA2BTvD,GAAU,SAACC,GAAD,MAA6B,CAACxE,KAAM,QAASwE,eACvDuD,GAAY,SAACD,GAAD,MAAwB,CAAC9H,KAAM,UAAW8H,cCrC7C,OAA0B,sCCS1BE,OAPf,WACI,OACI,8BACI,qBAAKC,IAAKC,QC2CPC,OArCf,WACI,IAAM/B,EAAWC,cAUjB,OARkBC,aAAmC,SAACC,GAAD,OAAWA,EAAMkB,aAAaK,aAU3E,cAAC,GAAD,IAQJ,sBAAMpB,SAjBM,SAAChG,GACbA,EAAEiG,iBACF,IAAMpF,EAAQb,EAAE0H,OAAO7G,MAAM0E,MAE7BG,EHoB0B,SAAC7E,GAAD,+CAAqC,WAAO6E,GAAP,SAAAiC,EAAA,sEAE/DjC,EAAS2B,IAAU,IAF4C,SAGzDzG,EAAmBC,GAHsC,OAI/D6E,EAR0B,CAACpG,KAAM,sBASjCoG,EAAS7B,GAAQ,OAL8C,gDAO/D6B,EAAS7B,GAAQ,KAAEsC,SAAShF,KAAKsC,QAP8B,yBAU/DiC,EAAS2B,IAAU,IAV4C,4EAArC,sDGpBjBO,CAAmB/G,KAa5B,SACA,sBAAKpB,UAAWoF,IAAMgD,MAAtB,UACI,qDACA,sBAAKpI,UAAWoF,IAAMiD,UAAtB,UACI,cAACtB,EAAD,CAAgBvE,KAAM,QAAUwE,YAAa,UAC7C,sBAAMhH,UAAWoF,IAAMkD,KAAvB,qGAEA,cAAC,EAAD,4BCRDC,OAzBf,WAEI,IAAM1E,EAASsC,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMxC,UACjE2E,EAAWrC,aAAwC,SAAAC,GAAK,OAAIA,EAAMC,MAAM3E,QAI9E,OAHmByE,aAAyC,SAAAC,GAAK,OAAIA,EAAMqC,QAAQlF,wBAI/E,gCACI,yCAECM,EACK,8BACC,0CAAa2E,EAAShG,UAMvB,cAAC,IAAD,CAAU8D,GAAI,c,QCtB1BoC,GAAe,eACfC,GAAQ,QACRC,GAAU,UAEVvF,GAAY,CACdwF,gBAAgB,EAChBnB,SAAS,EACTrD,WAAY,GACZsD,WAAW,GA0CFC,GAAY,SAACD,GACtB,MAAO,CAAC9H,KAAM,UAAW8H,UAAWA,I,wCCKzBmB,GA5C0C,SAAC,GAUrD,EARGjJ,KAQF,IAPEC,EAOH,EAPGA,SAAU0F,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZ1B,EAKH,EALGA,MACAhE,EAIH,EAJGA,UAAWE,EAId,EAJcA,cAERC,EAEN,6GAgBKwF,EAAkB,UAAMtF,KAAE2D,MAAR,YAAiB9D,GAAgC,IACnEE,EAAmB,UAAM4D,EAAM3D,KAAEuF,WAAWvF,KAAEwF,WAA3B,YAAyC7F,GAElE,OACI,qCACI,mCACIH,KAAM,WACNC,SArBa,SAACS,GACtBT,GACGA,EAASS,GAEZiF,GAAgBA,EAAajF,EAAEC,cAAcsF,QAkBrCL,WAhBe,SAAClF,GACxBkF,GAAcA,EAAWlF,GAEf,UAAVA,EAAEwF,KACCL,GACAA,KAYK1F,UAAWI,GAEPD,IAEP6D,GAAS,sBAAMhE,UAAW2F,EAAjB,SAAsC3B,QCyC7C+E,OApFf,WACI,IAAM9C,EAAWC,cACX2C,EAAiB1C,aAAmC,SAACC,GAAD,OAAWA,EAAMkB,aAAauB,kBAClFnB,EAAUvB,aAAmC,SAACC,GAAD,OAAWA,EAAMkB,aAAaI,WAC3ErD,EAAa8B,aAAkC,SAACC,GAAD,OAAWA,EAAMkB,aAAajD,cAC7EsD,EAAYxB,aAAmC,SAACC,GAAD,OAAWA,EAAMkB,aAAaK,aAL/D,EAMwBqB,oBAAS,GANjC,oBAMbC,EANa,KAMGC,EANH,OAOkBF,oBAAS,GAP3B,oBAObG,EAPa,KAOAC,EAPA,OAQsBJ,oBAAS,GAR/B,oBAQbK,EARa,KAQEC,EARF,OASgBN,oBAAS,GATzB,oBASbO,EATa,KASDC,EATC,OAUgBR,mBAAS,IAVzB,oBAUbS,EAVa,KAUDC,EAVC,OAWsBV,mBAAS,IAX/B,oBAWbW,EAXa,KAWEC,EAXF,KAuDpB,OAAIjC,EAEI,cAAC,GAAD,IAGJkB,EACO,cAAC,IAAD,CAAUvC,GAAI,WAIrB,qBAAKtG,UAAWoF,KAAMiD,UAAtB,SACI,uBAAM9B,SArDd,SAAgBhG,GACZA,EAAEiG,iBACF,IF4CiCqD,EE5C3BC,EAAM,CACR1I,MAAOb,EAAE0H,OAAO7G,MAAM0E,MACtBtE,SAAUjB,EAAE0H,OAAOzG,SAASsE,OAEhCG,GFwCiC4D,EExCCC,EFwCyC,SAAC7D,GACpEA,EAAS2B,IAAU,IACvBzG,EAAyB0I,GACpBpD,MAAK,SAAC/E,GACHuE,EA1BT,CAACpG,KAAM,oBA4BD+G,OAAM,SAAC5C,GACJiC,EA1BT,CAACpG,KAAM,QAASwE,WA0BUL,EAAM0C,SAAShF,KAAKsC,WAExC+F,SAAQ,WACL9D,EAAS2B,IAAU,WEHHxC,MAAO,CAAC4E,UAAW,QAA3C,UACI,8BAAK,0CAAY,cAACjD,EAAD,CAAgBvE,KAAM,QAAS1C,SAlC5D,SAAoBS,GAChBmJ,EAAcnJ,EAAEC,cAAcsF,OAC1BvF,EAAEC,cAAcsF,MAAMmE,QAAU,IAA8C,IAAxC1J,EAAEC,cAAcsF,MAAMoE,QAAQ,MACpEd,GAAe,GACfI,GAAc,IAEdJ,GAAe,IA4B2DtD,MAAO2D,EAC5CU,OAnB7C,SAAmB5J,IACXA,EAAEC,cAAcsF,MAAMmE,OAAS,IAA6C,GAAvC1J,EAAEC,cAAcsF,MAAMoE,QAAQ,OACnEV,GAAc,WAkBV,qBAAKpE,MAAO,CAACP,OAAQ,QAArB,SAA+B0E,GAC/B,qBAAKnE,MAAO,CAACgF,MAAO,OAApB,SAA6B,sBAC7B,8BAAK,6CAAe,cAAC,GAAD,CAAevK,KAAM,WAAY2C,KAAM,WAAY1C,SAjDnF,SAAwBS,GACpBqJ,EAAiBrJ,EAAEC,cAAcsF,OAC7BvF,EAAEC,cAAcsF,MAAMmE,QAAU,GAChCf,GAAkB,GAClBI,GAAiB,IAGjBJ,GAAkB,IA2CqBpD,MAAO6D,EAAeQ,OA7BrE,SAAsB5J,GACdA,EAAEC,cAAcsF,MAAMmE,OAAS,GAC/BX,GAAiB,WA4Bb,qBAAKlE,MAAO,CAACP,OAAQ,QAArB,SAA+BwE,GAC/B,qBAAKjE,MAAO,CAACgF,MAAO,OAApB,SAA6B,iDAC7B,8BAAK,cAAC,EAAD,CAAaC,SAAUpB,GAAkBE,EAC5B/D,MAAQ6D,GAAkBE,OAAemB,EAAY,CAACC,WAAY,SAD/E,4BAGJ7C,GAAW,qBAAKtC,MAAO,CAACgF,MAAO,OAApB,SAA6B/F,UCpFnDmD,GAAe,CACjBgD,kBAAkB,EAClB9C,SAAS,EACTrD,WAAY,KACZsD,WAAW,GA0BFvD,GAAU,SAACC,GAAD,MAA0B,CAACxE,KAAM,QAASwE,eAEpDuD,GAAY,SAACD,GAAD,MAAyB,CAAC9H,KAAM,UAAW8H,cCuDrD8C,OAlFf,WACI,IAAMxE,EAAWC,cACXsE,EAAmBrE,aAAmC,SAAAC,GAAK,OAAIA,EAAMsE,YAAYF,oBAGhF/I,GAFO0E,aAAmC,SAAAC,GAAK,OAAIA,EAAMsE,YAAYhD,WACzDvB,aAAyC,SAAAC,GAAK,OAAIA,EAAMsE,YAAYrG,cAC1DsG,cAAtBlJ,oBALY,EAMyBuH,oBAAS,GANlC,oBAMZC,EANY,KAMIC,EANJ,OAO+BF,oBAAS,GAPxC,oBAOZ4B,EAPY,KAOOC,EAPP,OAQuB7B,oBAAS,GARhC,oBAQZK,EARY,KAQGC,EARH,OAS6BN,oBAAS,GATtC,oBASZ8B,EATY,KASMC,EATN,OAUmB/B,mBAAS,IAV5B,oBAUZgC,EAVY,KAUCC,EAVD,KA0DnB,OArCApE,QAAQC,IAAIrF,GAqCR+I,EACO,cAAC,IAAD,CAAUlE,GAAI,WAGrB,sBAAMC,SAlDO,SAAChG,GACdA,EAAEiG,iBACF,IAAMhF,EAAWjB,EAAE0H,OAAOzG,SAASsE,MAC7BoF,EAAiB3K,EAAE0H,OAAOiD,eAAepF,MAEzCG,EADNzE,IAAa0J,EDcQ,SAAC1J,EAAkBC,GAAnB,+CAA6D,WAAOwE,GAAP,SAAAiC,EAAA,sEAElFjC,EAAS2B,IAAU,IAF+D,SAG5EzG,EAA2BK,EAAUC,GAHuC,OAIlFwE,EAX4B,CAACpG,KAAM,iBAO+C,gDAMlFoG,EAAS7B,GAAQ,KAAEsC,SAAShF,KAAKsC,QANiD,yBAQlFiC,EAAS2B,IAAU,IAR+D,4EAA7D,sDCbNuD,CAAc3J,EAAUC,GACxB2C,GAAQ,eA4CvB,SACI,sBAAKpE,UAAWoF,KAAMiD,UAAtB,UACI,8CACA,cAACtB,EAAD,CAAgBlH,KAAK,WAAW2C,KAAK,WAAWwE,YAAY,eAAelH,SA3ChE,SAACS,GAEhBA,EAAEC,cAAcsF,MAAMmE,QAAU,GAChCf,GAAkB,GAClBI,GAAiB,GACjB2B,EAAe,UAEf/B,GAAkB,GAClB+B,EAAe,MAoCKd,OArBb,SAAC5J,GAERA,EAAEC,cAAcsF,MAAMmE,OAAS,GAC/BX,GAAiB,MAmBZD,GAAiB,qBAAKjE,MAAO,CAACgF,MAAO,OAApB,SAA6B,+CAE/C,cAACrD,EAAD,CAAgBlH,KAAK,WAAW2C,KAAK,iBAAiBwE,YAAY,uBAClDlH,SArCF,SAACS,GAEnBA,EAAEC,cAAcsF,MAAMmE,QAAU,GAChCY,GAAqB,GACrBE,GAAoB,GACpBE,EAAe,UAEfJ,GAAqB,GACrBI,EAAe,MA6BkCd,OAnBvC,SAAC5J,GAEXA,EAAEC,cAAcsF,MAAMmE,OAAS,GAC/Bc,GAAoB,MAiBfD,GAAoB,qBAAK1F,MAAO,CAACgF,MAAO,OAApB,SAA6B,+CAElD,cAAC,EAAD,CAAavK,KAAK,SAASwK,SAAUpB,GAAkB2B,EAC1CxF,MAAO,CAACmF,WAAYS,GADjC,mC,wCC3EV3H,GAAY,CACd+H,OAAQ,OACRpH,MAAO,KACPqH,MAAM,GACNC,gBAAgB,EAChBvJ,UAAW,GACXD,KAAK,EACLyJ,WAAW,EACXvJ,UAAW,WACXwJ,cAAc,EACdC,cAAc,GACdC,iBAAiB,GACjBzH,kBAAkB,GAuDP0H,OAxCf,WAA0E,IAApDvF,EAAmD,uDAA7C/C,GAAWuI,EAAkC,uCAErE,OAAQA,EAAO/L,MAEX,IAAK,iBACD,OAAO,2BAAIuG,GAAX,IAAkBgF,OAAQQ,EAAOR,SAErC,IAAK,YACD,OAAO,2BAAIhF,GAAX,IAAkBpC,MAAO4H,EAAO5H,QAEpC,IAAK,YAED,OAAO,2BAAKoC,GAAZ,IAAmBiF,MAAOO,EAAOC,cAAeP,gBAAiBM,EAAON,gBACpEvJ,UAAW6J,EAAO7J,UAAWD,KAAM8J,EAAO9J,OAGlD,IAAK,iBAED,OAAO,2BAAIsE,GAAX,IAAkBiF,MAAOO,EAAOC,cAAe/J,KAAM8J,EAAO9J,KAAMC,UAAW6J,EAAO7J,UAAW2J,iBAAkBE,EAAOF,mBAG5H,IAAK,gBACD,OAAO,2BAAItF,GAAX,IAAkBiF,MAAOO,EAAOC,cAAe7J,UAAW4J,EAAOE,oBAErE,IAAK,kBACD,OAAO,2BAAI1F,GAAX,IAAkBiF,MAAOO,EAAOC,cAAe7J,UAAW4J,EAAOG,sBAErE,IAAK,cAED,OAAO,2BAAI3F,GAAX,IAAiBiF,MAAOO,EAAOP,MAAOG,cAAeI,EAAO3J,IAAKwJ,cAAeG,EAAO1J,IAAKoJ,gBAAiBM,EAAON,kBAExH,IAAK,yBACD,OAAO,2BAAIlF,GAAX,IAAkBnC,iBAAkB2H,EAAOpH,OAC/C,IAAK,oBACD,OAAO,2BAAI4B,GAAX,IAAkBmF,UAAWK,EAAOL,YAExC,QACI,OAAOlI,KAOb2I,GAAa,SAAChI,GAAD,MAA2B,CAACnE,KAAM,YAAamE,UAC5DiI,GAAiB,SAACb,GAAD,MAAkC,CAACvL,KAAM,iBAAkBuL,WAC5Ec,GAAa,SAACL,EAAqCP,EAAyBxJ,EAAcC,GAA7E,MACd,CAAClC,KAAK,YAAagM,gBAAeP,kBAAiBxJ,OAAMC,cASjDwC,GAAwB,SAACC,GAAD,MAAoB,CAAC3E,KAAM,yBAA0B2E,SAI7E2H,GAAa,kBAAiB,SAAClG,GACxCA,EAASgG,GAAe,YACxBpK,IAAwB4E,MAAK,SAAC/E,GAE1B,IAAM4J,EAAiB5J,EAAKA,KAAK0K,oBAC3BP,EAAgBnK,EAAKA,KAAK2K,UAC1BvK,EAAOJ,EAAKA,KAAKI,KACjBC,EAAYL,EAAKA,KAAKK,UAC5BkE,EAASiG,GAAWL,EAAeP,EAAiBxJ,EAAMC,IAC1DkE,EAASgG,GAAe,YAGvBrF,OAAM,SAAA0F,GACCA,EAAI5F,SACJT,EAAS+F,GAAWM,EAAI5F,SAAShF,KAAKsC,QAEtCiC,EAAS+F,GAAW,eAExB/F,EAASgG,GAAe,cAIvBM,GAAU,SAACzK,EAAcC,EAAkBC,EAAkBC,EAAYC,EAAYwJ,GAA3E,OACP,SAACzF,GACbpE,EAAsBC,EAAMC,EAAWC,EAAWC,EAAMC,GAAKuE,MAAK,SAAC+F,GAC/D,IAAMlB,EAAiBkB,EAAM9K,KAAK0K,oBAE5BP,EADQW,EAAM9K,KAAK2K,UACGI,QAAO,SAACC,GAChC,OAA8D,IAAvDA,EAAKlK,KAAKmK,cAAczC,QAAQwB,MAI3CzF,EAASA,EAASiG,GAAWL,EAAeP,EAAiBxJ,EAAMC,UCjHpE,SAAS6K,GAAT,GAAiE,IAAnCC,EAAkC,EAAlCA,QAC3BC,EAAkB3G,aAAiC,SAAAC,GAAK,OAAEA,EAAMoG,MAAMzK,aACtEsJ,EAAQlF,aAAkC,SAACC,GAAD,OAASA,EAAMoG,MAAMlB,mBAC/DtJ,EAAYmE,aAAkC,SAAAC,GAAK,OAAIA,EAAMoG,MAAMxK,aACnEC,EAAMkE,aAAkC,SAAAC,GAAK,OAAIA,EAAMoG,MAAMhB,iBAC7DtJ,EAAMiE,aAAkC,SAAAC,GAAK,OAAIA,EAAMoG,MAAMf,iBAC7DC,EAAmBvF,aAAkC,SAAAC,GAAK,OAAIA,EAAMoG,MAAMd,oBAC1EzF,EAAWC,cACXpE,EAAOqE,aAAkC,SAAAC,GAAK,OAAEA,EAAMoG,MAAM1K,QARC,EAUzCkH,mBAAS8D,GAVgC,oBAU5DhH,EAV4D,KAUrDiH,EAVqD,KAa7DhL,EAAYiL,KAAKC,KAAK5B,EAAMvF,GAkBlC,OACI,sBAAKV,MAba,CAClB8H,QAAQ,OACRC,eAAe,aACfC,OAAQ,QAUR,UACI,wBAAQtN,SAThB,SAAsBS,GAClBsG,QAAQC,IAAIvG,EAAEC,cAAcsF,OAC5BiH,EAASM,OAAO9M,EAAEC,cAAcsF,QAEhCG,EAASsG,GAAQzK,EAAMuL,OAAO9M,EAAEC,cAAcsF,OAAO9D,EAAWC,EAAKC,EAAKwJ,KAKtC5F,MAAOA,EAAvC,SACK+G,EAAQS,KAAI,SAACC,EAAQC,GACnB,OAAO,wBAAoB1H,MAAOyH,EAA3B,SAAoCA,GAAvBC,QAG3B,8BACA,cAAC,KAAD,CACIzL,UAAWA,EACX0L,qBAAsB,EACtBC,mBAAoB,EACpBC,eAAgBtN,KAAEuN,QAClBC,mBAAoBxN,KAAEyN,WACtB1G,gBAAiB/G,KAAEgH,OACnB0G,aA/BZ,SAAoBxN,GAChB0F,EAASsG,GAAQhM,EAAEyN,SAAS,EAAGlI,EAAO9D,EAAWC,EAAKC,EAAIwJ,YCvB3D,SAASuC,GAAT,GAAuC,EAAbzB,MAAc,IACrCvG,EAAWC,cACXnE,EAAYoE,aAAsB,SAAAC,GAAK,OAAIA,EAAMoG,MAAMzK,aACvDD,EAAOqE,aAAsB,SAAAC,GAAK,OAAIA,EAAMoG,MAAM1K,QAClDE,EAAYmE,aAAsB,SAAAC,GAAK,OAAIA,EAAMoG,MAAMxK,aACvDC,EAAMkE,aAAsB,SAAAC,GAAK,OAAIA,EAAMoG,MAAMhB,iBACjDtJ,EAAMiE,aAAsB,SAAAC,GAAK,OAAIA,EAAMoG,MAAMf,iBA8BvD,IA0BIyC,EAlDH,SAAkBC,EAAaC,GAC5B,IAAIC,EACJ,OAAO,WAAW,IAAD,mBACbxH,QAAQC,IAAI,GAEZ,IAAMwH,EAAS,WAAOH,EAAGI,MAAM,EAAKC,IACpCC,aAAaJ,GACbA,EAAU1H,WAAW2H,EAAQF,IA2CXM,EA1BN,SAACnO,GAcjB0F,EFyEqB,SAAC1F,EAAOuB,EAAaC,EAAkBC,EAAkBC,EAAYC,GAArE,OACZ,SAAC+D,GACdA,EAASgG,GAAe,YACxBpK,EAAsBC,EAAMC,EAAWC,EAAWC,EAAKC,GAAKuE,MAAK,SAAC/E,GAE9D,IAAM2J,EAAQ3J,EAAKA,KAAK2K,UAClBvK,EAAOJ,EAAKA,KAAKI,KACjBC,EAAYL,EAAKA,KAAKK,UACtB2J,EAAmBnL,EAAE0H,OAAOnC,MAAM6G,cAAcgC,OAChD9C,EAAgBR,EAAMoB,QAAO,SAACC,GAChC,OAAiF,IAA1EA,EAAKlK,KAAKmK,cAAczC,QAAQ3J,EAAE0H,OAAOnC,MAAM6G,cAAcgC,WAIxE1I,EA7DgB,SAAC4F,EAAqC/J,EAAcC,EAAmB2J,GAAvE,MACnB,CAAC7L,KAAM,iBAAkBgM,gBAAe/J,OAAMC,YAAW2J,oBA4D7CkD,CAAgB/C,EAAe/J,EAAMC,EAAW2J,QEvFhDmD,CAActO,EAAGuB,EAAMC,EAAWC,EAAWC,EAAKC,MAYf,KAEhD,OACI,8BAEI,uBAAOrC,KAAK,OAAOmH,YAAY,SAASlH,SAAUoO,MCtEvD,SAASY,KACZ,IAAM7I,EAAWC,cACXnE,EAAYoE,aAAqB,SAAAC,GAAK,OAAEA,EAAMoG,MAAMzK,aACpDD,EAAOqE,aAAsB,SAAAC,GAAK,OAAIA,EAAMoG,MAAM1K,QAClDG,EAAMkE,aAAsB,SAAAC,GAAK,OAAIA,EAAMoG,MAAMhB,iBACjDtJ,EAAMiE,aAAsB,SAAAC,GAAK,OAAIA,EAAMoG,MAAMf,iBACjDzJ,EAAYmE,aAAsB,SAAAC,GAAK,OAAIA,EAAMoG,MAAMxK,aACvD0J,EAAmBvF,aAAsB,SAAAC,GAAK,OAAIA,EAAMoG,MAAMd,oBAQpE,IAAMqD,EAAe,CACjBhK,MAAM,OACNwC,gBAAgB,QAEdyH,EAAe,CACjBjK,MAAM,OACNwC,gBAAgB,SAGpB,OACI,gCACI,8BACA,wBAAQnC,MAAsB,aAAdpD,EAA2B+M,EAAcC,EAAc9J,QAnB/E,WACIe,EHwIJ,SAACnE,EAAaC,EAAkB+J,EAA0B7J,EAAYC,EAAYwJ,GAAlF,OACiB,SAACzF,GAClBA,EAASgG,GAAe,YACxBpK,EAAsBC,EAAMC,EAAW+J,EAAmB7J,EAAKC,GAAKuE,MAAK,SAAC/E,GACtE,IACMmK,EADQnK,EAAKA,KAAK2K,UACII,QAAO,SAACC,GAChC,OAA8D,IAAvDA,EAAKlK,KAAKmK,cAAczC,QAAQwB,MAG3CzF,EAzEc,SAAC4F,EAAqCC,GAAtC,MACjB,CAACjM,KAAM,gBAAiBgM,gBAAeC,qBAwE3BmD,CAAcpD,EAAeC,QGjJ7BoD,CAAepN,EAAMC,EAAW,WAAYE,EAAKC,EAAKwJ,KAkB3D,iBAEA,8BACA,wBAAQtG,MAAsB,aAAdpD,EAA2B+M,EAAcC,EAAc9J,QAnB/E,WACIe,EHkJsB,SAACnE,EAAaC,EAAkBgK,EAA4B9J,EAAYC,EAAYwJ,GAApF,OAAwH,SAACzF,GACnJA,EAASgG,GAAe,YACxBpK,EAAsBC,EAAMC,EAAWgK,EAAqB9J,EAAKC,GAAKuE,MAAK,SAAC/E,GACxE,IACMmK,EADQnK,EAAKA,KAAK2K,UACII,QAAO,SAACC,GAChC,OAA8D,IAAvDA,EAAKlK,KAAKmK,cAAczC,QAAQwB,MAG3CzF,EAnFgB,SAAC4F,EAAqCE,GAAtC,MACnB,CAAClM,KAAM,kBAAmBgM,gBAAeE,uBAkF7BoD,CAAgBtD,EAAeE,QG1J/BqD,CAAetN,EAAMC,EAAW,WAAYE,EAAKC,EAAKwJ,KAkB3D,oB,qBCvBL,SAAS2D,KACZ,IAAMC,EAAMC,iBAAO,MADK,EAEEvG,mBAAS,CAAC,EAAE,KAFd,oBAEjBwG,EAFiB,KAEVC,EAFU,KAIlBzN,EAAYmE,aAAsB,SAAAC,GAAK,OAAIA,EAAMoG,MAAMxK,aACvDF,EAAOqE,aAAsB,SAAAC,GAAK,OAAEA,EAAMoG,MAAM1K,QAChDC,EAAYoE,aAAqB,SAAAC,GAAK,OAAEA,EAAMoG,MAAMzK,aACpDkE,EAAWC,cAcjB,OACI,sBAAKd,MAAO,CAAC8H,QAAQ,QAArB,UACI,+BAAO,IACP,qBAAK9H,MAAO,CAACL,MAAM,SAAnB,SACI,cAAC,KAAD,CACIyK,OAAK,EACLE,KAAM,EACN5J,MAAO,CAAC0J,EAAM,GAAIA,EAAM,IACxB1P,SAlBhB,SAAkBS,GACdkP,EAASlP,IAkBG0B,IAAK,EACLC,IAAK,GACLoN,IAAKA,MAGb,+BAAO,KACP,wBAAQpK,QAtBhB,WAEI,IAAMY,EAAQwJ,EAAIK,QAAQjL,MAAMoB,MAChCG,EJkJsB,SAACnE,EAAaC,EAAkBC,EAAkBC,EAAWC,GAA7D,OAAuF,SAAC+D,GAClHA,EAASgG,GAAe,YACxBpK,EAAsBC,EAAMC,EAAWC,EAAWC,EAAIC,GAAMuE,MAAK,SAAA/E,GAC7D,IAAM2J,EAAQ3J,EAAKA,KAAK2K,UAClBf,EAAiB5J,EAAKA,KAAK0K,oBACjCnG,EA1Fa,SAACoF,EAA6BpJ,EAAYC,EAAYoJ,GAAtD,MAChB,CAACzL,KAAK,cAAcwL,QAAQpJ,MAAKC,MAAKoJ,mBAyF1BsE,CAAavE,EAAQpJ,EAAKC,EAAKoJ,QIvJ/BuE,CAAe/N,EAAMC,EAAUC,EAAW8D,EAAM,GAAGA,EAAM,MAmB9D,sB,wBCrCCgK,GAAiC,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,UAEnDvN,EAAMkI,cAANlI,GAEDwN,EAAUC,cAOVC,EAAa,WACfF,EAAQG,UAEZ,OAAO,cAAC,EAAD,CAAOjL,UAAWgL,EACX7N,MAAO,gBAAiByC,MAAO,IAAKF,OAAQ,IAC5CI,eAAe,EAFtB,SAGH,sBAAKG,MAAO,CAAC8H,QAAS,OAAQC,eAAgB,gBAA9C,UACK6C,EACD,cAAC,EAAD,CAAa9K,QAbM,WACvB6K,EAAatN,GACb0N,KAWI,iBACA,cAAC,EAAD,CAAajL,QAASiL,EAAtB,sBCvBCE,GAA0B,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,WAA0B,EAE1BtH,oBAAS,GAFiB,oBAE3DuH,EAF2D,KAE7CC,EAF6C,OAGxCxH,mBAAS,IAH+B,oBAG3DlD,EAH2D,KAGpDiH,EAHoD,KAUhE,OACI,mCAEKwD,GAAgB,eAAC,EAAD,CAAOpL,UAAW,kBAAMqL,GAAgB,IAAOlO,MAAO,qBAC/CyC,MAAO,IAAKF,OAAQ,IAAKI,eAAe,EAD/C,UAEb,uBACIpF,KAAK,OACLiG,MAAOA,EACPhG,SAAU,SAACS,GAAD,OAAOwM,EAASxM,EAAEC,cAAcsF,UAG9C,qBAAKV,MAAO,CAAC8H,QAAS,OAAQC,eAAgB,eAAgBnD,UAAW,QAAzE,SACI,cAAC,EAAD,CAAa9E,QAjBP,WAClBoL,GAAcA,EAAWxK,GACzB0K,GAAgB,GAChBzD,EAAS,KAcG,4BCrBP0D,GAAiC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YACtCjO,EAAMkI,cAANlI,GADiE,EAEhDuG,mBAAS,IAFuC,oBAEnElD,EAFmE,KAE5DiH,EAF4D,KASlEkD,EAAUC,cAEVC,EAAa,WACfF,EAAQG,UAEZ,OACI,mCAEK,eAAC,EAAD,CAAOjL,UAAWgL,EAAY7N,MAAO,kBACdyC,MAAO,IAAKF,OAAQ,IAAKI,eAAe,EAD/D,UAEG,uBACIpF,KAAK,OACLiG,MAAOA,EACPhG,SAAU,SAACS,GAAD,OAAOwM,EAASxM,EAAEC,cAAcsF,UAG9C,sBAAKV,MAAO,CAAC8H,QAAS,OAAQC,eAAgB,eAAgBnD,UAAW,QAAzE,UACI,cAAC,EAAD,CAAa9E,QAtBP,WAClBwL,GAAeA,EAAYjO,EAAIqD,GAC/BiH,EAAS,IACToD,KAmBY,oBACA,cAAC,EAAD,CAAajL,QAASiL,EAAtB,6BCgILQ,OAxIf,WACqBhG,cAAViG,OAEQzK,aAAkC,SAAAC,GAAK,OAAIA,EAAMyK,IAAIC,SAAW1K,EAAMyK,IAAIC,SAASnO,IAAM,MACrFwD,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMxC,UAJ7D,IAKR0H,EAAYpF,aAAmC,SAAAC,GAAK,OAAIA,EAAMoG,MAAMjB,aACpEH,EAASjF,aAA+C,SAAAC,GAAK,OAAIA,EAAMoG,MAAMpB,UAC7EC,EAAQlF,aAAgD,SAACC,GAAD,OAAWA,EAAMoG,MAAMnB,SAC/E7G,EAAO2B,aAAmC,SAAAC,GAAK,OAAIA,EAAMoG,MAAMvI,oBARxD,EASuC+E,oBAAS,GAThD,oBASN+H,EATM,KAScC,EATd,OAUuChI,oBAAS,GAVhD,oBAUciI,GAVd,aAWuCjI,oBAAS,GAXhD,oBAWckI,GAXd,aAYiClI,oBAAkB,GAZnD,oBAaPnF,GAbO,UAaEsC,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMxC,WACjEoC,EAAWC,cAOjBiL,qBAAU,WAENlL,EAASkG,QAEV,IAEH,IAuBIvH,EAfEwM,EAAa,SAAC3O,GAChBwD,ERgJoB,SAACxD,GAAD,OAA2B,SAACwD,GACpDA,EAASgG,GAAe,YACxBpK,EAAoBY,GACfgE,MAAK,SAAA4K,GACFpL,EAASkG,MACTlG,EAASgG,GAAe,YAE3BrF,OAAM,SAAA0F,GACCA,EAAI5F,SACJT,EAAS+F,GAAWM,EAAI5F,SAAShF,KAAKsC,QAEtCiC,EAAS+F,GAAW,eAExB/F,EAASgG,GAAe,aQ7JnBqF,CAAa7O,IACtBwO,GAAsB,IAGpBM,EAAa,SAAC9O,EAAYH,GAC5B2D,ER4JoB,SAACxD,EAAYD,GAAb,OAAyC,SAACyD,GAClEA,EAASgG,GAAe,YACxBpK,EAAoBY,EAAID,GACnBiE,MAAK,SAAA4K,GACFpL,EAASkG,MACTlG,EAASgG,GAAe,YAE3BrF,OAAM,SAAA0F,GACCA,EAAI5F,SACJT,EAAS+F,GAAWM,EAAI5F,SAAShF,KAAKsC,QAEtCiC,EAAS+F,GAAW,eAExB/F,EAASgG,GAAe,aQzKnBuF,CAAa/O,EAAIH,IAC1B4O,GAAsB,IAe1B,OALItM,EADAJ,EACM,KAEC,IAIP,gCACI,8BACI,sBAAKxE,UAAWoF,KAAMqM,SAAtB,UACI,uBAAO5R,KAAK,WAAW4C,GAAG,UAAUhC,QAAS8K,EAAWzL,SAlC7C,WACvBmG,ERqCsB,SAACsF,GAAD,MAAyB,CAAC1L,KAAM,oBAAqB0L,aQrClEmG,EAAgBnG,OAkCb,uBAAOoG,QAAQ,UAAf,gCAGR,uCACA,cAACtC,GAAD,IACA,qBAAKrP,UAAWoF,KAAMwM,MAAtB,SACI,kCACI,qBAAK5R,UAAS,UAAKoF,KAAMyM,UAAX,YAAwBzM,KAAM0M,aAA5C,SACI,gCACA,+BACI,6BACI,sBAAK9R,UAAWoF,KAAM6H,KAAtB,kBAAiC,cAACgB,GAAD,SAErC,4CACA,6BACI,sBAAKjO,UAAWoF,KAAM6H,KAAtB,oBAAmC,cAAC6B,GAAD,SAEvC,6BAAI,+CAAiB,wBAAQ5J,QAAS,kBAAM8L,GAAsB,IACrC3G,SAAqB,YAAXe,IAA0BvH,EAD5C,iBAEhBkN,GAAsB,cAAC,GAAD,CAAUT,WAlD1C,SAAChO,GAChB2D,ER8HoB,SAAC3D,GAAD,OAA8B,SAAC2D,GACvDA,EAASgG,GAAe,YACxBpK,EAAoBS,GACfmE,MAAK,SAAA4K,GACFpL,EAASkG,MACTlG,EAASgG,GAAe,SACxBhG,EAAS1B,IAAsB,IAC/BoC,YAAW,WACPV,EAAS1B,IAAsB,MAChC,QAENqC,OAAM,SAAA0F,GACCA,EAAI5F,SACJT,EAAS+F,GAAWM,EAAI5F,SAAShF,KAAKsC,QAEtCiC,EAAS+F,GAAW,eAExB/F,EAASgG,GAAe,aQ/InB8F,CAAazP,IACtB0O,GAAsB,WAmDF,uCACA,8CAIR,qBAAKhR,UAAWoF,KAAMyM,UAAtB,SACI,gCACCxG,EAAMiC,KAAI,SAACZ,GAEJ,OAAO,+BACH,yCAAQA,EAAKlK,MAAb,OACA,uCAAQkK,EAAKsF,cACb,uCAAQtF,EAAKjJ,WACb,6BACI,sBAAKzD,UAAWoF,KAAMyM,UAAtB,UACI,cAAC,IAAD,CAASvL,GAAE,iBAAYoG,EAAK/J,IAAjB,WAAX,SACI,wBAAQH,KAAM,MAAO6H,SAAqB,YAAXe,IAAyBvH,EAChDqB,QAAS,kBAAM+L,GAAsB,IAD7C,sBAIJ,cAAC,IAAD,CAAS3K,GAAE,iBAAYoG,EAAK/J,IAAjB,WAAX,SACI,wBAAQH,KAAM,SAAU6H,SAAqB,YAAXe,IAAyBvH,EACnDqB,QAAS,kBAAMgM,GAAsB,IAD7C,2BAMZ,6BAAI,cAAC,IAAD,CAAS5K,GAAE,iBAAYoG,EAAK/J,KAA5B,qBACJ,6BAAI,cAAC,IAAD,CAAS2D,GAAE,iBAAYoG,EAAK/J,KAA5B,uBAnBQ+J,EAAK/J,iBA4BzC,cAACiK,GAAD,CAAqBC,QAvHb,CAAC,GAAI,GAAI,GAAI,GAAI,MAwHzB,cAAC,EAAD,CAAOvK,MAAO,UAAWyC,MAAO,IAAKF,OAAQ,GAAII,eAAe,EAAOE,UAAW,aAE3EH,UAAW,CACPJ,IAAKA,EAAM,KACX2C,gBAAiB,gBAI5B,cAAC,IAAD,CAAO0K,KAAM,oBAAqBC,OAAQ,kBAAM,cAAC,GAAD,CAAiBnC,aAAcqB,OAC/E,cAAC,IAAD,CAAOa,KAAM,oBAAqBC,OAAQ,kBAAM,cAAC,GAAD,CAAiBxB,YAAaa,W,oBCvJpF/J,GAAe,CACjB4D,OAAQ,OACRpH,MAAO,KACPwI,MAAO,GACPvI,kBAAkB,GA6BtB,IAAM+H,GAAa,SAAChI,GAAD,MAA2B,CAACnE,KAAM,YAAamE,UAE5DiI,GAAiB,SAACb,GAAD,MAAkC,CAACvL,KAAM,iBAAkBuL,WAI5E7G,GAAwB,SAACC,GAAD,MAC1B,CAAC3E,KAAM,yBAA0B2E,SAExB2N,GAAa,SAACtP,GAAD,OAAkC,SAACoD,GACzDA,EAASgG,GAAe,YACxBrJ,EAAkBC,GACb4D,MAAK,SAAA/E,GACN,IAAM8K,EAAQ9K,EAAKA,KAAK8K,MACxBvG,EAVW,SAACuG,GAAD,MAA6B,CAAC3M,KAAM,YAAa2M,SAUnD4F,CAAW5F,IACpBvG,EAASgG,GAAe,YAEvBrF,OAAM,SAAA0F,GACHA,EAAI5F,SACJT,EAAS+F,GAAWM,EAAI5F,SAAShF,KAAKsC,QAEtCiC,EAAS+F,GAAW,eAExB/F,EAASgG,GAAe,cCpDnBoG,GAAY,WAAO,IACrBzB,EAAUjG,cAAViG,OACDpE,EAAQrG,aAA2C,SAAAC,GAAK,OAAIA,EAAMkM,UAAU9F,SAFvD,EAGOxD,oBAAS,GAHhB,oBAGpBuJ,EAHoB,KAGTC,EAHS,OAIuBxJ,mBAAS,GAJhC,oBAIpByJ,EAJoB,KAIDC,EAJC,KAKrBzM,EAAWC,cAEjBiL,qBAAU,WACNlL,EAASkM,GAAWvB,MAEtB,IACF,IA8BIhM,EAnBE+N,EAAW,SAACxP,GACd8C,EDyFe,SAACxD,EAAYU,GAAb,OAA+B,SAAC8C,GAEnD/C,EAAuBT,EAAIU,GAEtBsD,MAAK,SAAA4K,GAEFpL,EAASgG,GAAe,SACxBhG,EAAS1B,IAAsB,IAC/BoC,YAAW,WACPV,EAAS1B,IAAsB,MAChC,QAENqC,OAAM,SAAA0F,GACCA,EAAI5F,SACJT,EAAS+F,GAAWM,EAAI5F,SAAShF,KAAKsC,QAEtCiC,EAAS+F,GAAW,eAExB/F,EAASgG,GAAe,aC3GnB2G,CAAQpG,EAAMiG,GAAmB9P,IAAKQ,KAE7C0P,EAAY,SAACtQ,GACf,IAAIuQ,EAAWvQ,EAAU+K,KAAI,SAACvK,EAAMyK,GAChC,MAAO,CAACA,QAAOrK,MAAOJ,EAAKI,MAAO4P,OAAsB,IAAdhQ,EAAKI,MAAc,EAAIJ,EAAKI,MAAQ6J,KAAKgG,SAAW,MAE9FC,EAAa,EACbC,EAAS,EAOb,OANAJ,EAASK,SAAQ,SAACC,EAAI5F,GACd0F,EAASE,EAAGL,SACZE,EAAaG,EAAG5F,MAChB0F,EAASE,EAAGL,WAGbE,GAUX,OAJIrO,EAJSuB,aAAmC,SAAAC,GAAK,OAAIA,EAAMkM,UAAUrO,oBAI/D,KAEC,IAGP,sBAAKjE,UAAWoF,KAAMiD,UAAtB,UACI,gCACI,8BACI,mBAAGrI,UAAWoF,KAAMkD,KAApB,SAA2BkE,EAAMiG,GAAqBjG,EAAMiG,GAAmBzP,SAAU,oBAE7F,8BACI,cAAC,EAAD,CAAakC,QA3CT,WAChBsN,GAAa,IA0CD,+BAGPD,GACD,gCACI,mBAAGvS,UAAWoF,KAAMkD,KAApB,SAA2BkE,EAAMiG,GAAqBjG,EAAMiG,GAAmBxP,OAAQ,kBACvF,gCACI,cAAC,EAAD,CAAaiC,QAAS,WAAOyN,EAAS,IAAK3S,UAAWoF,KAAMiO,OAA5D,mDACA,cAAC,EAAD,CAAanO,QAAS,WAAOyN,EAAS,IAAK3S,UAAWoF,KAAMiO,OAA5D,4CACA,cAAC,EAAD,CAAanO,QAAS,WAAOyN,EAAS,IAAK3S,UAAWoF,KAAMiO,OAA5D,oEACA,cAAC,EAAD,CAAanO,QAAS,WAAOyN,EAAS,IAAK3S,UAAWoF,KAAMiO,OAA5D,2EACA,cAAC,EAAD,CAAanO,QAAS,WAAOyN,EAAS,IAAK3S,UAAWoF,KAAMiO,OAA5D,yCAEJ,8BACI,cAAC,EAAD,CAAarT,UAAWoF,KAAMiO,OAAQnO,QAnDhC,WAClBwN,EAAqBG,EAAUrG,IAE/BgG,GAAa,IAgDD,4FAGR,cAAC,EAAD,CAAOlQ,MAAO,UAAWyC,MAAO,IAAKF,OAAQ,GAAII,eAAe,EAAOE,UAAW,aAC3EH,UAAW,CACPJ,IAAKA,EAAI,KACT2C,gBAAiB,oBC7E3B+L,GAA8B,SAAC,GAA6B,IAA3BhD,EAA0B,EAA1BA,WAA0B,EAE9BtH,oBAAS,GAFqB,oBAE/DuH,EAF+D,KAEjDC,EAFiD,OAG5CxH,mBAAS,IAHmC,oBAG/DlD,EAH+D,KAGxDiH,EAHwD,OAI1C/D,mBAAS,IAJiC,oBAI/DuK,EAJ+D,KAIvDC,EAJuD,KAapE,OACI,mCAEKjD,GAAgB,eAAC,EAAD,CAAOpL,UAAW,kBAAMqL,GAAgB,IACjClO,MAAO,qCACPyC,MAAO,IAAKF,OAAQ,IAAKI,eAAe,EAF/C,UAGb,uBACI+B,YAAY,WACZnH,KAAK,OACLiG,MAAOA,EACPhG,SAAU,SAACS,GAAD,OAAOwM,EAASxM,EAAEC,cAAcsF,UAE9C,uBACIkB,YAAY,SACZnH,KAAK,OACLiG,MAAOyN,EACPzT,SAAU,SAACS,GAAD,OAAOiT,EAAUjT,EAAEC,cAAcsF,UAG/C,qBAAKV,MAAO,CAAC8H,QAAS,OAAQC,eAAgB,eAAgBnD,UAAW,QAAzE,SACI,cAAC,EAAD,CAAa9E,QA3BP,WAClBoL,GAAcA,EAAWxK,EAAOyN,GAChC/C,GAAgB,GAChBzD,EAAS,IACM,KAAXwG,GAAeC,EAAU,KAuBjB,4BChCPC,GAAiC,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,aAAcjR,EAAQ,EAARA,GAAQ,EACxCuG,oBAAkB,GADsB,oBACpD2K,GADoD,WAGlE,OAAO,cAAC,EAAD,CAAOxO,UAAW,kBAAMwO,GAAS,IAC1BrR,MAAO,gBAAiByC,MAAO,IAAKF,OAAQ,IAC5CI,eAAe,EAFtB,SAGH,sBAAKG,MAAO,CAAC8H,QAAS,OAAQC,eAAgB,gBAA9C,UAEI,cAAC,EAAD,CAAajI,QAAS,kBAAMwO,EAAajR,IAAzC,iBACA,cAAC,EAAD,CAAayC,QAAS,kBAAMyO,GAAS,IAArC,sBCRCC,GAAiC,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,WAAYpR,EAAmB,EAAnBA,GAAmB,EAEjDuG,mBAAS,IAFwC,oBAEpElD,EAFoE,KAE7DiH,EAF6D,OAG/C/D,mBAAS,IAHsC,oBAGpEuK,EAHoE,KAG5DC,EAH4D,KAU3E,OAAO,cAAC,EAAD,CAAOrO,UAAW,aACX7C,MAAO,yCACPyC,MAAO,IAAKF,OAAQ,IAAKI,eAAe,EAF/C,SAGH,sBAAKG,MAAO,CACR8H,QAAS,OAAQ4G,cAAe,SAChCC,WAAY,SAAU/J,UAAW,QAFrC,UAII,cAACjD,EAAD,CACIC,YAAY,WACZnH,KAAK,OACLiG,MAAOA,EACPhG,SAAU,SAACS,GAAD,OAAOwM,EAASxM,EAAEC,cAAcsF,UAE9C,cAACiB,EAAD,CACIC,YAAY,SACZnH,KAAK,OACLiG,MAAOyN,EACPzT,SAAU,SAACS,GAAD,OAAOiT,EAAUjT,EAAEC,cAAcsF,UAE/C,qBAAKV,MAAO,CAAC8H,QAAS,QAAtB,SACI,cAAC,EAAD,CAAahI,QAzBH,WAClB2O,GAAcA,EAAWpR,EAAIqD,EAAOyN,GACpCxG,EAAS,IACM,KAAXwG,GAAeC,EAAU,KAsBrB,4B,oBC1BT,SAASQ,KAAS,IACdpD,EAAUjG,cAAViG,OACD3K,EAAWC,cACXsG,EAAQrG,aAA2C,SAAAC,GAAK,OAAIA,EAAMkM,UAAU9F,SAC5EpB,EAASjF,aAA+C,SAAAC,GAAK,OAAIA,EAAMoG,MAAMpB,UAC7E5G,EAAO2B,aAAmC,SAAAC,GAAK,OAAIA,EAAMkM,UAAUrO,oBALrD,EAMgC+E,oBAAS,GANzC,oBAMb+H,EANa,KAMOC,EANP,OAOgChI,oBAAS,GAPzC,oBAObiL,EAPa,KAOOhD,EAPP,OAQgCjI,oBAAS,GARzC,oBAQbkL,EARa,KAQOhD,EARP,KAUpBC,qBAAU,WACNlL,EAASkM,GAAWvB,MACrB,CAAC3K,IAEJ,IAiBIrB,EAREuP,EAAa,SAAC/Q,GAChB6C,ELmDoB,SAACxD,EAAYmO,GAAb,OAA2C,SAAC3K,GACpEA,EAASgG,GAAe,YACxBrJ,EAAoBH,GACfgE,MAAK,SAAA4K,GACFpL,EAASkM,GAAWvB,IACpB3K,EAASgG,GAAe,YAE3BrF,OAAM,SAAA0F,GACCA,EAAI5F,SACJT,EAAS+F,GAAWM,EAAI5F,SAAShF,KAAKsC,QAEtCiC,EAAS+F,GAAW,eAExB/F,EAASgG,GAAe,aKhEnBmI,CAAahR,EAASwN,IAC/BK,GAAsB,IAEpB4C,EAAa,SAACzQ,EAAiBJ,EAAkBC,GACnDgD,ELgEoB,SAACxD,EAAaO,EAAkBC,EAAgB2N,GAAhD,OAA8E,SAAC3K,GACvGA,EAASgG,GAAe,YACxBrJ,EAAoBH,EAAIO,EAAUC,GAC7BwD,MAAK,SAAA4K,GACFpL,EAASkM,GAAWvB,IACpB3K,EAASgG,GAAe,YAE3BrF,OAAM,SAAA0F,GACCA,EAAI5F,SACJT,EAAS+F,GAAWM,EAAI5F,SAAShF,KAAKsC,QAEtCiC,EAAS+F,GAAW,eAExB/F,EAASgG,GAAe,aK7EnBoI,CAAajR,EAASJ,EAAUC,EAAQ2N,IACjDM,GAAsB,IAQ1B,OAJItM,EADAJ,EACM,KAEC,IAGP,sBAAKxE,UAAWK,KAAEyB,KAAlB,UAEI,uCAEA,sBAAK9B,UAAWoF,KAAMwM,MAAtB,UACI,kCACI,qBAAK5R,UAAS,UAAKoF,KAAMyM,UAAX,YAAwBzM,KAAM0M,aAA5C,SACI,gCACA,+BACI,0CACA,wCACA,uCACA,yCACA,6BAAI,8CACA,wBAAQ5M,QAAS,kBAAM8L,GAAsB,IACrC3G,SAAqB,YAAXe,EADlB,iBAEC2F,GAAsB,cAAC,GAAD,CAAcT,WAxC9C,SAACtN,EAAmBC,GLuCf,IAACqR,EKtCrBrO,GLsCqBqO,EKtCC,CAClBC,aAAc3D,EACd5N,SAAUA,EACVC,OAAQA,GAAkB,ILmCkC,SAACgD,GACrEA,EAASgG,GAAe,YACxBrJ,EAAoB0R,GACf7N,MAAK,SAAA/E,GACFuE,EAASkM,GAAWmC,EAAMC,eAC1BtO,EAASgG,GAAe,SACxBhG,EAAS1B,IAAsB,IAC/BoC,YAAW,WACPV,EAAS1B,IAAsB,MAChC,QAENqC,OAAM,SAAA0F,GACCA,EAAI5F,SACJT,EAAS+F,GAAWM,EAAI5F,SAAShF,KAAKsC,QAEtCiC,EAAS+F,GAAW,eAExB/F,EAASgG,GAAe,eKlD5B+E,GAAsB,kBAuCV,qBAAKhR,UAAWoF,KAAMyM,UAAtB,SACI,gCACCrF,EAAMc,KAAI,SAACvK,GACR,OAAO,+BACH,yCAAQA,EAAKC,UAAb,OACA,uCAAQD,EAAKE,UACb,uCAAQF,EAAKI,SACb,uCAAQJ,EAAKU,WACb,6BACI,sBAAKzD,UAAWoF,KAAMyM,UAAtB,UAEI,wBAAQrP,KAAM,MAAO6H,SAAqB,YAAXe,EACvBlG,QAAS,kBAAM+L,GAAsB,IAD7C,oBAICgD,GAAsB,cAAC,GAAD,CAAiBxR,GAAIM,EAAKJ,IACT+Q,aAAcS,EACd9J,SAAqB,YAAXe,IAElD,wBAAQ5I,KAAM,SAAU6H,SAAqB,YAAXe,EAC1BlG,QAAS,kBAAMgM,GAAsB,IAD7C,oBAICgD,GAAsB,cAAC,GAAD,CAAiBzR,GAAIM,EAAKJ,IACTkR,WAAYA,EACZxJ,SAAqB,YAAXe,WAtB9CrI,EAAKJ,eA+BjC,cAAC,EAAD,CAAOL,MAAO,UAAWyC,MAAO,IAAKF,OAAQ,GAAII,eAAe,EAAOE,UAAW,aAE3EH,UAAW,CACPJ,IAAKA,EAAM,KACX2C,gBAAiB,sBC/FrC,IAAMN,GAAO,CAChBZ,MAAO,SACPa,iBAAkB,oBAClBuB,QAAQ,WACRnB,aAAa,gBACboD,YAAY,eACZ8B,MAAO,SACPnB,MAAO,UA6BImJ,OAzBf,WAEI,OACI,8BACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOvC,KAAM,IAAKwC,OAAK,EAACvC,OAAQ,kBAAM,cAAC,IAAD,CAAU5L,GAAI,cACpD,cAAC,IAAD,CAAO2L,KAAM,SAAUC,OAAQ,kBAAM,cAAC,EAAD,OACrC,cAAC,IAAD,CAAOD,KAAM,oBAAqBwC,OAAK,EAACvC,OAAQ,kBAAM,cAAC,GAAD,OACtD,cAAC,IAAD,CAAOD,KAAM,WAAYwC,OAAK,EAACvC,OAAQ,kBAAM,cAAC,GAAD,OAC7C,cAAC,IAAD,CAAOD,KAAM,gBAAiBwC,OAAK,EAACvC,OAAQ,kBAAM,cAAC,GAAD,OAClD,cAAC,IAAD,CAAOD,KAAM,mCAAqCC,OAAQ,kBAAM,cAAC,GAAD,OAChE,cAAC,IAAD,CAAOD,KAAM,gBAAiBwC,OAAK,EAACvC,OAAS,kBAAM,cAAC,GAAD,OACnD,cAAC,IAAD,CAAOD,KAAM,SAAUC,OAAQ,kBAAM,cAAC,GAAD,OAErC,cAAC,IAAD,CAAOD,KAAM,iBAAmBC,OAAQ,kBAAM,cAAC8B,GAAD,OAC9C,cAAC,IAAD,CAAO/B,KAAM,iBAAmBC,OAAQ,kBAAM,cAAC,GAAD,OAC9C,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,EAAD,aCDtBwC,OAlCf,WAAmB,IAAD,EACsB1L,oBAAkB,GADxC,oBACP2L,EADO,KACKC,EADL,KAER/Q,EAASsC,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMxC,UACjEoC,EAAWC,cAUjB,OACI,sBAAKlG,UAAWK,IAAEwU,QAAlB,UACI,qBAAK7U,UAAWK,IAAEyU,KAAM5P,QAVjB,WACX0P,GAAeD,IASX,oBACA,qBAAK3U,UAAS,UAAKK,IAAE0U,mBAAP,YAA6BJ,GAActU,IAAEsU,YAA3D,SACI,sBAAK3U,UAAaK,IAAE2U,MAApB,UAGA,cAAC,IAAD,CAAS1O,GAAIW,GAAKwB,QAASzI,UAAWK,IAAE8G,SAAUC,gBAAiB/G,IAAEgH,OAArE,yBACA,cAAC,IAAD,CAASf,GAAIW,GAAKK,aAActH,UAAWK,IAAE8G,SACpCC,gBAAiB/G,IAAEgH,OAD5B,8BAICxD,EAAS,wBAAQqB,QAAS,kBAAMe,G9BgItC,SAACA,GACJtE,IACK8E,MAAK,kBAAMR,EAAS/B,EAAkBb,EAAU3B,MAAM,OACtDkF,OAAM,SAACrG,GACJ,IAAMyD,EAAQzD,EAAEmG,SACVnG,EAAEmG,SAAShF,KAAKsC,MACfzD,EAAEgB,QAAU,gCACnBsF,QAAQC,IAAI,UAAZ,eAA2BvG,IAC3BsG,QAAQC,IAAI9C,GACZiC,EAAS7B,EAAQJ,OAEzBiC,EAAS3B,GAAiB,Q8B3IR,qBACN,cAAC,IAAD,CAASgC,GAAI,SAAb,mBACJ,cAAC,IAAD,CAASA,GAAIW,GAAKoE,MAAOrL,UAAWK,IAAE8G,SAAUC,gBAAiB/G,IAAEgH,OAAnE,gCCPD4N,I,OAjBH,WAMR,OACI,qBAAKjV,UAAU,MAAf,SACI,eAAC,IAAD,WACQ,cAAC,GAAD,IACA,cAAC,GAAD,WCRLkV,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB3O,MAAK,YAAkD,IAA/C4O,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCRR9R,GAAY,GCCZmE,GAAe,CACjBkO,OAAQ,KACRC,SAAU,KACVrS,OAAQ,GACRC,qBAAsB,M,SCJpBiE,GAAoC,CACtC4D,OAAQ,YACRpH,MAAO,KACP8M,SAAU,CACNnO,IAAK,GACLvB,MAAO,KACPoB,KAAM,KACNc,OAAQ,KACRC,qBAAsB,KACtBC,QAAS,KACTC,QAAS,KACTC,SAAS,EACTC,UAAU,EACVC,YAAY,ICHdgS,GAAWC,aAAgB,CAC7BhF,IDMsB,WAA0F,IAAzFzK,EAAwF,uDAA3DoB,GAAcoE,EAA6C,uCAC/G,OAAQA,EAAO/L,MACX,IAAK,iBACD,OAAO,2BAAIuG,GAAX,IAAkBgF,OAAQQ,EAAOR,SACrC,IAAK,gBACD,OAAO,2BAAIhF,GAAX,IAAkBpC,MAAO4H,EAAO5H,QACpC,IAAK,gBACD,OAAO,2BAAIoC,GAAX,IAAkB0K,SAAUlF,EAAOpD,WACvC,IAAK,6BACD,OAAIpC,EAAM0K,SACC,2BACA1K,GADP,IACc0K,SAAS,2BACZ1K,EAAM0K,UADK,IACKvN,qBAAsBqI,EAAOrI,yBAG9C6C,EAGlB,QACI,OAAOA,ICxBfC,MpC4CwB,WAA2D,IAA1DD,EAAyD,uDAAjD/C,EAAWuI,EAAsC,uCAClF,OAAQA,EAAO/L,MACX,IAAK,gBACD,OAAO,2BAAIuG,GAAUwF,EAAOzH,SAEhC,IAAK,QAED,OAAO,2BAAIiC,GAAX,IAAkBpC,MAAO4H,EAAOvH,aAEpC,IAAK,qBACD,OAAO,2BAAI+B,GAAX,IAAkBtC,WAAY8H,EAAO9H,aAEzC,IAAK,yBACD,OAAO,2BAAIsC,GAAX,IAAkBnC,iBAAkB2H,EAAOpH,OAC/C,IAAK,qBACD,OAAO,2BAAI4B,GAAX,IAAkBrC,cAAe6H,EAAO7H,gBAC5C,QACI,OAAOqC,IoC5DfpC,MHVwB,WAA0C,IAAzCoC,EAAwC,uDAAhC/C,GAAWuI,EAAqB,uCACjE,OAAQA,EAAO/L,MACX,IAAK,GAGL,QAAS,OAAOuG,IGMpBc,iBhCGmC,WAAkE,IAAjEd,EAAgE,uDAAxDoB,GAAcoE,EAA0C,uCACpG,OAAQA,EAAO/L,MACX,IAAK,oBACD,OAAO,2BAAIuG,GAAX,IAAkBqB,eAAe,IAErC,IAAK,QACD,OAAO,2BAAIrB,GAAX,IAAkBsB,SAAS,EAAMrD,WAAYuH,EAAOvH,aAExD,IAAK,UACD,OAAO,2BAAI+B,GAAX,IAAkBuB,UAAWiE,EAAOjE,YAExC,QACI,OAAOvB,IgCdfqC,QFR0B,WAAiE,IAAhErC,EAA+D,uDAAvDoB,GAAcoE,EAAyC,uCAC1F,OAAQA,EAAO/L,MACX,IAAK,gBACD,OAAO,2BACAuG,GADP,IAEIuP,SAAU/J,EAAO+J,SACjBpS,qBAAsBqI,EAAOrI,qBAC7BmS,OAAQ9J,EAAO8J,SAEvB,QACI,OAAOtP,IEDfkB,a3BI+B,WAA2D,IAA1DlB,EAAyD,uDAAjD/C,GAAWuI,EAAsC,uCACzF,OAAQA,EAAO/L,MACX,KAAK6I,GACD,OAAO,2BAAItC,GAAX,IAAkByC,gBAAgB,IAEtC,KAAKF,GACD,OAAO,2BAAIvC,GAAX,IAAkBsB,SAAS,EAAMrD,WAAYuH,EAAOvH,aAExD,KAAKuE,GACD,OAAO,2BAAIxC,GAAX,IAAkBuB,UAAWiE,EAAOjE,YAExC,QAAS,OAAOvB,I2BdpBsE,YxBF8B,WAAkE,IAAjEtE,EAAgE,uDAAxDoB,GAAcoE,EAA0C,uCAC/F,OAAQA,EAAO/L,MACX,IAAK,eACD,OAAO,2BAAIuG,GAAX,IAAkBoE,kBAAkB,IAExC,IAAK,QACD,OAAO,2BAAIpE,GAAX,IAAkBsB,SAAS,EAAMrD,WAAYuH,EAAOvH,aAExD,IAAK,UACD,OAAO,2BAAI+B,GAAX,IAAkBuB,UAAWiE,EAAOjE,YAExC,QACI,OAAOvB,IwBTfoG,MAAOb,GACP2G,UbCG,WAAmF,IAAzDlM,EAAwD,uDAAlDoB,GAAcoE,EAAoC,uCACrF,OAAOA,EAAO/L,MACV,IAAK,iBACD,OAAO,2BAAIuG,GAAX,IAAkBgF,OAAQQ,EAAOR,SAErC,IAAK,YACD,OAAO,2BAAIhF,GAAX,IAAkBpC,MAAO4H,EAAO5H,QAEpC,IAAK,YACD,OAAO,2BAAIoC,GAAX,IAAkBoG,MAAOZ,EAAOY,QAEpC,IAAK,yBACD,OAAO,2BAAIpG,GAAX,IAAkBnC,iBAAkB2H,EAAOpH,OAC/C,QACI,OAAO4B,MaZb0P,GAAQC,aAAYH,GAAUI,aAAgBC,OAErCH,MAKfI,OAAOJ,MAAQA,GACfjP,QAAQC,IAAIgP,GAAMK,YCxBlBC,IAASlE,OACL,cAAC,IAAMmE,WAAP,UACI,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRQ,SAASC,eAAe,SAM5BrB,M,mBCnBAsB,EAAOC,QAAU,CAAC,UAAY,0BAA0B,QAAU,wBAAwB,KAAO,qBAAqB,mBAAqB,mCAAmC,WAAa,2BAA2B,MAAQ,sBAAsB,SAAW,yBAAyB,OAAS,uBAAuB,KAAO,uB,mBCA/TD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,SAAW,0B,mBCArFD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,yBAAyB,OAAS,6B,mBCArGD,EAAOC,QAAU,CAAC,UAAY,kC,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,2BAA2B,aAAe,4BAA4B,cAAgB,+B,mBCAtHD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,WAAa,+BAA+B,MAAQ,4B,mBCAlHD,EAAOC,QAAU,CAAC,MAAQ,iCAAiC,UAAY,qCAAqC,KAAO,kC,mBCAnHD,EAAOC,QAAU,CAAC,WAAa,kCAAkC,WAAa,kCAAkC,MAAQ,+B,mBCAxHD,EAAOC,QAAU,CAAC,WAAa,wCAAwC,OAAS,sC,mBCAhFD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,KAAO,uB","file":"static/js/main.93af1ae9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;","\r\nimport React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className} `;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import axios from \"axios\";\r\nimport {LoginFormData} from \"../store/login-reducer\";\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport type SetNewPasswordParamsType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\nexport type ResponseRestoreType = {\r\n    info: string\r\n    error: string\r\n}\r\nexport type RegistrationDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type ResponseRegistrationDataType = {\r\n    addedUser: {\r\n        _id: string\r\n        email: string\r\n        rememberMe: boolean\r\n        isAdmin: boolean\r\n        name: string\r\n        verified: boolean\r\n        publicCardPacksCount: number\r\n        created: string\r\n        updated: string\r\n    }\r\n}\r\nexport const passwordAPI = {\r\n    forgot(email: string | null) {\r\n        return api.post<ResponseRestoreType>('auth/forgot', {\r\n            email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n              password recovery link: \t\r\n              <a href='http://localhost:3000/FridaDZ#/newPassword/$token$'>\t\r\n              Link </a></div>`\r\n        })\r\n    },\r\n\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return api.post<ResponseRestoreType>('auth/set-new-password', {password, resetPasswordToken})\r\n    },\r\n\r\n    registration(data: RegistrationDataType) {\r\n        return api.post<ResponseRegistrationDataType>('auth/register', data)\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    login(data: LoginFormData) {\r\n        return api.post('auth/login', data)\r\n    },\r\n    authMe() {\r\n        return api.post('auth/me', {})\r\n    },\r\n    logout() {\r\n        return api.delete('auth/me')\r\n    }\r\n};\r\n\r\n//типизация и апи для колод\r\nexport type CardsPackDataType = {\r\n    name: string\r\n}\r\nexport type CardPacksType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v: number\r\n}\r\nexport type CardPacksResponseType = {\r\n    cardPacks: Array<CardPacksType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\nexport type UpdatePacksDataType = {\r\n    _id: string\r\n    name?: string\r\n}\r\n\r\nexport const packsAPI = {\r\n\r\n    getCardPacks(\r\n        page: number = 1,\r\n        pageCount: number = 10,\r\n        sortPacks: string = '0created',\r\n        min: number = 0,\r\n        max: number = 24,\r\n        user_id?:string | undefined\r\n    ) {\r\n        return api.get<CardPacksResponseType>('/cards/pack', {\r\n\r\n            params: {\r\n                page,\r\n                pageCount,\r\n                sortPacks,\r\n                min,\r\n                max,\r\n                user_id\r\n            }\r\n        })\r\n    },\r\n    createPack(title: string) {\r\n        return api.post(`cards/pack`,  {cardsPack: {name: title}})\r\n    },\r\n    deletePack(id: string) {\r\n        return api.delete(`cards/pack?id=${id}`)\r\n    },\r\n    updatePack(id: string, name: string) {\r\n        return api.put(`cards/pack/`, {cardsPack: {_id: id, name}})\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//типизация и апи для карточек\r\n\r\nexport type CardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n    questionImg:string\r\n    comments:string\r\n    type: string\r\n    rating: number\r\n    more_id:string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n\r\n}\r\n\r\n\r\n\r\nexport type CardsResponseType={\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n\r\n}\r\nexport type CreateCardRequestType = {\r\n    cardsPack_id: string\r\n    question?: string\r\n    answer?: string\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards(cardsPackId: string, pageCount: number = 24, page: number = 1) {\r\n        return api.get(`cards/card?cardsPack_id=${cardsPackId}&pageCount=${pageCount}&page=${page}`)\r\n    },\r\n    createCard(cardModel:CreateCardRequestType){\r\n        return api.post(`cards/card`,{card:cardModel})\r\n    },\r\n    deleteCard(id:string){\r\n        return api.delete(`cards/card?id=${id}`)\r\n    },\r\n    updateCard(id:string, question: string, answer: string ){\r\n        return api.put(`cards/card`,{card:{_id:id, question, answer}})\r\n    }\r\n}\r\n\r\nexport const gradeCardAPI = {\r\n    gradeCard(id: string, grade: number){\r\n        return api.put(\"cards/grade\",  {grade, card_id:id})\r\n    }\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {authAPI} from \"../api/api\";\r\n\r\nexport type LoginFormData = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\ntype UserAuthData = {\r\n    data: UserDataType\r\n    isAuth: boolean\r\n    isFetching: boolean\r\n    isInitialized: boolean\r\n    error: string | null\r\n    showSuccessModal: boolean\r\n}\r\n\r\n/*email: \"nya-admin@nya.nya\",\r\n    password: \"1qazxcvBG\",*/\r\n\r\n\r\nconst initState: UserAuthData = {\r\n    data: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: \"\",\r\n        publicCardPacksCount: 0,\r\n        created: '',\r\n        updated: '',\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n\r\n    },\r\n    isAuth: false,\r\n    isFetching: false,\r\n    isInitialized: false,\r\n    error: '',\r\n    showSuccessModal: false\r\n};\r\n\r\nexport const loginReducer = (state = initState, action: ActionsType): UserAuthData => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\": {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case \"ERROR\": {\r\n\r\n            return {...state, error: action.titleError}\r\n        }\r\n        case \"TOGGLE-IS-FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case \"SET-SHOW-SUCCESS-MODAL\":\r\n            return {...state, showSuccessModal: action.show}\r\n        case \"SET-IS-INITIALIZED\":\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setAuthUserDataAC = (data: UserDataType, isAuth: boolean) => {\r\n    return {\r\n        type: 'SET-USER-DATA',\r\n        payload: {data, isAuth}\r\n    } as const\r\n}\r\nconst errorAC = (titleError: string | null) => ({type: 'ERROR', titleError} as const)\r\n\r\nconst setIsInitialized = (isInitialized: boolean) => ({\r\n    type: 'SET-IS-INITIALIZED',\r\n    isInitialized\r\n} as const)\r\nconst toggleIsFetching = (isFetching: boolean) => ({\r\n    type: 'TOGGLE-IS-FETCHING',\r\n    isFetching\r\n} as const)\r\nexport const setShowSuccessModalAC = (show: boolean) => ({type: \"SET-SHOW-SUCCESS-MODAL\", show} as const)\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof setAuthUserDataAC>\r\n    | ReturnType<typeof errorAC>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof setShowSuccessModalAC>\r\n    | ReturnType<typeof setIsInitialized>\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\n\r\n\r\nexport const loginAC = (data: LoginFormData) => ({type: 'LOGIN', data} as const);\r\n\r\n/*export const initializeUserTC = (): ThunkType => {\r\n\r\n    return (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        authAPI.authMe()\r\n            .then(response => {\r\n                let data: UserDataType = response.data\r\n                let isAuth = true\r\n                dispatch(setIsInitialized(true))\r\n                dispatch(setShowSuccessModalAC(true))\r\n                setTimeout(() => {\r\n                    dispatch(setShowSuccessModalAC(false))\r\n                }, 2000)\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console')\r\n                console.log('Error: ', {...e})\r\n                console.log(error)\r\n                dispatch(errorAC(error))\r\n            })\r\n        dispatch(toggleIsFetching(false))\r\n    }\r\n}*/\r\n\r\nexport const login = (data: LoginFormData): ThunkType => {\r\n\r\n    return (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        authAPI.login(data)\r\n            .then(response => {\r\n                let data: UserDataType = response.data\r\n                let isAuth = true\r\n                dispatch(setAuthUserDataAC(data, isAuth))\r\n                dispatch(setShowSuccessModalAC(true))\r\n                setTimeout(() => {\r\n                    dispatch(setShowSuccessModalAC(false))\r\n                }, 2000)\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console')\r\n                console.log('Error: ', {...e})\r\n                console.log(error)\r\n                dispatch(errorAC(error))\r\n            })\r\n        dispatch(toggleIsFetching(false))\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n        authAPI.logout()\r\n            .then(() => dispatch(setAuthUserDataAC(initState.data, false)))\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console')\r\n                console.log('Error: ', {...e})\r\n                console.log(error)\r\n                dispatch(errorAC(error))\r\n            })\r\n        dispatch(toggleIsFetching(false))\r\n    }\r\n}\r\n","import React from 'react';\r\nimport style from './modal.module.css'\r\n\r\ntype PropsType = {\r\n    title: string\r\n    width: number\r\n    height: number\r\n    backgroundDiv: boolean\r\n    bgOnClick: () => void\r\n    CSSStyles?:  React.CSSProperties\r\n}\r\n\r\nexport const Modal: React.FC<PropsType> = (props) => {\r\n    const modalStyles = {\r\n        top: `calc(50vh - ${props.height / 2}px)`,\r\n        left: `calc(50vw - ${props.width / 2}px)`,\r\n        width: props.width,\r\n        height: props.height,\r\n        ...props.CSSStyles\r\n    } as const\r\n    return (\r\n        <>\r\n            {props.backgroundDiv && <div onClick={props.bgOnClick} className={style.backgroundDiv}></div>}\r\n            <div className={style.modalWindow} style={modalStyles}>\r\n                <h3>{props.title}</h3>\r\n                <div className={style.buttonsStyle}>{props.children}</div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e); // ?\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error?s.errorInput:s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;","import React, { FormEvent } from \"react\";\r\nimport SuperInput from \"../common/SuperInput/SuperInput\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login, LoginFormData} from \"../../store/login-reducer\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {Modal} from \"./modal/modal\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport s from \"../header/Header.module.css\";\r\nimport {PATH} from \"../routes/Routes\";\r\n\r\n\r\nexport function Login() {\r\n\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n    const show = useSelector<AppStoreType, boolean>(state => state.login.showSuccessModal)\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n\r\n\r\n    const submitLoginData = (e: FormEvent<HTMLFormElement>) => {\r\n\r\n        e.preventDefault();\r\n        const email = e.currentTarget.email.value\r\n        const password = e.currentTarget.password.value\r\n        const rememberMe: boolean = e.currentTarget.rememberMe.value\r\n        const data: LoginFormData = {email, password, rememberMe}\r\n        dispatch(login(data))\r\n    }\r\n\r\n    const loginStyle = {\r\n        'display': 'flex',\r\n        'flex-direction': 'column',\r\n        'align-items': 'center'\r\n    }\r\n    let top: number;\r\n    if(show) {\r\n        top = 100\r\n    }else{\r\n        top = -100\r\n    }\r\n\r\n    return (\r\n       <> <form onSubmit={submitLoginData}>\r\n            <div style={loginStyle}>\r\n                <h2>Login</h2>\r\n                <SuperInputText name={'email'} placeholder={'Enter your email'}/>\r\n                <SuperInputText name={'password'} type={'password'} placeholder={'Enter your password'}/>\r\n                <div><SuperCheckbox name={'rememberMe'} type={'checkbox'}/>\r\n                    <span>Remember Me</span></div>\r\n                <SuperButton type={'submit'}>Login</SuperButton>\r\n                <div>\r\n\r\n                    <NavLink to={PATH.passwordRecovery} className={s.inactive} activeClassName={s.active}>\r\n                        Forgot Password?\r\n                       </NavLink>\r\n\r\n                    <NavLink to={PATH.registration} className={s.inactive}\r\n                             activeClassName={s.active}>  Registration  </NavLink>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </form>\r\n           <Modal title={\"Success\"} width={100} height={50} backgroundDiv={false} bgOnClick={() => {}}\r\n                  CSSStyles={{\r\n                      top: top+\"px\",\r\n                      backgroundColor: \"lightgreen\"\r\n                  }}\r\n           />\r\n       </>\r\n    );\r\n}\r\n\r\nexport default Login;","import {AppStoreType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {passwordAPI} from \"../api/api\";\r\n\r\n\r\nconst initialState = {\r\n    isMessageSend: false,\r\n    isError: false,\r\n    titleError: null as string|null,\r\n    isLoading: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = ReturnType<typeof passwordRecoveryAC>|ReturnType<typeof errorAC>|ReturnType<typeof loadingAC>\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\n\r\n\r\nexport const passwordRecoveryReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PASSWORD-RECOVERY': {\r\n            return {...state, isMessageSend: true};\r\n        }\r\n        case \"ERROR\": {\r\n            return {...state, isError: true, titleError: action.titleError}\r\n        }\r\n        case \"LOADING\": {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst passwordRecoveryAC = () => ({type: 'PASSWORD-RECOVERY'} as const);\r\nconst errorAC = (titleError:string|null) => ({type: 'ERROR', titleError} as const)\r\nconst loadingAC = (isLoading:boolean) => ({type: 'LOADING', isLoading} as const)\r\n\r\nexport const passwordRecoveryTC = (email: string | null): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(loadingAC(true))\r\n        await passwordAPI.forgot(email)\r\n        dispatch(passwordRecoveryAC())\r\n        dispatch(errorAC(null))\r\n    } catch  (e) {\r\n        dispatch(errorAC(e.response.data.error));\r\n\r\n    } finally {\r\n        dispatch(loadingAC(false))\r\n    }\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/preloader.0116944b.svg\";","import React from \"react\";\r\nimport preloader from '../common/preloader.svg'\r\nfunction Loading(){\r\n    return(\r\n        <div>\r\n            <img src={preloader} />\r\n        </div>\r\n    )\r\n}\r\nexport default Loading","import React, {ChangeEvent} from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./password-recovery.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {passwordRecoveryTC} from \"../../store/password-recovery-reducer\";\r\nimport Loading from \"./Loading\";\r\n\r\n\r\nfunction PasswordRecovery() {\r\n    const dispatch = useDispatch()\r\n    //const isMailSend = useSelector<AppStoreType, boolean>(state => state.passwordRecovery.isMessageSend)\r\n    const isLoading = useSelector<AppStoreType, boolean>((state) => state.registration.isLoading)\r\n    const sendMail =(e:any)=>{\r\n        e.preventDefault();\r\n        const email = e.target.email.value\r\n       // alert(email)\r\n        dispatch(passwordRecoveryTC(email))\r\n\r\n    }\r\n    if (isLoading) {\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n  /*  if (isMailSend) {\r\n        return <Redirect to={'/login'}/>\r\n    }*/\r\n\r\n    return (\r\n        <form onSubmit={sendMail}>\r\n        <div className={style.block}>\r\n            <h3>Reset Password Page</h3>\r\n            <div className={style.container}>\r\n                <SuperInputText name={'email'}  placeholder={'Email'}/>\r\n                <span className={style.text}>Please enter your email address so\r\n                    that we will send you a link to reset your password.</span>\r\n                <SuperButton>\r\n                    Send\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PasswordRecovery;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {UserDataType} from \"../../store/login-reducer\";\r\n\r\nfunction Profile() {\r\n\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n    const userData = useSelector<AppStoreType, UserDataType>(state => state.login.data)\r\n    const cardsCount = useSelector<AppStoreType, number | null>(state => state.profile.publicCardPacksCount)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Profile</h3>\r\n\r\n            {isAuth\r\n                ? <div>\r\n                   <div> Name: {userData.name}</div>\r\n                  {/* <div> Count of cards: {cardsCount}</div>*/}\r\n\r\n\r\n\r\n            </div>\r\n                : <Redirect to={'login'}/>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {Dispatch} from \"react\";\r\nimport {RegistrationDataType, passwordAPI} from \"../api/api\";\r\n\r\nconst REGISTRATION = \"REGISTRATION\"\r\nconst ERROR = \"ERROR\"\r\nconst LOADING = \"LOADING\"\r\n\r\nconst initState = {\r\n    isRegistration: false,\r\n    isError: false,\r\n    titleError: '',\r\n    isLoading: false\r\n};\r\ntype initStateType = {\r\n    isRegistration: boolean\r\n    isError: boolean\r\n    titleError: string\r\n    isLoading: boolean\r\n}\r\n\r\ntype ActionType = RegistrationType | ErrorType | LoadingType\r\n\r\nexport const registrationReducer = (state = initState, action: ActionType): initStateType => {\r\n    switch (action.type) {\r\n        case REGISTRATION: {\r\n            return {...state, isRegistration: true};\r\n        }\r\n        case ERROR: {\r\n            return {...state, isError: true, titleError: action.titleError};\r\n        }\r\n        case LOADING: {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\ntype RegistrationType = {\r\n    type: typeof REGISTRATION\r\n}\r\ntype ErrorType = {\r\n    type: typeof ERROR\r\n    titleError: string\r\n}\r\ntype LoadingType = {\r\n    type: typeof LOADING\r\n    isLoading: boolean\r\n}\r\nexport const registrationAC = (): RegistrationType => {\r\n    return {type: 'REGISTRATION'}\r\n};\r\nexport const errorAC = (titleError:string,): ErrorType => {\r\n    return {type: 'ERROR', titleError: titleError}\r\n};\r\nexport const loadingAC = (isLoading:boolean): LoadingType => {\r\n    return {type: 'LOADING', isLoading: isLoading}\r\n};\r\n\r\ntype ResponseErrorType = {\r\n    response:DataType\r\n}\r\ntype DataType = {\r\n        data : {\r\n            error: string\r\n            in: string\r\n            isEmailValid?: boolean\r\n            isPassValid?: boolean\r\n            passwordRegExp?: string\r\n        }\r\n}\r\n\r\nexport const registrationThunkCreator = (registrationData:RegistrationDataType) => (dispatch:Dispatch<any>) => {\r\n                dispatch(loadingAC(true))\r\n            passwordAPI.registration(registrationData)\r\n                .then((data) => {\r\n                    dispatch(registrationAC())\r\n                })\r\n                .catch((error: ResponseErrorType)=>{\r\n                    dispatch(errorAC(error.response.data.error))\r\n                })\r\n                .finally(()=>{\r\n                    dispatch(loadingAC(false))\r\n            })\r\n\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperPassword.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperPassword: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e); // ?\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error?s.errorInput:s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"password\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperPassword;","import React, {useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registrationThunkCreator} from \"../../store/registration-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport style from \"./new-password.module.css\";\r\nimport SuperPassword from \"../common/SuperPassword/SuperPassword\";\r\n\r\nfunction Registration() {\r\n    const dispatch = useDispatch()\r\n    const isRegistration = useSelector<AppStoreType, boolean>((state) => state.registration.isRegistration)\r\n    const isError = useSelector<AppStoreType, boolean>((state) => state.registration.isError)\r\n    const titleError = useSelector<AppStoreType, string>((state) => state.registration.titleError)\r\n    const isLoading = useSelector<AppStoreType, boolean>((state) => state.registration.isLoading)\r\n    const [passwordLength, setPasswordLength] = useState(true)\r\n    const [emailLength, setEmailLength] = useState(true)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [emailError, setEmailError] = useState(false)\r\n    const [emailValue, setEmailValue] = useState('')\r\n    const [passwordValue, setPasswordValue] = useState('')\r\n\r\n    function submit(e: any) { // e:React.FormEvent<HTMLFormElement>\r\n        e.preventDefault();\r\n        const obj = {\r\n            email: e.target.email.value,\r\n            password: e.target.password.value\r\n        }\r\n        dispatch(registrationThunkCreator(obj))\r\n    }\r\n\r\n    function changePassword(e: any) {\r\n        setPasswordValue(e.currentTarget.value)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLength(false)\r\n            setPasswordError(false)\r\n\r\n        } else {\r\n            setPasswordLength(true)\r\n        }\r\n    }\r\n\r\n    function changEmail(e: any) {\r\n        setEmailValue(e.currentTarget.value)\r\n        if (e.currentTarget.value.length >= 7 && (e.currentTarget.value.indexOf(\"@\") !== -1)) {\r\n            setEmailLength(false)\r\n            setEmailError(false)\r\n        } else {\r\n            setEmailLength(true)\r\n        }\r\n    }\r\n\r\n    function blurPassword(e: any) {\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordError(true)\r\n        }\r\n    }\r\n\r\n    function blurEmail(e: any) {\r\n        if (e.currentTarget.value.length < 7 || (e.currentTarget.value.indexOf(\"@\") == -1)) {\r\n            setEmailError(true)\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n    if (isRegistration) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <form onSubmit={submit} style={{marginTop: '50px'}}>\r\n                <div><label>Email<SuperInputText name={'email'} onChange={changEmail} value={emailValue}\r\n                                                 onBlur={blurEmail}/></label></div>\r\n                <div style={{height: '50px'}}>{emailError &&\r\n                <div style={{color: \"red\"}}>{'not valid email'}</div>}</div>\r\n                <div><label>Password<SuperPassword type={'password'} name={'password'} onChange={changePassword}\r\n                                                   value={passwordValue} onBlur={blurPassword}/></label></div>\r\n                <div style={{height: '50px'}}>{passwordError &&\r\n                <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}</div>\r\n                <div><SuperButton disabled={passwordLength || emailLength}\r\n                                  style={(passwordLength || emailLength) ? undefined : {background: \"green\"}}>registration</SuperButton>\r\n                </div>\r\n                {isError && <div style={{color: \"red\"}}>{titleError}</div>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {passwordAPI} from \"../api/api\";\r\n\r\n\r\nconst initialState = {\r\n    isNewPasswordSet: false,\r\n    isError: false,\r\n    titleError: null as string|null,\r\n    isLoading: false\r\n};\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = ReturnType<typeof newPasswordAC> | ReturnType<typeof errorAC> | ReturnType<typeof loadingAC>\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\n\r\nexport const newPasswordReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"NEW-PASSWORD\": {\r\n            return {...state, isNewPasswordSet: true};\r\n        }\r\n        case \"ERROR\": {\r\n            return {...state, isError: true, titleError: action.titleError}\r\n        }\r\n        case \"LOADING\": {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const newPasswordAC = () => ({type: \"NEW-PASSWORD\"} as const)\r\n\r\nexport const errorAC = (titleError: string,) => ({type: 'ERROR', titleError} as const)\r\n\r\nexport const loadingAC = (isLoading: boolean) => ({type: 'LOADING', isLoading} as const)\r\n\r\n\r\nexport const newPasswordTC = (password: string, resetPasswordToken: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(loadingAC(true))\r\n        await passwordAPI.setNewPassword(password, resetPasswordToken)\r\n        dispatch(newPasswordAC())\r\n    } catch (e) {\r\n        dispatch(errorAC(e.response.data.error));\r\n    } finally {\r\n        dispatch(loadingAC(false))\r\n    }\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport style from \"./new-password.module.css\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {errorAC, newPasswordTC} from \"../../store/new-password-reducer\";\r\nimport {useParams} from 'react-router-dom';\r\n\r\nfunction NewPassword() {\r\n    const dispatch = useDispatch()\r\n    const isNewPasswordSet = useSelector<AppStoreType, boolean>(state => state.newPassword.isNewPasswordSet)\r\n    const error = useSelector<AppStoreType, boolean>(state => state.newPassword.isError)\r\n    const titleError = useSelector<AppStoreType, string | null>(state => state.newPassword.titleError)\r\n    const {resetPasswordToken} = useParams<{ resetPasswordToken: string }>();\r\n    const [passwordLength, setPasswordLength] = useState(true)\r\n    const [passwordLengthDub, setPasswordLengthDub] = useState(true)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [passwordErrorDub, setPasswordErrorDub] = useState(false)\r\n    const [buttonColor, setButtonColor] = useState('')\r\n\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        const password = e.target.password.value\r\n        const repeatPassword = e.target.repeatPassword.value\r\n        password === repeatPassword\r\n            ? dispatch(newPasswordTC(password, resetPasswordToken))\r\n            : dispatch(errorAC('Not equal'))\r\n\r\n    }\r\n    console.log(resetPasswordToken)\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.currentTarget.value.length)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLength(false)\r\n            setPasswordError(false)\r\n            setButtonColor('blue')\r\n        } else {\r\n            setPasswordLength(true)\r\n            setButtonColor('')\r\n        }\r\n    }\r\n    const changePasswordDub = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.currentTarget.value.length)\r\n        if (e.currentTarget.value.length >= 7) {\r\n            setPasswordLengthDub(false)\r\n            setPasswordErrorDub(false)\r\n            setButtonColor('blue')\r\n        } else {\r\n            setPasswordLengthDub(true)\r\n            setButtonColor('')\r\n        }\r\n    }\r\n\r\n    const onblur = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.target.value)\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordError(true)\r\n        }\r\n    }\r\n    const onblurDub = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(e.target.value)\r\n        if (e.currentTarget.value.length < 7) {\r\n            setPasswordErrorDub(true)\r\n        }\r\n    }\r\n\r\n    if (isNewPasswordSet) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div className={style.container}>\r\n                <h3>Set password</h3>\r\n                <SuperInputText type='password' name='password' placeholder=\"New password\" onChange={changePassword}\r\n                                onBlur={onblur}/>\r\n                {passwordError && <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}\r\n\r\n                <SuperInputText type='password' name='repeatPassword' placeholder=\"Confirm new password\"\r\n                                onChange={changePasswordDub} onBlur={onblurDub}/>\r\n                {passwordErrorDub && <div style={{color: \"red\"}}>{'Password must be more than 7 characters...'}</div>}\r\n\r\n                <SuperButton type=\"submit\" disabled={passwordLength || passwordLengthDub}\r\n                             style={{background: buttonColor}}>\r\n                    Change password\r\n                </SuperButton>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewPassword;","import {CardPacksType, packsAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\n\r\n\r\nexport type IsLoadingValuesType = 'loading' | 'idle'\r\n\r\ntype InitStateType = typeof initState\r\nconst initState = {\r\n    status: \"idle\" as IsLoadingValuesType,\r\n    error: null as string|null,\r\n    packs:[] as Array<CardPacksType>,\r\n    packsTotalCount:1,\r\n    pageCount: 10,\r\n    page:1,\r\n    isMyPacks: false,\r\n    sortPacks: '0created',\r\n    minCardsCount:0,\r\n    maxCardsCount:10,\r\n    inputValueSearch:'',\r\n    showSuccessModal: false\r\n}\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\ntype ActionsType=\r\n    ReturnType<typeof setErrorAC>\r\n    |ReturnType<typeof setIsLoadingAC>\r\n    |ReturnType<typeof getPacksAC>\r\n    |ReturnType<typeof searchedPacksAC>\r\n    |ReturnType<typeof sortPacksUPAC>\r\n    |ReturnType<typeof sortPacksDownAC>\r\n    |ReturnType<typeof sortPacksDownAC>\r\n    |ReturnType<typeof cardsCountAC>\r\n    |ReturnType<typeof setShowSuccessModalAC>\r\n    |ReturnType<typeof setIsMyPacksAC>\r\n\r\nfunction packsReducer(state=initState, action:ActionsType):InitStateType {\r\n\r\n    switch (action.type){\r\n\r\n        case \"SET-IS-LOADING\":\r\n            return {...state, status: action.status}\r\n\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n\r\n        case 'GET-PACKS':{\r\n\r\n            return  {...state, packs: action.filteredPacks, packsTotalCount: action.packsTotalCount,\r\n                pageCount: action.pageCount, page: action.page}\r\n            //return  {...state, newCards: action.newCards, packsTotalCount: action.packsTotalCount}\r\n        }\r\n        case 'SEARCHED-PACKS':{\r\n\r\n            return {...state, packs: action.filteredPacks, page: action.page, pageCount: action.pageCount, inputValueSearch: action.inputValueSearch}\r\n\r\n        }\r\n        case 'SORT-PACKS-UP':{\r\n            return {...state, packs: action.filteredPacks, sortPacks: action.sortPacksByDateUp}\r\n        }\r\n        case 'SORT-PACKS-DOWN':{\r\n            return {...state, packs: action.filteredPacks, sortPacks: action.sortPacksByDateDown}\r\n        }\r\n        case 'CARDS-COUNT':{\r\n\r\n            return {...state,packs: action.packs, minCardsCount: action.min, maxCardsCount: action.max, packsTotalCount: action.packsTotalCount}\r\n        }\r\n        case \"SET-SHOW-SUCCESS-MODAL\":\r\n            return {...state, showSuccessModal: action.show}\r\n        case 'CHECK-IS-MY-PACKS':\r\n            return {...state, isMyPacks: action.isMyPacks}\r\n\r\n        default:\r\n            return initState\r\n    }\r\n}\r\nexport default packsReducer\r\n\r\n//actions\r\n\r\nconst setErrorAC = (error: string | null) => ({type: \"SET-ERROR\", error} as const)\r\nconst setIsLoadingAC = (status: IsLoadingValuesType) => ({type: \"SET-IS-LOADING\", status} as const)\r\nconst getPacksAC = (filteredPacks: Array<CardPacksType>, packsTotalCount: number, page: number, pageCount: number) =>\r\n    ({type:'GET-PACKS', filteredPacks, packsTotalCount, page, pageCount } as const)\r\nconst searchedPacksAC = (filteredPacks: Array<CardPacksType>, page: number, pageCount: number, inputValueSearch: string) =>\r\n    ({type: 'SEARCHED-PACKS', filteredPacks, page, pageCount, inputValueSearch } as const)\r\nconst sortPacksUPAC = (filteredPacks: Array<CardPacksType>, sortPacksByDateUp:string) =>\r\n    ({type: 'SORT-PACKS-UP', filteredPacks, sortPacksByDateUp} as const)\r\nconst sortPacksDownAC = (filteredPacks: Array<CardPacksType>, sortPacksByDateDown:string) =>\r\n    ({type: 'SORT-PACKS-DOWN', filteredPacks, sortPacksByDateDown} as const)\r\nconst cardsCountAC = (packs:Array<CardPacksType>,  min:number, max:number, packsTotalCount:number) =>\r\n    ({type:'CARDS-COUNT',packs,  min, max, packsTotalCount} as const)\r\nexport const setShowSuccessModalAC = (show: boolean) => ({type: \"SET-SHOW-SUCCESS-MODAL\", show} as const)\r\nexport const setIsMyPacksAC = (isMyPacks: boolean) => ({type: 'CHECK-IS-MY-PACKS', isMyPacks} as const)\r\n\r\n//thunks\r\nexport const getPacksTC = () : ThunkType=> (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.getCardPacks().then((data)=>{\r\n\r\n        const packsTotalCount= data.data.cardPacksTotalCount\r\n        const filteredPacks = data.data.cardPacks\r\n        const page = data.data.page\r\n        const pageCount = data.data.pageCount\r\n        dispatch(getPacksAC(filteredPacks, packsTotalCount, page, pageCount))//rangeMin, rangeMax\r\n        dispatch(setIsLoadingAC(\"idle\"))\r\n\r\n    })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const packsTC = (page: number, pageCount:number, sortPacks:string, min:number, max:number, inputValueSearch:string ) :\r\n    ThunkType=> (dispatch) => {\r\n    packsAPI.getCardPacks(page, pageCount, sortPacks, min,  max).then((cards)=>{\r\n        const packsTotalCount= cards.data.cardPacksTotalCount\r\n        const packs = cards.data.cardPacks\r\n        const filteredPacks = packs.filter((pack: CardPacksType) => {\r\n            return pack.name.toLowerCase().indexOf(inputValueSearch) !== -1\r\n\r\n        })\r\n\r\n        dispatch(dispatch(getPacksAC(filteredPacks, packsTotalCount, page, pageCount)))\r\n    })\r\n}\r\nexport const changeInputTC = (e:any, page:number, pageCount:number, sortPacks:string, min:number, max:number):\r\n    ThunkType  =>(dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.getCardPacks(page, pageCount, sortPacks, min, max).then((data) => {\r\n\r\n        const packs = data.data.cardPacks\r\n        const page = data.data.page\r\n        const pageCount = data.data.pageCount\r\n        const inputValueSearch = e.target.value.toLowerCase().trim()\r\n        const filteredPacks = packs.filter((pack: CardPacksType) => {\r\n            return pack.name.toLowerCase().indexOf(e.target.value.toLowerCase().trim()) !== -1\r\n\r\n        })\r\n\r\n        dispatch(searchedPacksAC(filteredPacks, page, pageCount, inputValueSearch))\r\n\r\n    })\r\n}\r\nexport const sortByDateUpTC =\r\n    (page:number, pageCount:number, sortPacksByDateUp:string, min:number, max:number, inputValueSearch:string):\r\n        ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.getCardPacks(page, pageCount, sortPacksByDateUp, min, max).then((data)=>{\r\n        const packs = data.data.cardPacks\r\n        const filteredPacks = packs.filter((pack: CardPacksType) => {\r\n            return pack.name.toLowerCase().indexOf(inputValueSearch) !== -1\r\n\r\n        })\r\n        dispatch(sortPacksUPAC(filteredPacks, sortPacksByDateUp))\r\n    })\r\n}\r\n\r\nexport const sortByDateDown = (page:number, pageCount:number, sortPacksByDateDown:string, min:number, max:number, inputValueSearch:any): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.getCardPacks(page, pageCount, sortPacksByDateDown, min, max).then((data)=>{\r\n        const packs = data.data.cardPacks\r\n        const filteredPacks = packs.filter((pack: CardPacksType) => {\r\n            return pack.name.toLowerCase().indexOf(inputValueSearch) !== -1\r\n\r\n        })\r\n        dispatch(sortPacksDownAC(filteredPacks, sortPacksByDateDown))\r\n    })\r\n}\r\n\r\nexport const changeSliderTC = (page:number, pageCount:number, sortPacks:string, min:number,max:number): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.getCardPacks(page, pageCount, sortPacks, min,max ).then(data=>{\r\n        const packs = data.data.cardPacks\r\n        const packsTotalCount= data.data.cardPacksTotalCount\r\n        dispatch(cardsCountAC(packs,  min, max, packsTotalCount))\r\n\r\n\r\n    })\r\n}\r\n\r\nexport const createPackTC = (title: string): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.createPack(title)\r\n        .then(res => {\r\n            dispatch(getPacksTC())\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n            dispatch(setShowSuccessModalAC(true))\r\n            setTimeout(() => {\r\n                dispatch(setShowSuccessModalAC(false))\r\n            }, 2000)\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\n\r\nexport const deletePackTC = (id: string): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.deletePack(id)\r\n        .then(res => {\r\n            dispatch(getPacksTC())\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const updatePackTC = (id: string, name: string): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.updatePack(id, name)\r\n        .then(res => {\r\n            dispatch(getPacksTC())\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\n","import ReactPaginate from 'react-paginate';\r\nimport React, {ChangeEvent, useState} from 'react'\r\nimport s from './PaginationComponent.module.css'\r\n//import {cardPacksAPI} from \"../../../api/api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {packsTC} from \"../../../store/packs-reducer\";\r\nimport {AppStoreType} from \"../../../store/store\";\r\n\r\ntype PaginationComponentType={\r\n\r\n    options: number[]\r\n\r\n}\r\n\r\nexport function PaginationComponent({options}:PaginationComponentType) {\r\n    const initValueOption = useSelector<AppStoreType,number>(state=>state.cards.pageCount)\r\n    const packs = useSelector<AppStoreType, number>((state)=>state.cards.packsTotalCount)\r\n    const sortPacks = useSelector<AppStoreType, string>(state => state.cards.sortPacks)\r\n    const min = useSelector<AppStoreType, number>(state => state.cards.minCardsCount)\r\n    const max = useSelector<AppStoreType, number>(state => state.cards.maxCardsCount)\r\n    const inputValueSearch = useSelector<AppStoreType, string>(state => state.cards.inputValueSearch)\r\n    const dispatch = useDispatch()\r\n    const page = useSelector<AppStoreType,number>((state=>state.cards.page))\r\n\r\n    const [value, setValue] = useState(initValueOption)\r\n\r\n\r\n    const pageCount = Math.ceil(packs/value)\r\n\r\n    function pageChange(e:any){\r\n        dispatch(packsTC(e.selected+1, value, sortPacks, min, max,inputValueSearch))\r\n\r\n    }\r\n    const paginationStyle={\r\n        display:'flex',\r\n        justifyContent:'flex-start',\r\n        margin: '50px'\r\n    }\r\n    function changeSelect(e:ChangeEvent<HTMLSelectElement>){\r\n        console.log(e.currentTarget.value)\r\n        setValue(Number(e.currentTarget.value))\r\n\r\n        dispatch(packsTC(page, Number(e.currentTarget.value),sortPacks, min, max, inputValueSearch))\r\n    }\r\n\r\n    return (\r\n        <div style={paginationStyle}>\r\n            <select onChange={changeSelect} value={value}>\r\n                {options.map((option, index)=>{\r\n                   return <option key={index} value={option}>{option}</option>\r\n            })}\r\n            </select>\r\n            <div>\r\n            <ReactPaginate\r\n                pageCount={pageCount}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={3}\r\n                breakClassName={s.breakMe}\r\n                containerClassName={s.pagination}\r\n                activeClassName={s.active}\r\n                onPageChange={pageChange}\r\n            />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {packsAPI} from \"../../../api/api\";\r\nimport {changeInputTC} from \"../../../store/packs-reducer\";\r\n\r\n\r\n\r\nexport function SearchComponent({cards}: any) {\r\n    const dispatch = useDispatch()\r\n    const pageCount = useSelector<any, any>(state => state.cards.pageCount)\r\n    const page = useSelector<any, any>(state => state.cards.page)\r\n    const sortPacks = useSelector<any, any>(state => state.cards.sortPacks)\r\n    const min = useSelector<any, any>(state => state.cards.minCardsCount)\r\n    const max = useSelector<any, any>(state => state.cards.maxCardsCount)\r\n    //const [value, setValue] = useState('')\r\n    //const [timerId, setTimerId] = useState<any>()\r\n    // useEffect(()=>{\r\n    //     dispatch(packsTC(page, pageCount))\r\n    // },[])\r\n     function debounce(fn:Function, ms:number){\r\n        let timeout:any;\r\n        return function(){\r\n            console.log(1)\r\n            //@ts-ignore\r\n            const fnCall = () => {fn.apply(this,arguments)}\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(fnCall, ms)\r\n        }\r\n    }\r\n\r\n    // function changeInput(e: ChangeEvent<HTMLInputElement>) {\r\n    //     //setValue(e.currentTarget.value)\r\n    //     console.log(e.target.value)\r\n    //     const arr = cards.filter((card:any)=>{\r\n    //        return  card.name.toLowerCase().indexOf(e.target.value.toLowerCase().trim()) !== -1\r\n    //\r\n    //     })\r\n    //     dispatch({type:'SEARCHED-PACKS', arr})\r\n    //     console.log(arr)\r\n        //setValue(e.target.value)\r\n\r\n\r\n\r\n    const changeInput = (e:any) => {\r\n\r\n        // packsAPI.getCardPacks(page, pageCount).then((data) => {\r\n        //\r\n        //     const cards = data.data.cardPacks\r\n        //\r\n        //     const arr = cards.filter((card: any) => {\r\n        //         return card.name.toLowerCase().indexOf(e.target.value.toLowerCase().trim()) !== -1\r\n        //\r\n        //     })\r\n        //\r\n        //     dispatch({type: 'SEARCHED-PACKS', arr})\r\n        //\r\n        // })\r\n        dispatch(changeInputTC(e, page, pageCount, sortPacks, min, max))\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     const timeout = setTimeout(handleSearch, 1000)\r\n    //     setTimerId(timeout)\r\n    //     return () => {\r\n    //         clearTimeout(timerId)\r\n    //     }\r\n    //\r\n    // }, [value])\r\n\r\n    let debounceChangeInput = debounce(changeInput, 500)\r\n\r\n    return (\r\n        <div>\r\n           {/* <span>Search</span>*/}\r\n            <input type=\"text\" placeholder='Search' onChange={debounceChangeInput} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeInputTC, sortByDateDown, sortByDateUpTC} from \"../../../store/packs-reducer\";\r\n\r\nexport function SortByDate(){\r\n    const dispatch = useDispatch()\r\n    const pageCount = useSelector<any,any>(state=>state.cards.pageCount)\r\n    const page = useSelector<any, any>(state => state.cards.page)\r\n    const min = useSelector<any, any>(state => state.cards.minCardsCount)\r\n    const max = useSelector<any, any>(state => state.cards.maxCardsCount)\r\n    const sortPacks = useSelector<any, any>(state => state.cards.sortPacks)\r\n    const inputValueSearch = useSelector<any, any>(state => state.cards.inputValueSearch)\r\n    function upDate(){\r\n        dispatch(sortByDateUpTC(page, pageCount, '0created', min, max, inputValueSearch))\r\n    }\r\n    function downDate(){\r\n        dispatch(sortByDateDown(page, pageCount, '1created', min, max, inputValueSearch))\r\n    }\r\n\r\n    const buttonStyle1 = {\r\n        width:'30px',\r\n        backgroundColor:'blue'\r\n    }\r\n    const buttonStyle2 = {\r\n        width:'30px',\r\n        backgroundColor:'white'\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n            <button style={(sortPacks === '0created')? buttonStyle1: buttonStyle2} onClick={upDate}>+</button>\r\n            </div>\r\n            <div>\r\n            <button style={(sortPacks === '1created')? buttonStyle1: buttonStyle2} onClick={downDate}>-</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useRef} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Slider } from 'antd';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeSliderTC} from \"../../../../store/packs-reducer\";\r\n\r\ntype PropsType = {\r\n    range: Array<number>\r\n}\r\n\r\n\r\nexport function SliderAnt( ){\r\n    const ref = useRef(null)\r\n    const [range, setRange] = useState([0,24])\r\n\r\n    const sortPacks = useSelector<any, any>(state => state.cards.sortPacks)\r\n    const page = useSelector<any,any>((state=>state.cards.page))\r\n    const pageCount = useSelector<any,any>(state=>state.cards.pageCount)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    function onChange(e:any){\r\n        setRange(e)\r\n    }\r\n    function click(){\r\n     //@ts-ignore\r\n        const value = ref.current.props.value\r\n        dispatch(changeSliderTC(page, pageCount,sortPacks, value[0],value[1]))\r\n\r\n\r\n    }\r\n    return(\r\n        <div style={{display:'flex'}}>\r\n            <span>{0}</span>\r\n            <div style={{width:'200px'}}>\r\n                <Slider\r\n                    range\r\n                    step={1}\r\n                    value={[range[0], range[1]]}\r\n                    onChange={onChange}\r\n                    min={0}\r\n                    max={24}\r\n                    ref={ref}\r\n                />\r\n            </div>\r\n            <span>{24}</span>\r\n            <button onClick={click}>Cards</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {FC} from 'react';\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {Modal} from \"../modal\";\r\nimport SuperButton from \"../../../common/SuperButton/SuperButton\";\r\n\r\ntype PropsType = {\r\n    id?:string\r\n    successClick: (id: string) => void\r\n    component?: React.ReactNode\r\n}\r\nexport const DeletePackModal: FC<PropsType> = ({successClick, component}) => {\r\n\r\n    const {id} = useParams<{id: string}>()\r\n\r\n    const history = useHistory()\r\n\r\n    const handleSuccessClick = () => {\r\n        successClick(id)\r\n        closeModal()\r\n    }\r\n\r\n    const closeModal = () => {\r\n        history.goBack()\r\n    }\r\n    return <Modal bgOnClick={closeModal}\r\n                  title={\"Are you sure?\"} width={500} height={200}\r\n                  backgroundDiv={true}>\r\n        <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n            {component}\r\n            <SuperButton onClick={handleSuccessClick}>Yes</SuperButton>\r\n            <SuperButton onClick={closeModal}>No</SuperButton>\r\n        </div>\r\n    </Modal>\r\n}","import React, {FC, useState} from 'react';\r\nimport {Modal} from \"../modal\";\r\nimport SuperButton from \"../../../common/SuperButton/SuperButton\";\r\n\r\ntype PropsType = {\r\n    createItem?: (title: string) => void\r\n}\r\nexport const AddModal: FC<PropsType> = ({ createItem}:PropsType) => {\r\n\r\n    let [displayModal, setDisplayModal] = useState(true)\r\n    let [value, setValue] = useState(\"\")\r\n\r\n    const createHandler = () => {\r\n        createItem && createItem(value)\r\n        setDisplayModal(false)\r\n        setValue(\"\")\r\n       }\r\n    return (\r\n        <>\r\n\r\n            {displayModal && <Modal bgOnClick={() => setDisplayModal(true)} title={\"Enter name of pack\"}\r\n                                    width={500} height={200} backgroundDiv={true}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.currentTarget.value)}\r\n                />\r\n\r\n                <div style={{display: \"flex\", justifyContent: \"space-around\", marginTop: \"20px\"}}>\r\n                    <SuperButton onClick={createHandler}>Submit</SuperButton>\r\n\r\n                </div>\r\n            </Modal>}\r\n        </>\r\n    )\r\n}","import React, {FC, useState} from 'react';\r\nimport {Modal} from \"../modal\";\r\nimport SuperButton from \"../../../common/SuperButton/SuperButton\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    updateTitle?: (id: string, title: string) => void\r\n}\r\nexport const UpdatePackModal: FC<PropsType> = ({ updateTitle}:PropsType) => {\r\n    const {id} = useParams<{id: string}>()\r\n    let [value, setValue] = useState(\"\")\r\n\r\n    const createHandler = () => {\r\n        updateTitle && updateTitle(id, value)\r\n        setValue(\"\")\r\n        closeModal()\r\n       }\r\n    const history = useHistory()\r\n\r\n    const closeModal = () => {\r\n        history.goBack()\r\n    }\r\n    return (\r\n        <>\r\n\r\n             <Modal bgOnClick={closeModal} title={\"Enter new title\"}\r\n                                    width={500} height={200} backgroundDiv={true}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.currentTarget.value)}\r\n                />\r\n\r\n                <div style={{display: \"flex\", justifyContent: \"space-around\", marginTop: \"20px\"}}>\r\n                    <SuperButton onClick={createHandler}>Submit</SuperButton>\r\n                    <SuperButton onClick={closeModal}>Cancel</SuperButton>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {PaginationComponent} from \"../common/PaginationComponent/PaginationComponent\";\r\nimport {SearchComponent} from \"../common/SearchComponent/SearchComponent\";\r\nimport {SortByDate} from \"../common/SortByDate/SortByDate\";\r\nimport {SliderAnt} from \"../common/PaginationComponent/RangeAnt/RangeAnt\";\r\nimport {\r\n    createPackTC,\r\n    deletePackTC,\r\n    getPacksTC,\r\n    IsLoadingValuesType,\r\n    setIsMyPacksAC,\r\n    updatePackTC\r\n} from \"../../store/packs-reducer\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {CardPacksType} from \"../../api/api\";\r\nimport {NavLink, Redirect, Route, useParams} from \"react-router-dom\";\r\nimport style from './packs.module.css'\r\nimport {Modal} from \"./modal/modal\";\r\nimport {DeletePackModal} from \"./modal/ModelsPacks/DeletePackModal\";\r\nimport {AddModal} from \"./modal/ModelsPacks/AddPackModal\";\r\nimport {RequestStatusType, UserDataType} from \"../../store/app-reducer\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\nimport {DeleteCardModal} from \"./modal/ModelsCards/DeleteCardModel\";\r\nimport {UpdatePackModal} from \"./modal/ModelsPacks/UpdatePackModal\";\r\n\r\n\r\nfunction Packs() {\r\n    const {packId} = useParams<{ packId: string }>();\r\n    const options = [10, 20, 30, 40, 50]\r\n    const userId = useSelector<AppStoreType, string>(state => state.app.UserData ? state.app.UserData._id : \"\")\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n    const isMyPacks = useSelector<AppStoreType, boolean>(state => state.cards.isMyPacks)\r\n    const status = useSelector<AppStoreType, IsLoadingValuesType>(state => state.cards.status)\r\n    const packs = useSelector<AppStoreType, Array<CardPacksType>>((state) => state.cards.packs)\r\n    const show = useSelector<AppStoreType, boolean>(state => state.cards.showSuccessModal)\r\n    const [displayCreateModal, setDisplayCreateModal] = useState(false)\r\n    const [displayDeleteModal, setDisplayDeleteModal] = useState(false)\r\n    const [displayUpdateModal, setDisplayUpdateModal] = useState(false)\r\n    const [isMyPackChecked, setIsMyPackChecked] = useState<boolean>(false)\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    /*    useEffect(() => {\r\n            if (!isLoggedIn) {\r\n                dispatch(initializeUser())\r\n            }\r\n        }, [isLoggedIn])*/\r\n    useEffect(() => {\r\n\r\n        dispatch(getPacksTC())\r\n\r\n    }, [])\r\n\r\n    const showMyPacksHandler = () => {\r\n        dispatch(setIsMyPacksAC(!isMyPacks))\r\n    }\r\n\r\n    const createPack = (title: string) => {\r\n        dispatch(createPackTC(title))\r\n        setDisplayCreateModal(false)\r\n    }\r\n    const deletePack = (id: string) => {\r\n        dispatch(deletePackTC(id))\r\n        setDisplayDeleteModal(false)\r\n    }\r\n\r\n    const updatePack = (id: string, title: string) => {\r\n        dispatch(updatePackTC(id, title))\r\n        setDisplayUpdateModal(false)\r\n    }\r\n    /*  if (!isAuth){\r\n\r\n          return <Redirect to={'/login'} />\r\n      }*/\r\n\r\n\r\n    let top: number;\r\n    if (show) {\r\n        top = 100\r\n    } else {\r\n        top = -100\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={style.showMine}>\r\n                    <input type='checkbox' id='myPacks' checked={isMyPacks} onChange={showMyPacksHandler}/>\r\n                    <label htmlFor='myPacks'>Show my packs</label>\r\n                </div>\r\n            </div>\r\n            <h1>Packs</h1>\r\n            <SliderAnt/>\r\n            <div className={style.table}>\r\n                <table>\r\n                    <div className={`${style.tableItem} ${style.tableHeader}`}>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <div className={style.ceil}>Name <SearchComponent/></div>\r\n                            </th>\r\n                            <th>CardsCount</th>\r\n                            <th>\r\n                                <div className={style.ceil}>Update <SortByDate/></div>\r\n                            </th>\r\n                            <th><label>Add pack: <button onClick={() => setDisplayCreateModal(true)}\r\n                                                         disabled={status === 'loading'  || !isAuth}>Add</button>\r\n                                {displayCreateModal && <AddModal createItem={createPack}/>}\r\n\r\n                            </label></th>\r\n                            <th>Cards</th>\r\n                            <th>Learn</th>\r\n                        </tr>\r\n                        </thead>\r\n                    </div>\r\n                    <div className={style.tableItem}>\r\n                        <tbody>\r\n                        {packs.map((pack: any) => {\r\n\r\n                                return <tr key={pack._id}>\r\n                                    <td>{`${pack.name}`} </td>\r\n                                    <td>{`${pack.cardsCount}`}</td>\r\n                                    <td>{`${pack.updated}`}</td>\r\n                                    <td>\r\n                                        <div className={style.tableItem}>\r\n                                            <NavLink to={`/packs/${pack._id}/delete`}>\r\n                                                <button name={\"del\"} disabled={status === 'loading' || !isAuth}\r\n                                                        onClick={() => setDisplayDeleteModal(true)}>Delete\r\n                                                </button>\r\n                                            </NavLink>\r\n                                            <NavLink to={`/packs/${pack._id}/update`}>\r\n                                                <button name={\"update\"} disabled={status === 'loading' || !isAuth}\r\n                                                        onClick={() => setDisplayUpdateModal(true)}>Update\r\n                                                </button>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td><NavLink to={`/cards/${pack._id}`}>cards</NavLink></td>\r\n                                    <td><NavLink to={`/learn/${pack._id}`}>learn</NavLink></td>\r\n                                </tr>\r\n                            }\r\n                        )}\r\n                        </tbody>\r\n                    </div>\r\n                </table>\r\n\r\n            </div>\r\n            <PaginationComponent options={options}/>\r\n            <Modal title={\"Success\"} width={100} height={50} backgroundDiv={false} bgOnClick={() => {\r\n            }}\r\n                   CSSStyles={{\r\n                       top: top + \"px\",\r\n                       backgroundColor: \"lightgreen\"\r\n                   }}\r\n            />\r\n\r\n            <Route path={'/packs/:id/delete'} render={() => <DeletePackModal successClick={deletePack}/>}/>\r\n            <Route path={'/packs/:id/update'} render={() => <UpdatePackModal updateTitle={updatePack}/>}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Packs\r\n\r\n\r\n","import {cardsAPI, CardType, CreateCardRequestType, gradeCardAPI, packsAPI} from \"../api/api\";\r\nimport {getPacksTC, IsLoadingValuesType} from \"./packs-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"./store\";\r\n\r\ntype InitialStateType= typeof initialState\r\n\r\nconst initialState = {\r\n    status: \"idle\" as IsLoadingValuesType,\r\n    error: null as string|null,\r\n    cards: [] as Array<CardType>,\r\n    showSuccessModal: false\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionsType>\r\ntype ActionsType = ReturnType<typeof setErrorAC>\r\n    |ReturnType<typeof setIsLoadingAC>\r\n    |ReturnType<typeof getCardsAC>\r\n    |ReturnType<typeof setShowSuccessModalAC>\r\n\r\n\r\n\r\nexport function packCardsReducer(state=initialState, action:ActionsType):InitialStateType{\r\n    switch(action.type){\r\n        case \"SET-IS-LOADING\":\r\n            return {...state, status: action.status}\r\n\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n\r\n        case 'GET-CARDS':{\r\n            return {...state, cards: action.cards}\r\n        }\r\n        case \"SET-SHOW-SUCCESS-MODAL\":\r\n            return {...state, showSuccessModal: action.show}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//actions\r\nconst setErrorAC = (error: string | null) => ({type: \"SET-ERROR\", error} as const)\r\n\r\nconst setIsLoadingAC = (status: IsLoadingValuesType) => ({type: \"SET-IS-LOADING\", status} as const)\r\n\r\nconst getCardsAC = (cards: Array<CardType>) => ({type: 'GET-CARDS', cards} as const)\r\n\r\nconst setShowSuccessModalAC = (show: boolean) => (\r\n    {type: \"SET-SHOW-SUCCESS-MODAL\", show} as const)\r\n\r\nexport const getCardsTC = (cardsPackId:string):ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    cardsAPI.getCards(cardsPackId)\r\n        .then(data=>{\r\n        const cards = data.data.cards\r\n        dispatch(getCardsAC(cards))\r\n        dispatch(setIsLoadingAC(\"idle\"))\r\n    })\r\n        .catch(err => {\r\n        if (err.response) {\r\n            dispatch(setErrorAC(err.response.data.error))\r\n        } else {\r\n            dispatch(setErrorAC(\"Some error\"))\r\n        }\r\n        dispatch(setIsLoadingAC(\"idle\"))\r\n    })\r\n}\r\n\r\nexport const createCardTC = (model:CreateCardRequestType): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    cardsAPI.createCard(model)\r\n        .then(data => {\r\n            dispatch(getCardsTC(model.cardsPack_id))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n            dispatch(setShowSuccessModalAC(true))\r\n            setTimeout(() => {\r\n                dispatch(setShowSuccessModalAC(false))\r\n            }, 2000)\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\n\r\nexport const deleteCardTC = (id: string, packId: string): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    cardsAPI.deleteCard(id)\r\n        .then(res => {\r\n            dispatch(getCardsTC(packId))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const updateCardTC = (id: string,  question: string, answer: string, packId: string): ThunkType => (dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    cardsAPI.updateCard(id, question, answer)\r\n        .then(res => {\r\n            dispatch(getCardsTC(packId))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const gradeTC = (id: string, grade: number) => (dispatch:any) => {\r\n\r\n    gradeCardAPI.gradeCard(id, grade)\r\n\r\n        .then(res => {\r\n\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n            dispatch(setShowSuccessModalAC(true))\r\n            setTimeout(() => {\r\n                dispatch(setShowSuccessModalAC(false))\r\n            }, 2000)\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport style from './learnsPage.module.css'\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {CardType} from \"../../api/api\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {getCardsTC, gradeTC} from \"../../store/packCards-reducer\";\r\nimport {Modal} from \"./modal/modal\";\r\n\r\n\r\nexport const LearnPage = () => {\r\n    const {packId} = useParams<{ packId: string }>();\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.packCards.cards);\r\n    const [checkMode, setCheckMode] = useState(false);\r\n    const [numberCurrentCard, setNumberCurrentCard] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getCardsTC(packId))\r\n\r\n    },[])\r\n    const checkAnswer = () => {\r\n        setCheckMode(true);\r\n    }\r\n\r\n\r\n\r\n    const checkNextCard = () => {\r\n        setNumberCurrentCard(sortCards(cards)) ;\r\n        //numberCurrentCard < cards.length -1 ? setNumberCurrentCard(numberCurrentCard + 1) : setNumberCurrentCard(0);\r\n        setCheckMode(false);\r\n    }\r\n    const addGrade = (grade: number) => {\r\n        dispatch(gradeTC(cards[numberCurrentCard]._id, grade))\r\n    }\r\n    const sortCards = (cardsPack: CardType[]) => {\r\n        let gradeArr = cardsPack.map((card, index) => {\r\n            return {index, grade: card.grade ,chance: card.grade !==0 ? (5 - card.grade * Math.random()): 4}\r\n        });\r\n        let currentInd = 0;\r\n        let maxVal = 0;\r\n        gradeArr.forEach((el, index) => {\r\n            if( maxVal < el.chance) {\r\n                currentInd = el.index;\r\n                maxVal = el.chance\r\n            };\r\n        })\r\n        return currentInd\r\n    }\r\n    const show = useSelector<AppStoreType, boolean>(state => state.packCards.showSuccessModal)\r\n\r\n    let top: number;\r\n    if(show) {\r\n        top = 100\r\n    }else{\r\n        top = -100\r\n    }\r\n    return (\r\n        <div className={style.container}>\r\n            <div>\r\n                <div>\r\n                    <p className={style.text}>{cards[numberCurrentCard] ? cards[numberCurrentCard].question: 'Have no cards'}</p>\r\n                </div>\r\n                <div>\r\n                    <SuperButton onClick={checkAnswer} >check answer</SuperButton>\r\n                </div>\r\n            </div>\r\n            {checkMode &&\r\n            <div>\r\n                <p className={style.text}>{cards[numberCurrentCard] ? cards[numberCurrentCard].answer: 'Have no cards'}</p>\r\n                <div>\r\n                    <SuperButton onClick={() => {addGrade(1)}} className={style.button}>не знал</SuperButton>\r\n                    <SuperButton onClick={() => {addGrade(2)}} className={style.button}>забыл</SuperButton>\r\n                    <SuperButton onClick={() => {addGrade(3)}} className={style.button}>перепутал</SuperButton>\r\n                    <SuperButton onClick={() => {addGrade(4)}} className={style.button}>долго думал</SuperButton>\r\n                    <SuperButton onClick={() => {addGrade(5)}} className={style.button}>знал</SuperButton>\r\n                </div>\r\n                <div>\r\n                    <SuperButton className={style.button} onClick={checkNextCard}>След карточка</SuperButton>\r\n                </div>\r\n            </div>}\r\n            <Modal title={\"Success\"} width={100} height={50} backgroundDiv={false} bgOnClick={() => {}}\r\n                   CSSStyles={{\r\n                       top: top+\"px\",\r\n                       backgroundColor: \"lightgreen\"\r\n                   }}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, {FC, useState} from 'react';\r\nimport {Modal} from \"../modal\";\r\nimport SuperButton from \"../../../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../../common/SuperInput/SuperInput\";\r\n\r\ntype PropsType = {\r\n    createItem?: (question?: string, answer?: string) => void\r\n}\r\nexport const AddCardModal: FC<PropsType> = ({ createItem}:PropsType) => {\r\n\r\n    let [displayModal, setDisplayModal] = useState(true)\r\n    let [value, setValue] = useState(\"\")\r\n    let [value2, setValue2] = useState(\"\")\r\n\r\n    const createHandler = () => {\r\n        createItem && createItem(value, value2)\r\n        setDisplayModal(false)\r\n        setValue(\"\")\r\n         if(value2 !== \"\") setValue2(\"\")\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n            {displayModal && <Modal bgOnClick={() => setDisplayModal(true)}\r\n                                    title={\"Enter question and answer for card\"}\r\n                                    width={500} height={200} backgroundDiv={true}>\r\n                <input\r\n                    placeholder=\"Question\"\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.currentTarget.value)}\r\n                />\r\n                <input\r\n                    placeholder=\"Answer\"\r\n                    type=\"text\"\r\n                    value={value2}\r\n                    onChange={(e) => setValue2(e.currentTarget.value)}\r\n                />\r\n\r\n                <div style={{display: \"flex\", justifyContent: \"space-around\", marginTop: \"20px\"}}>\r\n                    <SuperButton onClick={createHandler}>Submit</SuperButton>\r\n\r\n                </div>\r\n            </Modal>}\r\n        </>\r\n    )\r\n}","import React, {FC, useState} from 'react';\r\nimport {Modal} from \"../modal\";\r\nimport SuperButton from \"../../../common/SuperButton/SuperButton\";\r\n\r\ntype PropsType = {\r\n    onDeleteCard: (id: string) => void\r\n    id: string\r\n    disabled?:boolean\r\n}\r\nexport const DeleteCardModal: FC<PropsType> = ({onDeleteCard, id}) => {\r\n    const [modal, setModal] = useState<boolean>(false)\r\n\r\n    return <Modal bgOnClick={() => setModal(true)}\r\n                  title={\"Are you sure?\"} width={500} height={200}\r\n                  backgroundDiv={true}>\r\n        <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n\r\n            <SuperButton onClick={() => onDeleteCard(id)}>Yes</SuperButton>\r\n            <SuperButton onClick={() => setModal(false)}>No</SuperButton>\r\n        </div>\r\n    </Modal>\r\n}","import React, {FC, useState} from 'react';\r\nimport {Modal} from \"../modal\";\r\nimport SuperButton from \"../../../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../../common/SuperInput/SuperInput\";\r\n\r\ntype PropsType = {\r\n    updateCard: (id: string, question: string, answer: string) => void\r\n    id: string\r\n    disabled?: boolean\r\n}\r\nexport const UpdateCardModal: FC<PropsType> = ({updateCard, id}: PropsType) => {\r\n\r\n    const [value, setValue] = useState(\"\")\r\n    const [value2, setValue2] = useState(\"\")\r\n\r\n    const updateHandler = () => {\r\n        updateCard && updateCard(id, value, value2)\r\n        setValue(\"\")\r\n        if (value2 !== \"\") setValue2(\"\")\r\n    }\r\n    return <Modal bgOnClick={() => {}}\r\n                  title={\"Enter new question and answer for card\"}\r\n                  width={500} height={300} backgroundDiv={true}>\r\n        <div style={{\r\n            display: \"flex\", flexDirection: \"column\",\r\n            alignItems: \"center\", marginTop: \"20px\"\r\n        }}>\r\n            <SuperInputText\r\n                placeholder=\"Question\"\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={(e) => setValue(e.currentTarget.value)}\r\n            />\r\n            <SuperInputText\r\n                placeholder=\"Answer\"\r\n                type=\"text\"\r\n                value={value2}\r\n                onChange={(e) => setValue2(e.currentTarget.value)}\r\n            />\r\n            <div style={{display: \"flex\"}}>\r\n                <SuperButton onClick={updateHandler}>Submit</SuperButton>\r\n               {/* <SuperButton onClick={notUpdateHandler}>Cancel</SuperButton>*/}\r\n            </div>\r\n        </div>\r\n    </Modal>\r\n}","import React, {useEffect, useState} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createCardTC, deleteCardTC, getCardsTC, updateCardTC} from \"../../store/packCards-reducer\";\nimport {IsLoadingValuesType} from \"../../store/packs-reducer\";\nimport style from \"./packs.module.css\";\nimport {AppStoreType} from \"../../store/store\";\nimport {CardType} from \"../../api/api\";\nimport {Modal} from \"./modal/modal\";\nimport {AddCardModal} from \"./modal/ModelsCards/AddCardModal\";\nimport {DeleteCardModal} from \"./modal/ModelsCards/DeleteCardModel\";\nimport {UpdateCardModal} from \"./modal/ModelsCards/UpdateCardModal\";\nimport s from '../common/Styles/common.module.css'\n\nexport function Cards() {\n    const {packId} = useParams<{ packId: string }>();\n    const dispatch = useDispatch()\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.packCards.cards)\n    const status = useSelector<AppStoreType, IsLoadingValuesType>(state => state.cards.status)\n    const show = useSelector<AppStoreType, boolean>(state => state.packCards.showSuccessModal)\n    const [displayCreateModal, setDisplayCreateModal] = useState(false)\n    const [displayDeleteModal, setDisplayDeleteModal] = useState(false)\n    const [displayUpdateModal, setDisplayUpdateModal] = useState(false)\n\n    useEffect(() => {\n        dispatch(getCardsTC(packId))\n    }, [dispatch])\n\n    const createCard = (question?: string, answer?: string) => {\n        dispatch(createCardTC({\n            cardsPack_id: packId,\n            question: question,\n            answer: answer ? answer : \"\"\n        }))\n        setDisplayCreateModal(false)\n    }\n\n    const deleteCard = (card_id: string) => {\n        dispatch(deleteCardTC(card_id, packId))\n        setDisplayDeleteModal(false)\n    }\n    const updateCard = (card_id: string, question: string, answer: string) => {\n        dispatch(updateCardTC(card_id, question, answer, packId))\n        setDisplayUpdateModal(false)\n    }\n    let top: number;\n    if (show) {\n        top = 100\n    } else {\n        top = -100\n    }\n    return (\n        <div className={s.page}>\n\n            <h1>Cards</h1>\n\n            <div className={style.table}>\n                <table>\n                    <div className={`${style.tableItem} ${style.tableHeader}`}>\n                        <thead>\n                        <tr>\n                            <th>Question</th>\n                            <th>Answer</th>\n                            <th>Grade</th>\n                            <th>Updated</th>\n                            <th><label>Add item:\n                                <button onClick={() => setDisplayCreateModal(true)}\n                                        disabled={status === 'loading'}>Add</button>\n                                {displayCreateModal && <AddCardModal createItem={createCard}/>}\n                            </label></th>\n                        </tr>\n                        </thead>\n                    </div>\n                    <div className={style.tableItem}>\n                        <tbody>\n                        {cards.map((card: CardType) => {\n                            return <tr key={card._id}>\n                                <td>{`${card.question}`} </td>\n                                <td>{`${card.answer}`}</td>\n                                <td>{`${card.grade}`}</td>\n                                <td>{`${card.updated}`}</td>\n                                <td>\n                                    <div className={style.tableItem}>\n\n                                        <button name={\"del\"} disabled={status === 'loading'}\n                                                onClick={() => setDisplayDeleteModal(true)}>\n                                            Delete\n                                        </button>\n                                        {displayDeleteModal && <DeleteCardModal id={card._id}\n                                                                                onDeleteCard={deleteCard}\n                                                                                disabled={status === 'loading'}/>}\n\n                                        <button name={\"update\"} disabled={status === 'loading'}\n                                                onClick={() => setDisplayUpdateModal(true)}>\n                                            Update\n                                        </button>\n                                        {displayUpdateModal && <UpdateCardModal id={card._id}\n                                                                                updateCard={updateCard}\n                                                                                disabled={status === 'loading'}/>}\n\n                                    </div>\n                                </td>\n                            </tr>\n                        })}\n                        </tbody>\n                    </div>\n                </table>\n                <Modal title={\"Success\"} width={100} height={50} backgroundDiv={false} bgOnClick={() => {\n                }}\n                       CSSStyles={{\n                           top: top + \"px\",\n                           backgroundColor: \"lightgreen\"\n                       }}\n                />\n            </div>\n        </div>\n    )\n}","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Error404 from \"../pages/404\";\r\nimport Login from \"../pages/login\";\r\nimport PasswordRecovery from \"../pages/password-recovery\";\r\nimport Profile from \"../pages/profile\";\r\nimport Registration from \"../pages/registration\";\r\nimport NewPassword from \"../pages/new-password\";\r\nimport Packs from \"../pages/packs\";\r\nimport {LearnPage} from \"../pages/learnsPage\";\r\nimport {Cards} from \"../pages/cards\";\r\n\r\n\r\n\r\n\r\n\r\nexport const PATH = {\r\n    login: '/login',\r\n    passwordRecovery: '/passwordRecovery',\r\n    profile:'/profile',\r\n    registration:'/registration',\r\n    newPassword:'/newPassword',\r\n    cards: '/cards',\r\n    packs: '/packs'\r\n\r\n}\r\n\r\nfunction Routes() {\r\n\r\n    return (\r\n        <div >\r\n            <Switch>\r\n\r\n                <Route path={'/'} exact render={() => <Redirect to={'/login'}/>}/>\r\n                <Route path={'/login'} render={() => <Login/>}/>\r\n                <Route path={'/passwordRecovery'} exact render={() => <PasswordRecovery/>}/>\r\n                <Route path={'/profile'} exact render={() => <Profile/>}/>\r\n                <Route path={'/registration'} exact render={() => <Registration/>}/>\r\n                <Route path={'/newPassword/:resetPasswordToken'}  render={() => <NewPassword/>}/>\r\n                <Route path={'/newPassword/'} exact render={ () => <PasswordRecovery/>}/>\r\n                <Route path={'/packs'} render={() => <Packs/>}/>\r\n               {/* <Route path={'/cards'} render={() => <Cards/>}/>*/}\r\n                <Route path={'/cards/:packId'}  render={() => <Cards/>}/>\r\n                <Route path={'/learn/:packId'}  render={() => <LearnPage/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React, {useState} from \"react\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\n\r\nimport s from './Header.module.css';\r\nimport {PATH} from \"../routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {logout} from \"../../store/login-reducer\";\r\n\r\nfunction Header() {\r\n    const [activeMenu, setActiveMenu] = useState<boolean>(false);\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const toggle = () => {\r\n        setActiveMenu(!activeMenu)\r\n    }\r\n\r\n  /*  if (!isAuth){\r\n\r\n        return <Redirect to={'/login'} />\r\n    }*/\r\n    return (\r\n        <div className={s.sidebar}>\r\n            <div className={s.menu} onClick={toggle}>&#9776;</div>\r\n            <div className={`${s.containerMenuLinks} ${activeMenu && s.activeMenu}`}>\r\n                <div className = {s.links}>\r\n         {/*       <NavLink to={PATH.passwordRecovery} className={s.inactive} activeClassName={s.active}>  Password\r\n                    recovery  </NavLink>*/}\r\n                <NavLink to={PATH.profile} className={s.inactive} activeClassName={s.active}>  Profile  </NavLink>\r\n                <NavLink to={PATH.registration} className={s.inactive}\r\n                         activeClassName={s.active}>  Registration  </NavLink>\r\n               {/* <NavLink to={PATH.newPassword} className={s.inactive}\r\n                         activeClassName={s.active}>  Entering a new password  </NavLink>*/}\r\n                {isAuth ? <button onClick={() => dispatch(logout())}>Log out</button> :\r\n                    <NavLink to={'/login'}>Login</NavLink>}\r\n                <NavLink to={PATH.packs} className={s.inactive} activeClassName={s.active}>  Packs  </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Routes from \"./components/routes/Routes\";\r\nimport Header from \"./components/header/Header\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport 'rc-slider/assets/index.css';\r\nimport {getPacksTC} from \"./store/packs-reducer\";\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                    <Header/>\r\n                    <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nconst initState = {\r\n\r\n};\r\n\r\nexport const errorReducer = (state = initState, action: any): any => {\r\n    switch (action.type) {\r\n        case \"\": {\r\n            return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const errorAC = (): any => {};","type InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    userId: null as string | null,\r\n    userName: null as string | null,\r\n    avatar: '',\r\n    publicCardPacksCount: null as number | null // количество колод\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                userName: action.userName,\r\n                publicCardPacksCount: action.publicCardPacksCount,\r\n                userId: action.userId\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const profileAC = (userName: string | null, publicCardPacksCount: number | null, userId: string | null) => (\r\n    {type: 'SET-USER-DATA', userName, publicCardPacksCount, userId} as const)\r\n\r\ntype ActionType = ReturnType<typeof profileAC>","export type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState: AppInitialStateType = {\r\n    status: 'succeeded',\r\n    error: null,\r\n    UserData: {\r\n        _id: \"\",\r\n        email: null as string | null,\r\n        name: null as string | null,\r\n        avatar: null as string | null,\r\n        publicCardPacksCount: null as number | null,\r\n        created: null as Date | null,\r\n        updated: null as Date | null,\r\n        isAdmin: false,\r\n        verified: false, // подтвердил ли почту\r\n        rememberMe: false,\r\n    }\r\n}\r\n\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: ActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_APP_STATUS':\r\n            return {...state, status: action.status}\r\n        case 'SET_APP_ERROR':\r\n            return {...state, error: action.error}\r\n        case \"SET_USER_DATA\":\r\n            return {...state, UserData: action.userData}\r\n        case \"SET_CARDS_PACK_TOTAL_COUNT\":\r\n            if (state.UserData) {\r\n                return {\r\n                    ...state, UserData: {\r\n                        ...state.UserData, publicCardPacksCount: action.publicCardPacksCount\r\n                    }\r\n                }\r\n            } else return state\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) =>\r\n    ({type: 'SET_APP_STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) =>\r\n    ({type: 'SET_APP_ERROR', error} as const)\r\nexport const setUserDataAC = (userData: UserDataType) => ({type: 'SET_USER_DATA', userData} as const)\r\nexport const setPublicCardPacksCountAC = (publicCardPacksCount: number | null) =>\r\n    ({type: 'SET_CARDS_PACK_TOTAL_COUNT', publicCardPacksCount} as const)\r\n\r\n\r\n\r\nexport type setAppStatusACType = ReturnType<typeof setAppStatusAC>\r\nexport type setAppErrorACType = ReturnType<typeof setAppErrorAC>\r\nexport type setUserDataACType = ReturnType<typeof setUserDataAC>\r\nexport type setPublicCardPacksCountACType = ReturnType<typeof setPublicCardPacksCountAC>\r\n\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string | null,\r\n    name: string | null,\r\n    avatar: string | null,\r\n    publicCardPacksCount: number | null,\r\n    created: Date | null,\r\n    updated: Date | null,\r\n    isAdmin: boolean,\r\n    verified: boolean, // подтвердил ли почту\r\n    rememberMe: boolean,\r\n} | null\r\n\r\nexport type AppInitialStateType = {\r\n    error: string | null\r\n    status: RequestStatusType\r\n    UserData: UserDataType\r\n    userId?: string\r\n}\r\n\r\ntype ActionsType =\r\n    setAppStatusACType\r\n    | setAppErrorACType\r\n    | setUserDataACType\r\n    | setPublicCardPacksCountACType\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {errorReducer} from \"./error-reducer\";\r\nimport {passwordRecoveryReducer} from \"./password-recovery-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {newPasswordReducer} from \"./new-password-reducer\";\r\nimport thunk from \"redux-thunk\"\r\nimport packsReducer from \"./packs-reducer\";\r\nimport {packCardsReducer} from \"./packCards-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    app:appReducer,\r\n    login:loginReducer,\r\n    error:errorReducer,\r\n    passwordRecovery:passwordRecoveryReducer,\r\n    profile:profileReducer,\r\n    registration:registrationReducer,\r\n    newPassword:newPasswordReducer,\r\n    cards: packsReducer,\r\n    packCards: packCardsReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\nconsole.log(store.getState())","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnLogout\":\"Header_btnLogout__1T18L\",\"sidebar\":\"Header_sidebar__1WlgA\",\"menu\":\"Header_menu__3GX8V\",\"containerMenuLinks\":\"Header_containerMenuLinks__1BEt2\",\"activeMenu\":\"Header_activeMenu__3Ivds\",\"links\":\"Header_links__3p3Yx\",\"inactive\":\"Header_inactive__2an89\",\"active\":\"Header_active__1ekGk\",\"text\":\"Header_text__XOPPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"packs_table__VpiCL\",\"ceil\":\"packs_ceil__9uezQ\",\"showMine\":\"packs_showMine__1Mjfj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"learnsPage_container__S83tX\",\"text\":\"learnsPage_text__2P9Fo\",\"button\":\"learnsPage_button__2rep9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"new-password_container__1vSL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWindow\":\"modal_modalWindow__1Om_N\",\"buttonsStyle\":\"modal_buttonsStyle__Al9wh\",\"backgroundDiv\":\"modal_backgroundDiv__UxTlb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInput_superInput__w5LvN\",\"errorInput\":\"SuperInput_errorInput__AFSy-\",\"error\":\"SuperInput_error__27PeI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"password-recovery_block__33OGQ\",\"container\":\"password-recovery_container__2mPeV\",\"text\":\"password-recovery_text__YWa_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperPassword_superInput__qYmCo\",\"errorInput\":\"SuperPassword_errorInput__1wcV-\",\"error\":\"SuperPassword_error__2aMXW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"PaginationComponent_pagination__1l0u_\",\"active\":\"PaginationComponent_active__2NdFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3rUuo\",\"spanClassName\":\"SuperCheckbox_spanClassName__MefLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1slZT\",\"red\":\"SuperButton_red__1l6f1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"common_page__1R8ix\"};"],"sourceRoot":""}